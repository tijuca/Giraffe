#!/bin/bash
#
# zarafa-monitor Zarafa Collaboration Platform's Quota Monitor
#
# chkconfig: 345 86 24
# description: The Zarafa Quota Monitor watches the store sizes \
#              of users, and sends warning emails when limits are exceeded.
# processname: /usr/bin/zarafa-monitor
# config: /etc/zarafa/monitor.cfg
# pidfile: /var/run/zarafa-monitor.pid

### BEGIN INIT INFO
# Provides: zarafa-monitor
# Required-Start: $local_fs $network $remote_fs $syslog
# Required-Stop: $local_fs $network $remote_fs $syslog
# Should-Start: zarafa-server
# Should-Stop: zarafa-server
# Short-Description: Zarafa Collaboration Platform's Quota Monitor
# Description: The Zarafa Quota Monitor watches the store sizes
#              of users, and sends warning emails when limits are exceeded.
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

MONITORCONFIG=/etc/zarafa/monitor.cfg
MONITORPROGRAM=/usr/bin/zarafa-monitor
monitor=`basename $MONITORPROGRAM`
LOCKFILE=/var/lock/subsys/$monitor
PIDFILE=/var/run/$monitor.pid
RETVAL=0

# Sanity checks.
[ -x $MONITORPROGRAM ] || exit 0

MONITORCONFIG_OPT=""
[ ! -z $MONITORCONFIG -a -f $MONITORCONFIG ] && MONITORCONFIG_OPT="-c $MONITORCONFIG"

[ -f /etc/sysconfig/zarafa ] && . /etc/sysconfig/zarafa
if [ -z "$ZARAFA_LOCALE" ]; then
	ZARAFA_LOCALE="C"
fi

start() {
	start_daemon --pidfile "$PIDFILE" --lockfile "$LOCKFILE" $monitor
	RETVAL=$?

	return $RETVAL
}

stop() {
	stop_daemon --pidfile "$PIDFILE" --lockfile "$LOCKFILE" $monitor
	RETVAL=$?

	return $RETVAL
}

restart() {
	stop
	start
}

reload() {
	msg_reloading $monitor
	stop_daemon --pidfile "$PIDFILE" -HUP -- $monitor
	RETVAL=$?

	return $RETVAL
}

# See how we were called.
case "$1" in
    start)
		start
		;;
    stop)
		stop
		;;
    reload)
		reload
		;;
    restart|force-reload)
		restart
		;;
    condstop)
		if [ -e "$LOCKFILE" ]; then
		stop
		fi
		;;
    condrestart|try-restart)
		if [ -e "$LOCKFILE" ]; then
	        restart
		fi
		;;
    condreload)
		if [ -e "$LOCKFILE" ]; then
		reload
		fi
		;;
    status)
		status --pidfile "$PIDFILE" $monitor
		RETVAL=$?
		;;
    *)
		msg_usage "${0##*/} {start|stop|reload|restart|condstop|condrestart|condreload|status}"
		RETVAL=1
esac

exit $RETVAL
