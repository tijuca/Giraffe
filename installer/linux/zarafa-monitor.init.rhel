#!/bin/bash
#
# zarafa-monitor Zarafa Collaboration Platform's Quota Monitor
#
# chkconfig: 345 86 24
# description: The Zarafa Quota Monitor watches the store sizes \
#              of users, and sends warning emails when limits are exceeded.
# processname: /usr/bin/zarafa-monitor
# config: /etc/zarafa/monitor.cfg
# pidfile: /var/run/zarafa-monitor.pid

### BEGIN INIT INFO
# Provides: zarafa-monitor
# Required-Start: $local_fs $network $remote_fs $syslog
# Required-Stop: $local_fs $network $remote_fs $syslog
# Should-Start: zarafa-server
# Should-Stop: zarafa-server
# Short-Description: Zarafa Collaboration Platform's Quota Monitor
# Description: The Zarafa Quota Monitor watches the store sizes
#              of users, and sends warning emails when limits are exceeded.
### END INIT INFO

MONITORCONFIG=/etc/zarafa/monitor.cfg
MONITORPROGRAM=/usr/bin/zarafa-monitor

# Sanity checks.
[ -x $MONITORPROGRAM ] || exit 0

MONITORCONFIG_OPT=""
[ ! -z $MONITORCONFIG -a -f $MONITORCONFIG ] && MONITORCONFIG_OPT="-c $MONITORCONFIG"

[ -f /etc/sysconfig/zarafa ] && . /etc/sysconfig/zarafa
if [ -z "$ZARAFA_LOCALE" ]; then
	ZARAFA_LOCALE="C"
fi

# Source function library.
. /etc/rc.d/init.d/functions

RETVAL=0
monitor=`basename $MONITORPROGRAM`
lockfile=/var/lock/subsys/$monitor
pidfile=/var/run/$monitor.pid

start() {
	# Start in background, always succeeds
	echo -n $"Starting $monitor: "
	export LC_ALL=$ZARAFA_LOCALE
	export LANG=$ZARAFA_LOCALE
	daemon $MONITORPROGRAM $MONITORCONFIG_OPT
	RETVAL=$?
	unset LC_ALL LANG
	echo
	[ $RETVAL -eq 0 ] && touch $lockfile

	return $RETVAL
}

stop() {
	echo -n $"Stopping $monitor: "
	killproc $MONITORPROGRAM
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] && rm -f $lockfile $pidfile

	return $RETVAL
}

restart() {
	stop
	start
}

reload() {
	echo -n $"Restarting $monitor: "
	killproc $MONITORPROGRAM -SIGHUP
	RETVAL=$?
	echo

	return $RETVAL
}

# See how we were called.
case "$1" in
    start)
		start
		;;
    stop)
		stop
		;;
    status)
		status $monitor
		RETVAL=$?
		;;
    restart|force-reload)
		restart
		;;
    condrestart|try-restart)
		if [ -f ${pidfile} ]; then
			stop
			start
		fi
		;;
    reload)
		reload
		;;
    *)
		echo $"Usage: $monitor {start|stop|status|reload|restart|condrestart|force-reload|try-restart}"
		RETVAL=1
		;;
esac

exit $RETVAL
