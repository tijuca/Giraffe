##############################################################
# ARCHIVER SETTINGS

# Server unix socket location
server_socket	=	file:///var/run/zarafa

# disable archiving momentarily by setting this to 'no'
archive_enable	=	yes

# archive messages older than N days
archive_after	=	30

# Stubbing messages requires a multi-server environment
stub_enable	=	no

# Unread messages can be skipped in the stubbing process
stub_unread	=	no

# Only stub messages after N days, 0 for the same as archive_after
stub_after	=	0

# Delete archives messages from the original server. Only archived messages can be deleted.
delete_enable	=	no

# Also delete unread messages from the original server
delete_unread	=	no

# Only delete messages after N days, 0 for the same as archive_after
delete_after	=	0

# Purge messages from the archive server(s).
purge_enable	=	no

# Only purge messages after N days, 0 for the same as archive_after
# Default: 2555 (7 years)
purge_after	=	2555

# Keep track of old archived messages whenever a message gets modified
# through a stub. This causes a history of changes to be created.
track_history	=	no

# Specify what action should be taken on archive messages whose primary message
# has been deleted. The options are 'store' and 'delete', meaning store the
# archived message in a special 'Deleted' folder or delete the archived messages
# respectively.
# Default: store
cleanup_action	=	store

# Specify if items that are cleaned up from the archive are at least the age
# that is specified in the purge_after setting. This is to avoid messages 
# being deleted from the archive when they where deleted from the primary
# store by a delete operation.
# Note that setting to yes, will cause a cleanup run to seemingly do nothing.
# A rule of thumb is to set this to the same value as delete_enable. So when
# delete_enable is set to yes, make sure cleanup_follow_purge_after is also
# set to yes.
# Default: no
cleanup_follow_purge_after	=	no

# Specify whether on each archive run an auto-attach run is performed in order
# to match the attached archives to the requested state as specified in LDAP or
# ADS.
# Default: no
enable_auto_attach = no

# Specify whether an auto attached archive will be granted write permissions
# for the user it's attached to.
# Default: yes
auto_attach_writable = yes

##############################################################
# ARCHIVER LOG SETTINGS

# Logging method (syslog, file)
log_method	=	file

# Loglevel (0=no logging, 5=full logging)
log_level	=	2

# Logfile for log_method = file, use '-' for stderr
log_file	=	/var/log/zarafa/archiver.log

# Log timestamp - prefix each log line with timestamp in 'file' logging mode
log_timestamp	=	1

##############################################################
# ARCHIVER SSL LOGIN SETTINGS
# 
# Note: server_socket must be set to https://servername:portname/zarafa
#       to use this type of login method

# Login to the Zarafa server using this SSL Key
sslkey_file = /etc/zarafa/ssl/archiver.pem

# The password of the SSL Key
sslkey_pass = replace-with-archiver-cert-password

##############################################################
# ARCHIVER INSTANCE PROTECTION SETTINGS

# Control pid file
# Defualt: /var/run/zarafa-archiver.pid
pid_file = /var/run/zarafa-archiver.pid

##############################################################
# ARCHIVER MYSQL SETTINGS

# MySQL hostname to connect to for database access
mysql_host		= localhost

# MySQL port to connect with (usually 3306)
mysql_port		= 3306

# The user under which we connect with MySQL
mysql_user		= root

# The password for the user (leave empty for no password)
mysql_password		= 

# Override the default MySQL socket to access mysql locally
# Works only if the mysql_host value is empty or 'localhost'
mysql_socket		=

# Database to connect to
mysql_database		= zarafa-archiver
