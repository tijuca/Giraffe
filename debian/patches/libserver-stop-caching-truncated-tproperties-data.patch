From: Jan Engelhardt <jengelh@inai.de>
Date: Thu, 7 Mar 2019 19:41:51 +0100
Subject: libserver: stop caching truncated tproperties data

The cache may be become polluted with 255-char data. It always did
this, but until c0b1f07, the cache was not read.

Fixes: kopanocore-8.6.80-869-gc0b1f0794
References: KC-1417
---
 provider/libserver/ECStoreObjectTable.cpp | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/provider/libserver/ECStoreObjectTable.cpp b/provider/libserver/ECStoreObjectTable.cpp
index adb973c..9349de0 100644
--- a/provider/libserver/ECStoreObjectTable.cpp
+++ b/provider/libserver/ECStoreObjectTable.cpp
@@ -686,7 +686,7 @@ ECRESULT ECStoreObjectTable::QueryRowDataByRow(ECGenericObjectTable *lpThis,
 				if ((pv.ulPropTag & MVI_FLAG) == MVI_FLAG)
 					// Get rid of the MVI_FLAG
 					pv.ulPropTag &= ~MVI_FLAG;
-				else
+				else if (!propVal_is_truncated(&pv))
 					cache->SetCell(&sKey, iterColumns->first, &pv);
                 // Remove from mapColumns so we know that we got a response from SQL
 				iterColumns = mapColumns.erase(iterColumns);
@@ -698,6 +698,8 @@ ECRESULT ECStoreObjectTable::QueryRowDataByRow(ECGenericObjectTable *lpThis,
 		auto &pv = lpsRowSet->__ptr[ulRowNum].__ptr[col.second];
 		assert(pv.ulPropTag == 0);
 		CopyEmptyCellToSOAPPropVal(soap, col.first, &pv);
+		if (propVal_is_truncated(&pv))
+			continue;
 		cache->SetCell(&sKey, col.first, &pv);
 	}
 	return erSuccess;
@@ -852,7 +854,7 @@ ECRESULT ECStoreObjectTable::QueryRowDataByColumn(ECGenericObjectTable *lpThis,
 					m.ulPropTag = iterColumns->first;
 				if ((m.ulPropTag & MVI_FLAG) == MVI_FLAG)
 					m.ulPropTag &= ~MVI_FLAG;
-				else
+				else if (!propVal_is_truncated(&m))
 					cache->SetCell(const_cast<sObjectTableKey *>(&iterObjIds->first), iterColumns->first, &m);
 
 				setDone.emplace(iterObjIds->second, iterColumns->second);
@@ -876,6 +878,8 @@ ECRESULT ECStoreObjectTable::QueryRowDataByColumn(ECGenericObjectTable *lpThis,
 			if (soap == nullptr && pv.ulPropTag != 0)
 				FreePropVal(&pv, false);
 			CopyEmptyCellToSOAPPropVal(soap, col.first, &pv);
+			if (propVal_is_truncated(&pv))
+				continue;
 			cache->SetCell(const_cast<sObjectTableKey *>(&ob.first), col.first, &pv);
 		}
 	return erSuccess;
