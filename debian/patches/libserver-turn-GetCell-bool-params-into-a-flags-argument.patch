From: Jan Engelhardt <jengelh@inai.de>
Date: Wed, 6 Mar 2019 22:16:39 +0100
Subject: libserver: turn GetCell bool params into a flags argument

---
 provider/libserver/ECCacheManager.cpp | 4 ++--
 provider/libserver/ECCacheManager.h   | 7 ++++++-
 provider/libserver/cmd.cpp            | 2 +-
 3 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/provider/libserver/ECCacheManager.cpp b/provider/libserver/ECCacheManager.cpp
index bd905b9..9c4f5d5 100644
--- a/provider/libserver/ECCacheManager.cpp
+++ b/provider/libserver/ECCacheManager.cpp
@@ -1193,7 +1193,7 @@ ECRESULT ECCacheManager::GetObjectFlags(unsigned int ulObjId, unsigned int *ulFl
 
 ECRESULT ECCacheManager::GetCell(const sObjectTableKey *lpsRowItem,
     unsigned int ulPropTag, struct propVal *lpDest, struct soap *soap,
-    bool truncate)
+    unsigned int flags)
 {
     ECRESULT er = erSuccess;
     ECsCells *sCell;
@@ -1208,7 +1208,7 @@ ECRESULT ECCacheManager::GetCell(const sObjectTableKey *lpsRowItem,
 	if(er != erSuccess)
 	    goto exit;
 
-    if (!sCell->GetPropVal(ulPropTag, lpDest, soap, truncate)) {
+	if (!sCell->GetPropVal(ulPropTag, lpDest, soap, flags & KC_GETCELL_TRUNCATE)) {
 		if (!sCell->GetComplete()) {
             // Object is not complete, and item is not in cache. We simply don't know anything about
 			// the item, so return NOT_FOUND.
diff --git a/provider/libserver/ECCacheManager.h b/provider/libserver/ECCacheManager.h
index 5a3f9ba..531f8c8 100644
--- a/provider/libserver/ECCacheManager.h
+++ b/provider/libserver/ECCacheManager.h
@@ -231,6 +231,11 @@ namespace KC {
 
 #define CACHE_NO_PARENT 0xFFFFFFFF
 
+enum {
+	KC_GETCELL_TRUNCATE = 1 << 0,
+	KC_GETCELL_NOTRUNC  = 0,
+};
+
 class ECCacheManager final {
 public:
 	ECCacheManager(std::shared_ptr<ECConfig>, ECDatabaseFactory *lpDatabase);
@@ -278,7 +283,7 @@ public:
 	ECRESULT GetEntryListFromObjectList(ECListInt* lplObjectList, struct soap *soap, struct entryList **lppEntryList);
 
 	// Table data functions (pure cache functions, they will never access the DB themselves. Data must be provided through Set functions)
-	ECRESULT GetCell(const sObjectTableKey *, unsigned int tag, struct propVal *, struct soap *, bool truncated = true);
+	ECRESULT GetCell(const sObjectTableKey *, unsigned int tag, struct propVal *, struct soap *, unsigned int flags = KC_GETCELL_TRUNCATE);
 	ECRESULT SetCell(const sObjectTableKey *, unsigned int tag, const struct propVal *);
 	ECRESULT UpdateCell(unsigned int ulObjId, unsigned int ulPropTag, int lDelta);
 	ECRESULT UpdateCell(unsigned int ulObjId, unsigned int ulPropTag, unsigned int ulMask, unsigned int ulValue);
diff --git a/provider/libserver/cmd.cpp b/provider/libserver/cmd.cpp
index d3e2b3f..bb8071b 100644
--- a/provider/libserver/cmd.cpp
+++ b/provider/libserver/cmd.cpp
@@ -2670,7 +2670,7 @@ static ECRESULT LoadObject(struct soap *soap, ECSession *lpecSession,
 		for (auto proptag : proptags) {
 			sObjectTableKey key(ulObjId, 0);
 			struct propVal prop;
-			er = cache->GetCell(&key, proptag, &prop, soap, false);
+			er = cache->GetCell(&key, proptag, &prop, soap, KC_GETCELL_NOTRUNC);
 			if (er != erSuccess)
 				return er;
 			if (PROP_TYPE(prop.ulPropTag) == PT_ERROR)
