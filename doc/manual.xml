<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<book>
  <bookinfo>
    <date>April 2014</date>

    <releaseinfo>Version 7.2</releaseinfo>

	<productname>Zarafa</productname>
	<productnumber>7.2</productnumber>

	<title>Zarafa manual pages</title>
  </bookinfo>

  <reference>
	<title>Zarafa user reference</title>

	<partintro>
	  <para>This document lists all available Zarafa commands and
	  configuration files.</para>
	</partintro>

	<refentry>
	  <refmeta>
		<refentrytitle>zarafa</refentrytitle>
		<manvolnum>7</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa</refname>
		<refpurpose>Zarafa server overview.</refpurpose>
	  </refnamediv>

	  <refsection>
		<title>Description</title>

		<para>Zarafa is a full-featured e-mail and groupware
		solution, focused towards clients using the MAPI standard.
		The Zarafa suite consists of the following parts:
		</para>

		<variablelist>
		  <varlistentry>
			<term>zarafa-server</term>
			<listitem>
			  <para>The main server process, accepting client
			  connections, and managing storage and retrieval of data
			  from the database.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-spooler</term>
			<listitem>
			  <para>The outgoing e-mail spooler. This service makes
			  sure that e-mails sent by clients are converted to
			  internet e-mail and forwarded to an SMTP server.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-dagent</term>
			<listitem>
			  <para>The Zarafa delivery agent is called by your
			  MTA to deliver an incoming e-mail message into a
			  user's inbox.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-admin</term>
			<listitem>
			  <para>The admin program can be started from the
			  command line to perform various administrational
			  tasks such add creating users, and managing groups.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-monitor</term>
			<listitem>
			  <para>The monitor server process monitors user
			  stores for quota limits. When a user goes over the
			  warning quota level, zarafa-monitor will issue
			  a warning e-mail.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-gateway</term>
			<listitem>
			  <para>The gateway server process enables POP3 and/or
			  IMAP connectivity to the Zarafa server. Users with other
			  non-Outlook or webaccess clients can still retrieve
			  their e-mail from the server.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-passwd</term>
			<listitem>
			  <para>The passwd program can be started from the
			  command line to update the user password when the server
			  is running with dbplugin.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-fsck</term>
			<listitem>
			  <para>The fsck program can be started from the command
			  line to check and possibly fix broken items in your
			  calendar or tasks folder.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-backup</term>
			<listitem>
			  <para>The backup tool creates an incremental dump of a
			  store. The data can be restored by the
			  <command>zarafa-restore</command> tool. This tool can be
			  used as a brick-level-backup. It can not be used as a
			  disaster-recovery tool.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-restore</term>
			<listitem>
			  <para>The restore tool reads data from a backup create
			  by <command>zarafa-backup</command>. You can restore
			  single items or folders. To restore a complete store,
			  you can use the example script found in
			  <filename>/usr/share/zarafa/zarafa-backup-helpers</filename>.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-ical</term>
			<listitem>
			  <para>The iCal/CalDAV gateway enables users to
			  retrieve their own Zarafa calendar using the iCalendar
			  standard.  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-licensed</term>
			<listitem>
			  <para>The zarafa-licensed daemon is used for licensing query
			  information from non-free parts of the zarafa product. You
			  must run this daemon if you wish to use non-free components of
			  the zarafa product, like access from Windows environments.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-report</term>
			<listitem>
			  <para>A reporting program used by zarafa-licensed to send
			  license reports to the zarafa-server using a secured connection.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-stats</term>
			<listitem>
			  <para>A simple program that dumps some statistics the
			  zarafa-server program collects.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-cfgchecker</term>
			<listitem>
			  <para>This program tests for common configuration errors
			  for a given config file.`
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-search</term>
			<listitem>
			  <para>The zarafa-search daemon is used to index all messages
			  for all users in the zarafa-server. Indexing messages greatly
			  enhances the search performance of the zarafa-server.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>zarafa-ws</term>
			<listitem>
			  <para>The Zarafa Web Services server process enables EWS
			  connectivity to the Zarafa server. Users with other
			  non-Windows Outlook or WebApp clients can still retrieve
			  their e-mail and calendars from the server.
			  </para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		<citerefentry>
		  <refentrytitle>zarafa-server</refentrytitle>
		  <manvolnum>8</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-spooler</refentrytitle>
		  <manvolnum>8</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-dagent</refentrytitle>
		  <manvolnum>8</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-admin</refentrytitle>
		  <manvolnum>8</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-monitor</refentrytitle>
		  <manvolnum>8</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-gateway</refentrytitle>
		  <manvolnum>8</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-passwd</refentrytitle>
		  <manvolnum>1</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-fsck</refentrytitle>
		  <manvolnum>1</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-backup</refentrytitle>
		  <manvolnum>8</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-restore</refentrytitle>
		  <manvolnum>8</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-ical</refentrytitle>
		  <manvolnum>8</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-licensed</refentrytitle>
		  <manvolnum>8</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-report</refentrytitle>
		  <manvolnum>8</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-stats</refentrytitle>
		  <manvolnum>1</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-cfgchecker</refentrytitle>
		  <manvolnum>8</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-search</refentrytitle>
		  <manvolnum>8</manvolnum>
		</citerefentry>,
		<citerefentry>
		  <refentrytitle>zarafa-ws</refentrytitle>
		  <manvolnum>8</manvolnum>
		</citerefentry>		</para>
	  </refsection>
	</refentry>
<!--
  -+-+-
	Zarafa Dagent manual page (5.0 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-dagent</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-dagent</refname>
		<refpurpose>Deliver mails to Zarafa.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-dagent</command>
		  <arg choice="opt"
			   rep="repeat"><replaceable>OPTION</replaceable></arg>
		  <arg choice="plain"><replaceable>RECIPIENT</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>With <command>zarafa-dagent</command>, mail messages can
		be imported from Internet Mail format to Zarafa. The message
		is read from standard in and delivered to the Zarafa server in
		the mailbox of <parameter>RECIPIENT</parameter>. You can alter
		source and destination of this mail with various
		options.</para>

		<para>The <parameter>RECIPIENT</parameter> value is resolved by
		zarafa-dagent prior to delivery, and therefore accepts any unique
		identifier for the recipient. In practice it is most useful to pass
		the emailaddress of the user as the <parameter>RECIPIENT</parameter>
		parameter since it is always unique (Note that login names are
		sometimes not unique since group names may overlap).
		</para>

		<para>The delivery agent will accept and deliver the message
		piped through it or specified by <option>-f</option> and exit
		immediately.</para>

		<para>The delivery agent can also run as LMTP daemon.</para>
	  </refsection>

	  <refsection>
		<title>Options</title>

		<para>Various options are possible. None of these options are
		required.</para>

		<variablelist>
		  <varlistentry>
			<term><option>--config</option></term>
			<term>
			  <option>-c</option>
			  <replaceable>file</replaceable>
			</term>
			<listitem>
			  <para>Use a configuration file. See the
			  <citerefentry><refentrytitle>CONFIG</refentrytitle></citerefentry>
			  section for more information.</para>
			  <para>Default: <replaceable>/etc/zarafa/dagent.cfg</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--deamonize</option></term>
			<term>
			  <option>-d</option>
			</term>
			<listitem>
			  <para>Daemonize after starting. This implies --listen and is
    		  only used when LMTP is active.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--junk</option></term>
			<term><option>-j</option></term>
			<listitem>
			  <para>Deliver in the Junk mail folder of the specified
			  user.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--file</option></term>
			<term>
			  <option>-f</option>
			  <replaceable>file</replaceable>
			</term>
			<listitem>
			  <para>Read e-mail input from file. When not given, input
			  is read from standard in.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--host</option></term>
			<term>
			  <option>-h</option>
			  <replaceable>path</replaceable>
			</term>
			<listitem>
			  <para>Connect to the Zarafa server through
			  <replaceable>path</replaceable>, e.g.
			  <filename>file:///path/to/socket</filename>. Default:
			  <filename>file:///var/run/zarafa</filename>.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--listen</option></term>
			<term>
			  <option>-l</option>
			</term>
			<listitem>
			  <para>Listen for incoming LMTP connections</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>-q</option></term>
			<listitem>
			  <para>Use qmail style exit codes. Please see the
			  <citerefentry><refentrytitle>EXITCODES</refentrytitle></citerefentry>
			  section for more information.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>-s</option></term>
			<listitem>
			  <para>Silent mode. No output will be printed by the
			  DAgent, except when wrong parameters are used to call
			  zarafa-dagent.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>-v</option></term>
			<listitem>
			  <para>Verbose mode. More output can be printed when
			  processing the e-mail for rules.</para><para>When given
			  a second time, more debugging output will be
			  printed.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>-e</option></term>
			<listitem>
			  <para>Strip the domain from the given username. For
			  example, when the DAgent is called with '-e' and the
			  username is 'name@domain.com', the delivery will be started
			  for user 'name' instead of 'name@domain.com'.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>-R</option></term>
			<listitem>
			  <para>
			  The passed recipient name will always be resolved first. This
			  means that the recipient can be a username, e-mail address or
			  any other resolvable, unique identifier for the user. However,
			  if the resolve fails (eg. when running as a non-trusted user),
			  the passed name will be assumed to be a loginname of a user.
			  Passing the -R option will disable this and will cause
			  zarafa-dagent to exit with an error when the resolve fails.
			  </para>
			  <para>
			  In practice, the resolve will only fail if zarafa-dagent is
			  not running in a trusted account and is therefore only really
			  here for backward-compatibility of earlier zarafa-dagent
			  versions.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>-n</option></term>
			<listitem>
			  <para>Use 'now' as the delivery time. Normally, the
			  dagent will use the date from the first Received header,
			  which is most likely to be the header from your own
			  mailserver.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--do-not-notify</option></term>
			<term>
			  <option>-N</option>
			</term>
			<listitem>
			  <para>Do not send a new mail notification to othere
			  connected clients. This option can be useful when you
			  have connected Outlook 2000 clients, which will also
			  process rules when the mail is delivered. This is a bug
			  workaround, and this option may disappear in the
			  future.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--folder</option></term>
			<term>
			  <option>-F</option>
			  <replaceable>path\to\folder</replaceable>
			</term>
			<listitem><para>Deliver the incoming email to a specified
			subfolder of the store. Eg. --folder
			'Inbox\important'. Note that the 'Inbox' folder is
			language specific. If the folder does not exist, delivery
			is reverted to the normal Inbox of the user, or use the
			--create flag.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--public</option></term>
			<term>
			  <option>-P</option>
			  <replaceable>path\to\folder</replaceable>
			</term>
			<listitem><para>Deliver the incoming email to a specified
			subfolder of the public store. Eg. --public
			'sales\incoming'. If the folder does not exist, delivery
			is reverted to the normal Inbox of the user, or use the
			--create flag.</para>
			<para>Note that before 6.20 you'd need to add 'Public
			Folders' to the folder name. This is not needed
			anymore.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-p</option>
			  <replaceable>&lt;path separator&gt;</replaceable>
			</term>
			<listitem><para>Use a different path separator. The
			default is '\'. If your delivery path contains a \
			character, you can use this to alter the separator. Eg. -p
			_ --folder 'Inbox_resellers\dealers'. The mail will now be
			delivered in a folder called 'resellers\dealers' as a
			subfolder of the Inbox.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--create</option></term>
			<term><option>-C</option></term>
			<listitem><para>Create the folder that was requested to
			deliver in. If there are no sufficient rights to create
			the folder, delivery is reverted to the normal Inbox of
			the user.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--read</option></term>
			<term><option>-r</option></term>
			<listitem><para>Deliver the mail as read. Normally, the
			message will be marked as unread. This option can be
			useful when importing old mail.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-a</option>
			  <replaceable>autoresponder</replaceable>
			</term>
			<listitem>
			  <para>Path to autoresponder, e.g.
			  <filename>/usr/local/sbin/zarafa-autorespond</filename>. This
			  script will be called when the user enabled a vacation
			  message in the Webaccess settings. When a header
			  <parameter>X-Zarafa-Vacation</parameter> or
			  <parameter>Precedence</parameter> was found in the
			  received e-mail, this program will not be called to
			  avoid loops. The Precedence header is often used in
			  mailing lists. Other loop protections can be archieved
			  in this separate program. This program or script will be
			  called with the following arguments, in order:</para>
			  <variablelist>
				<varlistentry>
				  <term><replaceable>from</replaceable></term>
				  <listitem>
					<para>The e-mail address of the Zarafa user
					sending the vacation message</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><replaceable>to</replaceable></term>
				  <listitem>
					<para>The e-mail address of the user to send the
					response to</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><replaceable>subject</replaceable></term>
				  <listitem>
					<para>The auto response subject set by the Zarafa
					user</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><replaceable>zarafa-username</replaceable></term>
				  <listitem>
					<para>The username of the Zarafa user which set
					the auto response</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><replaceable>messagefile</replaceable></term>
				  <listitem>
					<para>A file where the auto respond message will
					be temporary written to during
					the autorespond</para>
				  </listitem>
				</varlistentry>
			  </variablelist>
			  <para>The following environment variables are present:</para>
			  <variablelist>
				<varlistentry>
				  <term><replaceable>MESSAGE_TO_ME</replaceable></term>
				  <listitem>
					<para>Set to 1 if the original mail had the user
					in the To header.</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><replaceable>MESSAGE_CC_ME</replaceable></term>
				  <listitem>
					<para>Set to 1 if the original mail had the user
					in the Cc header.</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><replaceable>MAILHEADERS</replaceable></term>
				  <listitem>
					<para>Optional, if this value is present it points
					to a file that contains the original headers of
					the received email.</para>
				  </listitem>
				</varlistentry>
			  </variablelist>
			  <para>Default: <parameter>/usr/sbin/zarafa-autorespond</parameter>.</para>
			</listitem>			
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Usage</title>

		<para>To deliver an e-mail to a Zarafa user's mailbox:</para>

		<para><command>zarafa-dagent
		<replaceable>username</replaceable> &lt;
		<replaceable>mailfile</replaceable></command></para>

		<para>This passes the input to the dagent via the standard input
		interface.</para>
	  </refsection>

	  <refsection>
		<title>Config</title>

		<para>Normally, no configuration file is used or required. The
		following options can be set in the configuation file:</para>

		<variablelist>
		  <varlistentry>
			<term><option>server_socket</option></term>
			<listitem>
			  <para>Unix socket to find the connection to the Zarafa
			  server.</para>
			  <para>Default:
			  <parameter>file:///var/run/zarafa</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_file</option></term>
			<listitem>
			  <para>Use this file as key to logon to the server. This
			  is only used when server_socket is set to an HTTPS
			  transport. See the
			  <citerefentry>
				<refentrytitle>zarafa-server</refentrytitle>
				<manvolnum>8</manvolnum>
			  </citerefentry>
			  manual page on how to setup SSL keys.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_pass</option></term>
			<listitem>
			  <para>The password of the SSL key file that is set in
			  sslkey_file.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Exitcodes</title>

		<para>The following exitcodes can be returned:</para>

		<variablelist>
		  <varlistentry>
			<term>0</term>
			<listitem>
			  <para>Delivery was successful</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>64</term>
			<listitem>
			  <para>Wrong or not enough parameters were passed to the
			  DAgent. Delivery cannot be started.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>70</term>
			<term>100</term>
			<listitem>
			  <para>Delivery was failed, and cannot be delivered. The
			  SMTP server should not try again. When the
			  <option>-q</option> option is used, this value is
			  changed to 100, otherwise 70 is returned.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>75</term>
			<term>111</term>
			<listitem>
			  <para>Delivery was temporarily failed. This happens
			  when the Zarafa server is unavailable. The SMTP server
			  may try again in a short while. When the
			  <option>-q</option> option is used, this value is
			  changed to 111, otherwise 75 is returned.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
		    <refentrytitle>zarafa-server</refentrytitle>
		    <manvolnum>8</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-dagent.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Dagent Configuration file manual page (5.0 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-dagent.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-dagent.cfg</refname>
		<refpurpose>The Zarafa dagent configuration file</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>dagent.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>dagent.cfg</filename> is a configuration
		file for the Zarafa Dagent. <filename>dagent.cfg</filename>
		contains instructions for the software to set up the logging
		system and LMTP settings.</para>
	  </refsection>

	  <refsection>
		<title>File format</title>

		<para>The file consists of one big section, but parameters can be
		grouped by functionality.</para>

		<para>The parameters are written in the form:</para>

		<para><option>name</option> = <replaceable>value</replaceable></para>

		<para>The file is line-based. Each newline-terminated line
		represents either a comment, nothing, a parameter or a directive.
		A line beginning with `#' is considered a comment, and will be
		ignored	by Zarafa. Parameter names are case sensitive. Lines
		beginning with `!' are directives.</para>

		<para>Directives are written in the form:</para>

		<para>!<option>directive</option> <replaceable>[argument(s)]
		</replaceable></para>

		<para>The following directives exist:</para>
		<variablelist>
		  <varlistentry>
		    <term><option>include</option></term>
		    <listitem>
		      <para>Include and process <replaceable>argument</replaceable>
		      </para>
		      <para>Example: !include common.cfg</para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of each parameter</title>

		<variablelist>
		  <varlistentry>
			<term><option>server_bind</option></term>
			<listitem>
			  <para>IP address to bind to. 0.0.0.0 for any address.</para>
			  <para>Default: <replaceable>0.0.0.0</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_socket</option></term>
			<listitem>
			  <para>Unix socket to find the connection to the Zarafa
			  server.</para>
			  <para>Default:
			  <parameter>file:///var/run/zarafa</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_user</option></term>
			<listitem>
			  <para>After correctly starting, the dagent process will
			  become this user, dropping root privileges. Note that
			  the log file needs to be writeable by this user, and the
			  directory too to create new logfiles after
			  logrotation. This can also be achieved by setting the
			  correct group and permissions.
			  </para>
			  <para>Default value is empty, not changing the user
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_group</option></term>
			<listitem>
			  <para>After correctly starting, the dagent process will
			  become this group, dropping root privileges.
			  </para>
			  <para>Default value is empty, not changing the group
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pid_file</option></term>
			<listitem>
			  <para>Write the process ID number to this file. This is
			  used by the init.d script to correctly stop/restart the
			  service.
			  </para>
			  <para>Default:
			  <replaceable>/var/run/zarafa-dagent.pid</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_file</option></term>
			<listitem>
			  <para>Use this file as key to logon to the server. This
			  is only used when server_socket is set to an HTTPS
			  transport. See the
			  <citerefentry>
				<refentrytitle>zarafa-server</refentrytitle>
				<manvolnum>8</manvolnum>
			  </citerefentry>
			  manual page on how to setup SSL keys.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_pass</option></term>
			<listitem>
			  <para>The password of the SSL key file that is set in
			  sslkey_file.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>lmtp_port</option></term>
			<listitem>
			  <para>Port to listen to for LMTP requests</para>
			  <para>Default: <replaceable>2003</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>lmtp_max_threads</option></term>
			<listitem>
			  <para>The maximum number of LMTP threads that can be
			  running simultaneously. This is also limited by your
			  SMTP server. (20 is the postfix default concurrency
			  limit)</para>
			  <para>Default: <replaceable>20</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>spam_header_name</option></term>
			<listitem>
			  <para>To detect if the receiving mail is spam, the
			  DAgent can check this header for a value that is in
			  there. This name is case insensitive. If this option is
			  empty, the detection method will be turned off. You can
			  also force a delivery to the Junk Mail folder using the
			  <replaceable>-j</replaceable> commandline option.</para>
			  <para>Default: <replaceable>X-Spam-Status</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>spam_header_value</option></term>
			<listitem>
			  <para>When this value is found in the
			  <replaceable>spam_header_name</replaceable>, the mail
			  will be considered spam, and will be delivered in the
			  user's Junk Mail folder. The value can be anywhere in
			  the header, not just the start. The value is case
			  insensitive.</para>
			  <para>Default: <replaceable>Yes,</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_method</option></term>
			<listitem>
			  <para>The method which should be used for logging. Valid
			  values are:</para>

			  <variablelist>
				<varlistentry>
				  <term><replaceable>syslog</replaceable></term>
				  <listitem>
					<para>Use the Linux system log. All messages will
					be written to the mail facility. See also <citerefentry>
					<refentrytitle>syslog.conf</refentrytitle>
					<manvolnum>5</manvolnum>
					</citerefentry>.</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><replaceable>file</replaceable></term>
				  <listitem>
					<para>Log to a file. The filename will be
					specified in <option>log_file</option>.</para>
				  </listitem>
				</varlistentry>
			  </variablelist>

			  <para>Default: <replaceable>file</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_file</option></term>
			<listitem>
			  <para>When logging to a file, specify the filename in
			  this parameter. Use <replaceable>-</replaceable> (minus
			  sign) for stderr output.</para>
			  <para>Default: <replaceable>/var/log/zarafa/dagent.log</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_timestamp</option></term>
			<listitem>
			  <para>Specify whether to prefix each log line with a
			  timestamp in 'file' logging mode.</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_buffer_size</option></term>
			<listitem>
			  <para>Buffer logging in what sized blocks.
                              Bigger buffers is better for the performance but it gives lag
                              when running e.g. multitail or 'tail -f' on the log-file. If
                              you want to directly see what is happing, set this to e.g. 1.
                              So when debugging: make it a small value, else set it to
                              4096 or more.</para>
			  <para>Default: <replaceable>4096</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_level</option></term>
			<listitem>
			  <para>The level of output for logging in the range from
			  0 to 5. 0 means no logging, 5 means full logging.</para>
			  <para>Default: <replaceable>2</replaceable></para>
			</listitem>
		  </varlistentry>

          <varlistentry>
            <term><option>log_raw_message</option></term>
            <listitem>
              <para>Log the raw message to a file. The file is saved to the
				location specified in <option>log_raw_message_path</option>.
              </para>
              <para>Default: <replaceable>no</replaceable></para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><option>log_raw_message_path</option></term>
            <listitem>
              <para>Path to save the raw message.
              </para>
              <para>Default: <replaceable>/tmp</replaceable></para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term><option>archive_on_delivery</option></term>
            <listitem>
              <para>Archive incoming message on delivery. If an archive is
              attached to the target mailbox, the message will immediately
              be archived upon delivery.</para>
              <para>Rules will be processed before the message is archived, so
              when a rule moves the message to an alternate location, the
              archived message will be placed in the correct location in the
              archive. When the incoming message is copied by a rule, only the
              original message is archived.
              </para>
              <para>Default: <replaceable>no</replaceable></para>
            </listitem>
          </varlistentry>

          <varlistentry>
          	<term><option>mr_autoaccepter</option></term>
          	<listitem>
              <para>Zarafa-dagent can auto-accept meeting requests if the
              mr-accept option is enabled for a user. When this option is
              enabled and a meeting request or meeting cancellation is
              received, this script is started with the following parameters:
              /usr/sbin/zarafa-mr-accept &lt;username&gt;
              &lt;/path/to/dagent.cfg&gt; [&lt;ENTRYID&gt;].</para>
              <para>If the script is
              successful (exitcode is 0), then no other actions are performed (eg
              rules or vacation messages) and the message is not delivered in
              the inbox. If the script exits with a non-zero
              exit code, rules and vacation messages are run as usual, and the
              message is delivered in the inbox (or other folder, depending on
              rules or options).
              </para>
              <para>Default:
              <replaceable>/usr/sbin/zarafa-mr-accept</replaceable></para>
          	</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>plugin_enabled</option></term>
			<listitem>
					<para>Enable or disable the dagent plugin framework.</para>
				<para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>plugin_manager_path</option></term>
			<listitem>
					<para>The path to the dagent plugin manager.</para>
				<para>Default: <replaceable>/usr/share/zarafa-dagent/python</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>plugin_path</option></term>
			<listitem>
				<para>Path to the activated dagent plugins. This folder contains symlinks
				to the zarafa plugins and custom scripts. The plugins are installed in
				<replaceable>/usr/share/zarafa-dagent/python/plugins</replaceable>. To activate a plugin create a symbolic
				link in the <replaceable>plugin_path</replaceable> directory.</para>
				<para>Example:</para>
				<para>
					<command>ln</command>
					<option>-s</option>
				    <replaceable>/usr/share/zarafa-dagent/python/plugins/BMP2PNG.py</replaceable> <replaceable>/var/lib/zarafa/dagent/plugins/BMP2PNG.py</replaceable>
				</para>
				<para>Default: <replaceable>/var/lib/zarafa/dagent/plugins</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>default_charset</option></term>
			<listitem>
				<para>Some emails do not contain any charset
				information or specify us-ascii even though it
				isn't. In both cases, dagent will assume the following
				charset is used. Note that this implies that the given
				charset should be a superset of us-ascii (most
				charsets are).</para>
				<para>Default: <replaceable>iso-8859-15</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>set_rule_headers</option></term>
			<listitem>
				<para>Enable the addition of X-Zarafa-Rule-Action headers on messages
				that have been forwarded or replied by a rule.</para>
				<para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

          <varlistentry>
            <term><option>no_double_forward</option></term>
            <listitem>
              <para>Enable this option to prevent rules to cause a
              loop. An e-mail can only be forwarded once. When
              this option is enabled, the set_rule_headers
              option must also be enabled.</para>
              <para>Default: <replaceable>no</replaceable></para>
            </listitem>
          </varlistentry>
		</variablelist>

	  </refsection>

	  <refsection>
		<title>Reloading</title>
		<para>The following options are reloadable by sending the zarafa-dagent process a HUP signal:</para>

		<variablelist>
		  <varlistentry>
			<term>log_level</term>
			<listitem><para></para></listitem>
		  </varlistentry>

		  <varlistentry>
			<term>archive_on_delivery</term>
			<listitem><para></para></listitem>
		  </varlistentry>

		  <varlistentry>
			<term>mr_autoaccepter</term>
			<listitem><para></para></listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Files</title>

		<variablelist>
		  <varlistentry>
			<term><filename>/etc/zarafa/dagent.cfg</filename></term>
			<listitem>
			  <para>The Zarafa dagent configuration file.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-dagent</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
    Zarafa auto respond manual page
  -+-+-
-->
    <refentry>
      <refmeta>
        <refentrytitle>zarafa-autorespond</refentrytitle>
        <manvolnum>8</manvolnum>
      </refmeta>

      <refnamediv>
        <refname>zarafa-autorespond</refname>
        <refpurpose>Vacation message response script.</refpurpose>
      </refnamediv>

      <refsynopsisdiv>
        <cmdsynopsis>
          <command>zarafa-autorespond</command>
        </cmdsynopsis>
      </refsynopsisdiv>

      <refsection>
        <title>Description</title>

        <para>Script will be called by <command>zarafa-dagent</command> when the user 
				enabled a vacation message.	</para>
		<para>This script should not be executed from the command line.</para>
      </refsection>

      <refsection>
        <title>Author</title>
        <para>Written by Zarafa.</para>
      </refsection>

      <refsection>
        <title>See also</title>
        <para>
          <citerefentry>
            <refentrytitle>zarafa-dagent</refentrytitle>
            <manvolnum>8</manvolnum>
          </citerefentry>
        </para>
      </refsection>
    </refentry>

<!--
  -+-+-
    Zarafa auto accepter manual page
  -+-+-
-->
    <refentry>
      <refmeta>
        <refentrytitle>zarafa-mr-accept</refentrytitle>
        <manvolnum>8</manvolnum>
      </refmeta>

      <refnamediv>
        <refname>zarafa-mr-accept</refname>
        <refpurpose>Automatic accepting of meeting requests.</refpurpose>
      </refnamediv>

      <refsynopsisdiv>
        <cmdsynopsis>
          <command>zarafa-mr-accept</command>
        </cmdsynopsis>
      </refsynopsisdiv>

      <refsection>
        <title>Description</title>

        <para>Script will be called by <command>zarafa-dagent</command> when the user 
				receives a meeting request or cancellation.	</para>
		<para>This script should not be executed from the command line.</para>
      </refsection>

      <refsection>
        <title>Author</title>
        <para>Written by Zarafa.</para>
      </refsection>

      <refsection>
        <title>See also</title>
        <para>
          <citerefentry>
            <refentrytitle>zarafa-dagent</refentrytitle>
            <manvolnum>8</manvolnum>
          </citerefentry>
        </para>
      </refsection>
    </refentry>

<!--
  -+-+-
    Zarafa auto processor manual page
  -+-+-
-->
    <refentry>
      <refmeta>
        <refentrytitle>zarafa-mr-process</refentrytitle>
        <manvolnum>8</manvolnum>
      </refmeta>

      <refnamediv>
        <refname>zarafa-mr-process</refname>
        <refpurpose>Automatic processing of meeting requests.</refpurpose>
      </refnamediv>

      <refsynopsisdiv>
        <cmdsynopsis>
          <command>zarafa-mr-process</command>
        </cmdsynopsis>
      </refsynopsisdiv>

      <refsection>
        <title>Description</title>

        <para>Script will be called by <command>zarafa-dagent</command> when the user 
				receives a meeting request or cancellation.	</para>
		<para>This script should not be executed from the command line.</para>
      </refsection>

      <refsection>
        <title>Author</title>
        <para>Written by Zarafa.</para>
      </refsection>

      <refsection>
        <title>See also</title>
        <para>
          <citerefentry>
            <refentrytitle>zarafa-dagent</refentrytitle>
            <manvolnum>8</manvolnum>
          </citerefentry>
        </para>
      </refsection>
    </refentry>

<!--
  -+-+-
	Zarafa Server manual page (5.0 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-server</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-server</refname>
		<refpurpose>Start the Zarafa storage server.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-server</command>
		  <arg><replaceable>OPTION</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The zarafa-server is the Zafara storage server. It
		contacts a database server and provides services to Zarafa
		clients. The user base can be retrieved from an external
		source, like LDAP, or can be setup with a separate list of
		users.</para>

		<para>After starting, the server keeps listening for
		connections on the configured TCP port and/or Unix
		socket.</para>
	  </refsection>

	  <refsection>
		<title>Options</title>

		<para>The Zarafa server program takes the following
		configuration options:</para>

		<variablelist>
		  <varlistentry>
			<term><option>--config</option></term>
			<term>
			  <option>-c</option>
			  <replaceable>file</replaceable>
			</term>
			<listitem>
			  <para>Specify the location of the configuration
			  file.</para>
			  <para>Default: <replaceable>/etc/zarafa/server.cfg</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--foreground</option></term>
			<term>
			  <option>-F</option>
			</term>
			<listitem>
			  <para>Run in the foreground. Normally the server
			  will daemonize and run in the background.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--restart-searches</option></term>
			<term>
			  <option>-R</option>
			</term>
			<listitem>
			  <para>Rebuild all search folders. This may take some
			  time and is only needed when your search folders have
			  become out-of-sync with the actual data in the database. The
			  sync will start synchronously at the start of the server,
			  and you will have to wait for all searches to complete before
			  connecting to the server.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--ignore-database-version-conflict</option></term>
			<listitem>
			  <para>
			  Ignore version information from the database. Zarafa will
			  normally not start the server if the database has a newer
			  version than the zarafa-server binary. This makes sure you
			  cannot downgrade your server binary while keeping the same
			  database. If you know what you're doing, you can use this
			  option to bypass the start-up version check of the database.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--ignore-attachment-storage-conflict</option></term>
			<listitem>
			  <para>Override the attachment storage option from the
			  configuration file. When you change the option of the
			  location where to store attachments after you've already
			  started the zarafa-server once, this location will
			  conflict. Attachments will not be found when they are
			  stored in a different location.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--override-multiserver-lock</option></term>
			<listitem>
			  <para>When you upgrade/downgrade from/to multiserver
			  setups, the server will not start, because of database
			  differences. If you know what you're doing, and want to
			  circumvent this and start the server anyway, you can use
			  this option.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--force-database-upgrade</option></term>
			<listitem>
			  <para>The upgrade from 6.x to 7.0 is blocked, since it
			  will take a long time. We provide 2 methods to upgrade
			  the database. One is using the preferred zarafa7-upgrade
			  python script. This is preferred since it shows the
			  upgrade progress, and you can estimate the time it will
			  take for the upgrade to complete. The second option is
			  letting the zarafa-server do the normal upgrade as
			  usual. Pass this option to use this method. The server
			  will only daemonize when the upgrade is complete. Simple
			  progress can be followed in the log output of the
			  server.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>-V</option></term>
			<listitem>
			  <para>Print the version and exit.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
		<para>
		  When invoked with no options, the server will search for a
		  configuration file in
		  <filename>/etc/zarafa/server.cfg</filename>. If no
		  configuration file is found, default values are used. See
		  <citerefentry><refentrytitle>zarafa-server.cfg</refentrytitle>
		<manvolnum>5</manvolnum></citerefentry> for all
		configuration options and their default values.</para>
	  </refsection>

	  <refsection>
		<title>Usage</title>
		<para>Starting the server with an alternative configuration:</para>
		<para>
		  <command>zarafa-server</command>
		  <option>-c</option>
		  <replaceable>/path/to/server.cfg</replaceable>
		</para>

		<para>You may also use the init.d scripts:</para>
		<para><command>/etc/init.d/zarafa-server</command>
		[<replaceable>start</replaceable>|
		<replaceable>stop</replaceable>|
		<replaceable>restart</replaceable>]</para>
	  </refsection>

	  <refsection>
		<title>Files</title>

		<variablelist>
		  <varlistentry>
			<term><filename>/etc/zarafa/server.cfg</filename></term>
			<listitem>
			  <para>The server configuration file.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term><filename>/etc/zarafa/license/base</filename></term>
			<term><filename>/etc/zarafa/license/*</filename></term>
			<listitem>
			  <para>The base file contains your license key. When you
			  have extra CAL license keys, these are found in the
			  other files available in the license/ directory, one key
			  per file. This directory is configurable.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
		<para>Configuration options for user plugins are in their
		respective configuration file. The name of these files is set
		in the server.cfg file. See
		<citerefentry><refentrytitle>zarafa-server.cfg</refentrytitle>
		<manvolnum>5</manvolnum></citerefentry> for information on the
		server.cfg settings.
		</para>
	  </refsection>

	  <refsection>
		<title>Diagnostics</title>

		<para>If you run into problems, check the log for any
		errors. If you made a mistake in the configuration of the log
		method, this will be reported on standard error.  You can also
		restart the server with a higher log level. Also, before
		starting the server, always make sure the database server is
		running at the right location and no other server is listening
		on the configured TCP port.</para>

		<para>For extended diagnostics, there are special extended log
		options available for enhanced debugging capabilities. The
		parameter <replaceable>log_level</replaceable> has special or-ed
		values which can be set to investigate different modules within
		the server process:</para>

		<para>SQL: 0x00010000, User backend: 0x00020000,
		Server cache: 0x00040000, SOAP: 0x00100000, ICS: 0x00200000</para>

		<para>For example, if you are using LDAP as the user plugin,
		you can set the <replaceable>log_level</replaceable> to
		0x00020006 for extended LDAP logging (the last digit 6 enables
		extended verbose logging). To enable SQL and LDAP logging at the
		same time, set <replaceable>log_level</replaceable> to
		0x00030006</para>

		<para>WARNING: The log options create huge amounts of log entries
		in production environments, this results in abnormal large
		logfiles which can fill up available disk space very fast.
		Only use this with extreme caution.</para>
	  </refsection>

	  <refsection>
		<title>Security</title>

		<para>The normal way for user clients to connect to the server
		is over TCP, either direct using the Zarafa port, or over HTTP
		when Apache is setup as a proxy. Users can only login with
		their username and password.</para>

		<para>The normal way for admin clients, like the spooler and
		admin tool, to connect to the server is through the Unix socket on
		Unix type servers. The admin clients are able to login when
		they are run as root or as the user the Zarafa server process
		is running as. Most of the time this will be root only, since
		the Zarafa server process runs as root by default.</para>

		<para>As an exception for the dagent, a unix user can also
		connect to its own store without a password. Any other store
		cannot be accessed this way.</para>

		<para>Direct SSL connections are also possible. The server
		needs to be configured to accept SSL connections on a new
		port. Login via an SSL key is also possible. Please read the
		next section on how to setup SSL.
		</para>
	  </refsection>

	  <refsection>
		<title>SSL</title>

		<para>To accept SSL connections directly by the server, the
		Zarafa server will need to listen on a different port to
		separate the normal connections from the encrypted
		connections. This is set in the
		<replaceable>server_ssl_port</replaceable> setting in the
		configuration file.
		</para>
		<para>Then, you must setup a signed SSL certificate. First,
		we'll create a Certificate Authority to be able to sign
		certificate requests. We provide a script which makes it easy
		to create certificates on any distribution. This script is
		located in /usr/share/zarafa, called ssl-certificate.sh. Enter
		the following commands to create a certificate for the Zarafa
		server.
		</para>
		<para>
		  <command>
			mkdir -p /etc/zarafa/ssl
		  </command>
		  <command>
			cd /etc/zarafa/ssl
		  </command>
		  <command>
			sh /usr/share/zarafa/ssl-certificate.sh server
		  </command>
		</para>
		<para>Press enter twice to start the creation of a new CA,
		probably called demoCA. Enter a password when asked for. This
		is the password later used to sign certificate requests. Then
		enter your certificate information. Do not leave the Common
		Name field blank, otherwise the creation will fail. A good
		example for the Common Name field is your hostname.
		</para>
		<para>Now that we have a CA, we can create self-signed
		certificates. The script will automatically start the creation
		of this certificate. The CA certificate must be set in the
		server.cfg file in the
		<replaceable>server_ssl_ca_file</replaceable> setting. We need
		a signed certificate for the server to start with SSL
		support.
		</para>
		<para>Enter a password for the request, and enter the
		certificate details. Some details need to be different from
		what you typed when creating the CA. Type at least a different
		name in the 'Organizational Unit Name' field. The challenge
		password at the end may be left empty.
		</para>
		<para>The script will automatically continue with signing this
		certificate request. You will need to enter your CA
		certificate password again to sign this request. Then you must
		accept the new certificate into the CA.
		</para>
		<para>After accepting, a new signed certificate is created,
		with the name server.pem. This file contains the private key,
		so keep this file safe.
		</para>
		<para>The script will ask if a public key should also be
		created. Since we're creating the certificate for the server,
		this is not needed. So enter 'n' and press enter.
		</para>
		<para>The server.pem file should be set in the server.cfg file
		in the <replaceable>server_ssl_key_file</replaceable> option. See
		<citerefentry><refentrytitle>zarafa-server.cfg</refentrytitle>
		<manvolnum>5</manvolnum></citerefentry> for information on the
		possible SSL settings. The password of this key needs to be
		set in the <replaceable>server_ssl_key_pass</replaceable>
		option. Do not forget this password in the server.cfg file,
		otherwise the zarafa-server program will ask for this password
		when an SSL connection is accepted.
		</para>
		<para>To create a new certificate for a client service, run
		the script again. You can create one new certificate for all
		clients, or separate certificates for each client.
		</para>
		<para>
		  <command>
			sh /usr/share/zarafa/ssl-certificates.sh
		  </command>
		</para>
		<para>When typing the certificate information, type at least a
		different 'Organizational Unit Name' field. When asked for a
		public key, type 'y' and enter to create the public key.
		</para>
		<para>Install the new service.pem on the server that will be
		logging in. Install the service-public.pem file in the
		/etc/zarafa/sslkeys directory:
		</para>
		<para>
		  <command>
			mkdir /etc/zarafa/sslkeys
		  </command>
		  <command>
			mv service-public.pem /etc/zarafa/sslkeys
		  </command>
		</para>
		<para>The remote service, which has the service.pem private key,
		can now login with the certificate, because the known public
		key matches.
		</para>
	  </refsection>

	  <refsection>
		<title>Addressbook Sorting</title>

		<para>With special chars (like umlauts) the sorting is working
		more the dictionary way according to DIN 5007-1, section 6.1.1.4.1.
		Depending on the behaviour wanted, the collation setting can be
		changed with the (not per default included) parameter <replaceable>
		default_sort_locale_id</replaceable>. When setting this parameter
		to de_DE@collation=phonebook for example the sorting will be
		oriented to the DIN 5007-2, section 6.1.1.4.2 standard which is
		rather used in phonebooks and actually decomposes umlauts for
		sorting inline within non-umlaut based ASCII characters.</para>
	  </refsection>

	  <refsection>
		<title>Signals</title>
		<para>The following signals can be sent to the Zarafa server
		process:</para>
		<variablelist>
		  <varlistentry>
			<term><option>HUP</option></term>
			<listitem>
			  <para>When the HUP signal is received, some options from
			  the configuration file are reloaded. The reloadable
			  options are listed in the
			  <citerefentry><refentrytitle>zarafa-server.cfg</refentrytitle>
			  <manvolnum>5</manvolnum></citerefentry> manual page.</para>
			  <para>Also, when using <replaceable>log_method =
			  file</replaceable>, the logfile will be closed and a new
			  logfile will be opened. You can use this signal in your
			  logrotate system.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term><option>TERM</option></term>
			<listitem>
			  <para>To gracefully let the server exit, the normal TERM
			  signal is used. Because of open sessions by clients it
			  may take up to 60 seconds for the server to completely
			  shutdown.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-server.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-admin</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-admin</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

<!--
  -+-+-
	Zarafa Admin manual page (5.0 ready)
  -+-+-
-->
	  <refnamediv>
		<refname>zarafa-admin</refname>
		<refpurpose>Manages Zarafa users and stores.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-admin</command>
		  <arg choice="plain"><replaceable>ACTION</replaceable></arg>
		  <arg rep="repeat"><replaceable>OPTION</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>This tool can be used to create the public store and to
		add, update and remove users from Zarafa. The Zarafa server
		must be running for <command>zarafa-admin</command> to work.
		</para>

		<para>If no action is given, a listing of the possible
		parameters is printed. When invalid actions or not enough
		options for an action are given, an error message is
		printed.</para>

		<para>When using LDAP as the users source, create, modify and
		delete actions are done in the LDAP tree and not using the
		zarafa-admin tool. Please see the
		<citerefentry>
		  <refentrytitle>EXTERNAL USERS</refentrytitle>
		</citerefentry> section for more information.</para>
	  </refsection>

	  <refsection>
		<title>Actions</title>
		<para>zarafa-admin needs an action command with the appropriate
		options. Valid actions are:</para>

		<variablelist>
		  <varlistentry>
			<term><option>-s</option></term>
			<listitem>
			  <para>Create a public store. No other options are
			  needed. Only one public store can be created. Successive
			  calls will fail.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-c</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Create a new user, <parameter>-p</parameter>,
			  <parameter>-f</parameter> and <parameter>-e</parameter>
			  options are required, <parameter>-a</parameter> and
			  <parameter>-n</parameter> parameters are optional. To
			  set a password using a password prompt, use the
			  <parameter>-P</parameter> option in stead of
			  <parameter>-p</parameter>.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-d</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Delete a user. No other options are needed. The
			  deleted store of the user will be marked as orphan store
			  and can be restored with <parameter>--hook-store</parameter>
			</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-u</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Update user information. Valid parameters are:
			  <parameter>[-p|-P]</parameter>,
			  <parameter>-f</parameter>, <parameter>-e</parameter>,
			  <parameter>-a</parameter>, <parameter>-n</parameter> and <parameter>-U</parameter>
			  to update user information. Use:
			  <parameter>--qo</parameter>,
			  <parameter>--qw</parameter>, <parameter>--qs</parameter>
			  or <parameter>--qh</parameter> to set quota levels. Use
			  0 with quota options to set as 'unlimited'.</para>
			  <para><parameter>--enable-feature</parameter> and
			  <parameter>--disable-feature</parameter> to enable or
			  disable specific features for users.</para>
			  <para>This action is also required for all options to
			  control the autoaccept of meeting requests. See the
			  <parameter>--mr-accept</parameter>,
			  <parameter>--mr-decline-conflict</parameter> and
			  <parameter>--mr-decline-recurring</parameter>
			  options.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-g</option>
			  <replaceable>groupname</replaceable>
			</term>
			<listitem>
			  <para>Create a new group. Valid parameters are:
			  <parameter>-e</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--update-group</option>
			  <replaceable>groupname</replaceable>
			</term>
			<listitem>
			  <para>Update group information. Valid parameters are:
			  <parameter>-e</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-G</option>
			  <replaceable>groupname</replaceable>
			</term>
			<listitem>
			  <para>Delete a group. No other options are
			  needed.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-b</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Add a user to a group. Use the
			  <parameter>-i</parameter> to set the groupname.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-B</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Remove a user from a group. Use the
			  <parameter>-i</parameter> to set the groupname.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-l</option>
			</term>
			<listitem>
			  <para>List all users available in Zarafa. When using an
			  external user source, this action will implicitly
			  synchronize all users in the external source, creating,
			  updating and/or removing users and stores.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-L</option>
			</term>
			<listitem>
			  <para>List all groups available in Zarafa. When using an
			  external user source, this action will implicitly
			  synchronize all groups in the external source, creating
			  updating and/or removing groups and memberships.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--list-companies</option>
			</term>
			<listitem>
			  <para>List all tenans available in Zarafa. When using an
			  external user source, this action will implicitly
			  synchronize all tenants in the external source, creating
			  updating and/or removing companies.</para>
			  <para>This option is only available in multi-tenancy Zarafa</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--details</option>
			  <replaceable>name</replaceable>
			</term>
			<listitem>
			  <para>Show all the details of a user, showing the
			  fullname, e-mailaddress, active state, administator
			  state, group memberships and quota settings.
			  Optionally use <parameter>--type</parameter> to indicate for
			  what kind of object the details are being requested.</para>
			  <para>Note: This function does not synchronize with the
			  external user plugin. Thus changes from e.g. LDAP will not be
			  set during this function.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--type</option>
			  <replaceable>type</replaceable>
			</term>
			<listitem>
			  <para>Additional argument for <parameter>--details</parameter>.
			  The argument with this option indicates for what type of object
			  the details are being requested.
			  Allowed values are <replaceable>'user'</replaceable>,
			  <replaceable>'group'</replaceable> or <replaceable>'company'</replaceable>
			  When this option is not used, it defaults to
			  <replaceable>'user'</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--create-company</option>
			  <replaceable>companyname</replaceable>
			</term>
			<listitem>
			  <para>Create a new tenant space.</para>
			  <para>Use:
				<parameter>--qo</parameter>,
				<parameter>--qw</parameter>,
				<parameter>--qs</parameter>,
				<parameter>--qh</parameter>
				to set quota levels for the tenant.
			  </para>
			  <para>Use:
				<parameter>--udqo</parameter>,
				<parameter>--udqw</parameter>,
				<parameter>--udqs</parameter>,
				<parameter>--udqh</parameter>
				to set the default quota levels for the users inside the tenant.
			  </para>
			  <para> This option is only available in multi-tenancy Zarafa.</para>

			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--update-company</option>
			  <replaceable>companyname</replaceable>
			</term>
			<listitem>
			  <para>Update an existing tenant space.</para>
			  <para>Use:
				<parameter>--qo</parameter>,
				<parameter>--qw</parameter>,
				<parameter>--qs</parameter>,
				<parameter>--qh</parameter>
				to set quota levels for the tenant.
			  </para>
			  <para>Use:
				<parameter>--udqo</parameter>,
				<parameter>--udqw</parameter>,
				<parameter>--udqs</parameter>,
				<parameter>--udqh</parameter>
				to set the default quota levels for the users inside the .
			  </para>
			  <para> This option is only available in multi-tenancy Zarafa.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--delete-company</option>
			  <replaceable>companyname</replaceable>
			</term>
			<listitem>
			  <para>Delete company space.</para>
			  <para>This option is only available in multi-tenancy Zarafa.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--set-system-admin</option>
			  <replaceable>companyname</replaceable>
			</term>
			<listitem>
			  <para>Set system administrator for the tenant specified by <parameter>-I</parameter>.</para>
			  <para>Please be aware that this option does not provide the user with administrator privileges.
			  The system administrator is considered the main contact person for a company, it will for example
			  be used as default sender for quota warning emails.</para>
			  <para>This option is only available in multi-tenancy Zarafa.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--add-to-viewlist</option>
			  <replaceable>companyname</replaceable>
			</term>
			<listitem>
			  <para>Add tenant <replaceable>'companyname'</replaceable> to remote-view list of company specified by <parameter>-I</parameter>.
			  After this command the <replaceable>'companyname'</replaceable> is capable of viewing all members of the company specified
	  		  by <parameter>-I</parameter>.</para>
			  <para>This option is only available in multi-tenancy Zarafa.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--del-from-viewlist</option>
			  <replaceable>companyname</replaceable>
			</term>
			<listitem>
			  <para>Delete company <replaceable>'companyname'</replaceable> from remote-view list of tenant specified by <parameter>-I</parameter>.
			  After this command the <replaceable>'companyname'</replaceable> is no longer capable of viewing all members of the tenant specified
			  by <parameter>-I</parameter>.</para>
			  <para>This option is only available in multi-tenancy Zarafa.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--list-view</option>
			</term>
			<listitem>
			  <para>List all tenants in the remote-view list of the tenant specified by <parameter>-I</parameter>.
			  The tenants in this list are able to view all members of the specified tenant in their Address Book.</para>
			  <para>This option is only available in multi-tenancy Zarafa.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--add-to-adminlist</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Add user <replaceable>'username'</replaceable> to remote-admin list of tenant specified by <parameter>-I</parameter>.
			  This is the administrator list for remote administrators, as such it only manages administrators from a different tenant.
			  Users who should be administrator over their own tenant are managed by updating (<option>-u</option>) the user and
			  specifying the <option>-a</option> argument.</para>
			  <para>Users can only be administrator over a different company when they have also been granted view privileges,
			  can be granted by using the <option>--add-to-viewlist</option>.</para>
			  <para>This option is only available in multi-tenancy Zarafa.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--del-from-adminlist</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Delete user <replaceable>'username'</replaceable> from remote-admin list of company specified by <parameter>-I</parameter>.
			  This is the administrator list for remote administrators, as such it only manages administrators from a different tenant.
			  Users who should be administrator over their own tenant are managed by updating (<option>-u</option>) the user and
			  specifying the <option>-a</option> argument.</para>
			  <para>This option is only available in multi-tenancy Zarafa.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--list-admin</option>
			</term>
			<listitem>
			  <para>List all users in the remote-admin list of the tenant specified by <parameter>-I</parameter>.
			  This is the administrator list for remote administrators, as such it only manages administrators from a different tenant.
			  Users who should be administrator over their own tenant are managed by updating (<option>-u</option>) the user and
			  specifying the <option>-a</option> argument.</para>
			  <para>Users can only be administrator over a different tenant when they have also been granted view privileges,
			  can be granted by using the <option>--add-to-viewlist</option>.</para>
			  <para>This option is only available in multi-tenancy Zarafa.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--add-userquota-recipient</option>
			  <replaceable>user</replaceable>
			</term>
			<listitem>
			  <para>Add <replaceable>'user'</replaceable> as recipient to userquota warning emails.
			  You can optionally use <parameter>-I</parameter> to set the tenant space to apply
			  the recipient action on.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--del-userquota-recipient</option>
				<replaceable>user</replaceable>
			</term>
			<listitem>
			  <para>Delete <replaceable>'user'</replaceable> as recipient to userquota warning emails.
			  You can optionally use <parameter>-I</parameter> to set the tenant space to apply
			  the recipient action on.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--list-userquota-recipients</option>
			</term>
			<listitem>
			  <para>List all additional recipients for a userquota warning email.
			  Use <parameter>-I</parameter> to request the recipient list for a particular
			  tenant space.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--add-companyquota-recipient</option>
			  <replaceable>user</replaceable>
			</term>
			<listitem>
			  <para>Add <replaceable>'user'</replaceable> as recipient to tenant quota warning emails.
			  You can optionally use <parameter>-I</parameter> to set the tenant space to apply
			  the recipient action on.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--del-companyquota-recipient</option>
			  <replaceable>user</replaceable>
			</term>
			<listitem>
			  <para>Delete <replaceable>'user'</replaceable> as recipient to tenant quota warning emails.
			  You can optionally use <parameter>-I</parameter> to set the tenant space to apply
			  the recipient action on.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--list-companyquota-recipients</option>
			</term>
			<listitem>
			  <para>List all additional recipients for a tenant quota warning email.
			  Use <parameter>-I</parameter> to request the recipient list for a particular
			  tenant space</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--list-sendas</option>
			  <replaceable>user</replaceable>
			</term>
			<listitem>
			  <para>List all users who are able to directly send an
			  email as <replaceable>user</replaceable>.  This has been
			  set in the LDAP server, or with the
			  <option>--add-sendas</option> command for Unix and DB
			  plugins. Optionally use <parameter>--type</parameter> to indicate for
			  what kind of object the sendas details are being requested.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		  	<term>
		  	  <option>--clear-cache</option>
		  	</term>
		  	<listitem>
		  	  <para>Clears the server's caches. All data cached inside the
		  	  zarafa-server is cleared. Although this can never cause any
		  	  data loss, it can affect the performance of your server, since
		  	  any data requested after the cache is cleared needs to be
		  	  re-requested from the database or LDAP server. Normally this
		  	  option is never needed; it is mostly used as a diagnostics
			  tool.</para>
	  		  <para>Optionally use <parameter>--clear-cache=</parameter> to specify a set
			  of purge options. The following options can be used:
			  <simplelist type='horiz' columns='1'>
				<member>0x0000    Release no longer used memory back to the kernel</member>
				<member>0x0001    Purge the quota cache</member>
                <member>0x0002    Purge the quota default cache</member>
                <member>0x0004    Purge the object cache</member>
                <member>0x0008    Purge the store cache</member>
                <member>0x0010    Purge the ACL cache</member>
                <member>0x0020    Purge the cell cache</member>
                <member>0x0040    Purge the index1 cache</member>
                <member>0x0080    Purge the index2 cache</member>
                <member>0x0100    Purge the indexproperty cache</member>
                <member>0x0200    Purge the user object cache</member>
                <member>0x0400    Purge the externid cache</member>
                <member>0x0800    Purge the userdetails cache</member>
                <member>0x1000    Purge the server cache</member>
				</simplelist>
			</para>
		  	</listitem>
		  </varlistentry>

		  <varlistentry>
		    <term>
		      <option>--purge-softdelete</option>
		      <replaceable>days</replaceable>
		    </term>
		    <listitem>
		      <para>Starts a softdelete purge on the server, removing all
		      soft-deleted items which have been deleted
		      <replaceable>days</replaceable> days ago, or
		      earlier</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term>
		      <option>--purge-deferred</option>
		    </term>
		    <listitem>
		      <para>The server has an optimization in which changes to the
		      tproperties table are not writted directly, but delayed for a
		      more efficient write at a later time. The server auto-purges
		      these regularly. This command allows you to purge all changes
		      pending. It may be useful to run this during low I/O load of
		      your server (eg at night).
		      </para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term>
		      <option>--list-orphans</option>
		    </term>
		    <listitem>
		      <para>When a user is removed, the store becomes
		      orphaned. This option shows a list of stores that are
		      not hooked to a user. You can use the
		      <option>--remove-store</option> and
		      <option>--hook-store</option> from this list.</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term>
		      <option>--hook-store</option>
		      <replaceable>store-guid</replaceable>
		    </term>
		    <listitem>
		      <para>You can hook an orphaned store to an existing
		      user, so you may access the store again. Use the
		      <option>-u</option> <replaceable>username</replaceable>
			  to specify the user to hook the store to.</para>
			  <para>You can copy an orphaned store to the public
			  store. Use the <option>--copyto-public</option> to
			  copy the store to the public folder named 'Admin/deleted
			  stores'. This folder is then only visible for users with Zarafa admin privileges.</para>
			  <para>To hook a public store, use <option>--type</option> group/company to
			  influence the name type in the -u switch.</para>
			  <para>To hook an archive store, use <option>--type</option>
			  <replaceable>archive</replaceable>.</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term>
		      <option>--remove-store</option>
		      <replaceable>store-guid</replaceable>
		    </term>
		    <listitem>
		      <para>Use this action to remove the store from the
		      database. The store is actually just marked as deleted,
		      so the softdelete system can remove the store from the
		      database.</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term>
		      <option>--create-store</option>
		      <replaceable>username</replaceable>
		    </term>
		    <listitem>
		      <para>This action will create a store for a newly
		      created user, and is normally called through the
		      createuser script. If the
		      <option>--list-orphans</option> action listed users
		      without a store, you can create a new store for those
		      users with this command.</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term>
		      <option>--unhook-store</option>
		      <replaceable>username</replaceable>
		    </term>
		    <listitem>
		      <para>You can unhook a store from a user, so you can
		      remove the store and create a new one.</para><para>To
		      unhook a public store, use the <option>--type</option>
		      group/company option to influence the name type in the
		      <replaceable>username</replaceable> argument. Use a companyname with type
		      company or 'Everyone' with type group to unhook the
		      public.</para><para>To unhook an archive store, use
		      <option>--type</option>
		      <replaceable>archive</replaceable>.</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--force-resync</option>
			  <replaceable>usernames</replaceable>
			</term>
			<listitem>
			  <para>You can force a resync of cached profiles when the
			  data is out of sync. One or more usernames can be
			  specified. If no usernames are given, all offline
			  profiles can be resynced.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--reset-folder-count</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Reset the counters on all folders in
			  <replaceable>username</replaceable>'s store.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--user-count</option>
			</term>
			<listitem>
			  <para>Shows an overview of user counts per type of user,
			  and how much are allowed by your current license.</para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>


	  <refsection>
		<title>Options</title>
		<para>The options used by actions are as follows:</para>

		<variablelist>
		  <varlistentry>
			<term>
			  <option>-U</option>
			  <replaceable>'new username'</replaceable>
			</term>
			<listitem>
			  <para>Use this parameter to rename a user. This option
			  is only valid with the <parameter>-u</parameter>
			  update action.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-p</option>
			  <replaceable>password</replaceable>
			</term>
			<listitem>
			  <para>Set password for a user. This option is only valid
			  with the <parameter>-c</parameter> create or
			  <parameter>-u</parameter> update action.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-P</option>
			</term>
			<listitem>
			  <para>Set password for a user. The password can be
			  entered on the password prompt. The password will not be
			  shown. This option is only valid with the
			  <parameter>-c</parameter> create or
			  <parameter>-u</parameter> update action.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-f</option>
			  <replaceable>'full name'</replaceable>
			</term>
			<listitem>
			  <para>Specify full user name. Use single quotes around
			  the name to pass it as a single parameter. This option
			  is only valid with the <parameter>-c</parameter> create
			  or <parameter>-u</parameter> update action.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-e</option>
			  <replaceable>'email address'</replaceable>
			</term>
			<listitem>
			  <para>Specify the email address. This address will be
			  used to set the 'From' email address in outgoing email
			  messages. Use single quotes around the name to pass it
			  as a single parameter. This option is only valid with
			  the <parameter>-c</parameter> create or
			  <parameter>-u</parameter> update action.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-a</option>
			  <replaceable>[yes|y|1|2 / no|n|0]</replaceable>
			</term>
			<listitem>
			  <para>Set the user as administrator by passing 'yes'. When
			  passing 'no', administrator rights will be revoked from the
			  user. This option is only valid with the
			  <parameter>-c</parameter> create or
			  <parameter>-u</parameter> update action.</para>
			  <para>It is also possible to pass 2 as administrator level,
			  this will make the user a system administrator who can
			  create/modify/delete companies.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-n</option>
			  <replaceable>[yes|y|1 / no|n|0]</replaceable>
			</term>
			<listitem>
			  <para>Specify a non-active user. This user cannot login,
			  but email can be delivered, and the store can be opened
			  by users with correct rights.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--qo</option>
			  <replaceable>[yes|y|1 / no|n|0]</replaceable>
			</term>
			<listitem>
			  <para>Override the default server quota settings for
			  this user. User specific quota levels will used. The
			  default value of this option is 'no', always using
			  server quota levels. This option is only valid with the
			  <parameter>-c</parameter> create or
			  <parameter>-u</parameter> update action.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--qw</option>
			  <replaceable>value in Mb</replaceable>
			</term>
			<listitem>
			  <para>Set the warning quota level for a user. The user
			  may receive a warning email when this level is
			  reached. See
			  <citerefentry><refentrytitle>zarafa-monitor</refentrytitle>
			  <manvolnum>8</manvolnum></citerefentry>
			  for warning emails. This option is only valid with the
			  <parameter>-c</parameter> create or
			  <parameter>-u</parameter> update action.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--qs</option>
			  <replaceable>value in Mb</replaceable>
			</term>
			<listitem>
			  <para>Set the soft quota level for a user. The user will
			  be unable to receive new emails, bouncing the email back
			  to the sender. This option is only valid with the
			  <parameter>-c</parameter> create or
			  <parameter>-u</parameter> update action.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--qh</option>
			  <replaceable>value in Mb</replaceable>
			</term>
			<listitem>
			  <para>Set the hard quota level for a user. The user will
			  be unable to receive and create new emails. This option
			  is only valid with the <parameter>-c</parameter> create
			  or <parameter>-u</parameter> update action.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--udqo</option>
			  <replaceable>[yes|y|1 / no|n|0]</replaceable>
			</term>
			<listitem>
			  <para>Override the default server quota settings for
			  all user within the specified tenant.
			  default value of this option is 'no', always using
			  server quota levels.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--udqw</option>
			  <replaceable>value in Mb</replaceable>
			</term>
			<listitem>
			  <para>Set the warning quota level for all users within the specified tenant.
			  The user may receive a warning email when this level is reached. See
			  <citerefentry><refentrytitle>zarafa-monitor</refentrytitle>
			  <manvolnum>8</manvolnum></citerefentry>
			  for warning emails.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--udqs</option>
			  <replaceable>value in Mb</replaceable>
			</term>
			<listitem>
			  <para>Set the soft quota level for all users within the specified tenant.
			  The user will be unable to receive new emails, bouncing the email back
			  to the sender. See <citerefentry><refentrytitle>zarafa-monitor</refentrytitle>
			  <manvolnum>8</manvolnum></citerefentry> for warning emails.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--udqh</option>
			  <replaceable>value in Mb</replaceable>
			</term>
			<listitem>
			  <para>Set the hard quota level for all users within the specified tenant.
			  The user will be unable to receive and create new emails. See
			  <citerefentry><refentrytitle>zarafa-monitor</refentrytitle>
			  <manvolnum>8</manvolnum></citerefentry> for warning emails.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-i</option>
			  <replaceable>groupname</replaceable>
			</term>
			<listitem>
			  <para>This sets the groupname for
			  <parameter>-b</parameter> and <parameter>-B</parameter>
			  actions.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-I</option>
			  <replaceable>companyname</replaceable>
			</term>
			<listitem>
			  <para>This sets the companyname for
			  all user, group and tenant commands.
			  This option is only available for multi-tenancy Zarafa.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--mr-accept</option>
			  <replaceable>[yes|y|1 / no|n|0]</replaceable>
			</term>
			<listitem>
			  <para>Specified that meeting requests should automatically be
  			  accepted for a user. This means that when a meeting request
			  is sent to this user when specified as being a 'resource', the
			  request will directly be honoured and written to the calendar.
			  This is a client-side action and this setting therefore does
			  not affect actual meeting requests being delivered via
			  zarafa-dagent. The user on which to operate is select using
			  the <parameter>-u</parameter> switch.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--mr-decline-conflict</option>
			  <replaceable>[yes|y|1 / no|n|0]</replaceable>
			</term>
			<listitem>
			  <para>This option only has effect when --mr-accept=yes is in
  			  effect. When specifying --mr-decline-conflict, meeting requests
			  that conflict with an existing meeting will be declined. The
			  user on which to operate is select using the <parameter>-u</parameter>
			  switch.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--mr-decline-recurring</option>
			  <replaceable>[yes|y|1 / no|n|0]</replaceable>
			</term>
			<listitem>
			  <para>This option only has effect when --mr-accept=yes is in
  			  effect. When specifying --mr-decline-recurring, meeting requests
			  that are recurring will be declined. The user on which to operate
			  is select using the <parameter>-u</parameter> switch.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--add-sendas</option>
			  <replaceable>sender</replaceable>
			</term>
			<listitem>
			  <para>Add user <replaceable>sender</replaceable> to the
			  list of the senders you're updating as a 'send as'
			  user. The <replaceable>sender</replaceable> can now send
			  mails under the updated user's name, unless the updated
			  user sets the <replaceable>sender</replaceable> as a
			  delegate. When the <replaceable>sender</replaceable> is
			  a delegate, the mail will be sent with 'On behalf of'
			  markings in the email. This option is only valid with
			  the <parameter>-u</parameter> and <parameter>--update-group
	  		  </parameter> update action.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--del-sendas</option>
			  <replaceable>sender</replaceable>
			</term>
			<listitem>
			  <para>Remove user <replaceable>sender</replaceable> from
			  the list of the senders you're updating as a 'send as'
			  user. This option is only valid with the
			  <parameter>-u</parameter> and <parameter>--update-group
              </parameter>update action.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--lang</option>
			  <replaceable>language</replaceable>
			</term>
			<listitem>
			  <para>Use <replaceable>language</replaceable> to create new
			  stores; this means that folders in the new store will be in
			  the language specified. Only valid in combination with
			  --create-store. When this options in not specified, the system
			  default will be selected according the LC_* and LANG
			  environment variables, depending on your OS.
			  </para>
			</listitem>
		  </varlistentry>
		</variablelist>

		<para>
		  Other options to control the connection to the zarafa-server are:
		</para>

		<variablelist>
		  <varlistentry>
			<term><option>--host</option></term>
			<term>
			  <option>-h</option>
			  <replaceable>path</replaceable>
			</term>
			<listitem>
			  <para>Connect to the Zarafa server through
			  <replaceable>path</replaceable>, e.g.
			  <filename>file:///path/to/socket</filename>. Default:
			  <filename>file:///var/run/zarafa</filename>. This option
			  can always be specified.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--node</option>
			  <replaceable>name</replaceable>
			</term>
			<listitem>
				<para>Execute the command on cluster node
				<replaceable>name</replaceable>replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--config</option>
			  <replaceable>file</replaceable>
			</term>
			<listitem>
			  <para>Use a configuration file. See the
			  <citerefentry><refentrytitle>CONFIG</refentrytitle></citerefentry>
			  section for more information.</para>
			  <para>Default: <replaceable>/etc/zarafa/admin.cfg</replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Config</title>

		<para>Normally, no configuration file is used or required. If
		the file <replaceable>/etc/zarafa/admin.cfg</replaceable>
		exists, it is used as configuration file, but no error
		checking is performed. This way, you can use any config file
		from a zarafa program, eg. zarafa-spooler or zarafa-dagent, to
		load SSL settings.</para><para>The following options can be set in the
		configuation file:</para>

		<variablelist>
		  <varlistentry>
			<term><option>server_socket</option></term>
			<listitem>
			  <para>Unix socket to find the connection to the Zarafa
			  server.</para>
			  <para>Default:
			  <parameter>file:///var/run/zarafa</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_file</option></term>
			<listitem>
			  <para>Use this file as key to logon to the server. This
			  is only used when server_socket is set to an HTTPS
			  transport. See the
			  <citerefentry>
				<refentrytitle>zarafa-server</refentrytitle>
				<manvolnum>8</manvolnum>
			  </citerefentry>
			  manual page on how to setup SSL keys.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_pass</option></term>
			<listitem>
			  <para>The password of the SSL key file that is set in
			  sslkey_file.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Examples</title>

		<para>For creating a user:</para>

		<para><command>zarafa-admin</command> <option>-c</option>
		<replaceable>loginname</replaceable> <option>-p</option>
		<replaceable>password</replaceable> <option>-f</option>
		<replaceable>'Firstname Lastname'</replaceable>
		<option>-e</option>
		<replaceable>f.lastname@tenant.com</replaceable></para>

		<para>For creating a non-login store:</para>

		<para><command>zarafa-admin</command> <option>-c</option>
		<replaceable>loginname</replaceable> <option>-p</option>
		<replaceable>password</replaceable> <option>-f</option>
		<replaceable>'Firstname Lastname'</replaceable>
		<option>-e</option>
		<replaceable>f.lastname@tenant.com</replaceable>
		<replaceable>-n</replaceable> 1</para>

		<para>For modifying the password and e-mail address:</para>

		<para><command>zarafa-admin</command> <option>-u</option>
		<replaceable>loginname</replaceable> <option>-p</option>
		<replaceable>newpass</replaceable> <option>-e</option>
		<replaceable>fistname@tenant.com</replaceable></para>

		<para>For deleting a user:</para>

		<para><command>zarafa-admin</command> <option>-d</option>
		<replaceable>loginname</replaceable></para>

		<para>For adding a user to a group:</para>

		<para><command>zarafa-admin</command> <option>-b</option>
		<replaceable>loginname</replaceable> <option>-i</option>
		<replaceable>groupname</replaceable></para>

		<para>For setting a specific quota level for a user. Warning
		level to 80 Mb, soft level to 90 Mb and hard level to 100
		Mb:</para>

		<para><command>zarafa-admin</command> <option>-u</option>
		<replaceable>loginname</replaceable> <option>--qo</option>
		<replaceable>yes</replaceable> <option>--qw</option>
		<replaceable>80</replaceable> <option>--qs</option>
		<replaceable>90</replaceable> <option>--qh</option>
		<replaceable>100</replaceable></para>

		<para>For automatically accepting meeting requests for a user or resource:</para>

		<para><command>zarafa-admin</command>
		<option>-u</option>	<replaceable>loginname</replaceable>
		<option>--mr-accept</option> <replaceable>y</replaceable>
		<option>--mr-decline-conflict</option> <replaceable>y</replaceable>
		<option>--mr-decline-recurring</option> <replaceable>n</replaceable>
		</para>

	  </refsection>

	  <refsection>
		<title>External users</title>
		<para>When the users are located in an external database, and
		the Zarafa server is configured to use these users, a lot of
		commands from the zarafa-admin tool make no sense anymore. An
		example of an external database, and currently the only
		option, is an LDAP database.</para><para>The following actions
		can still be used, all other commands will be automatically
		triggered by changing the values in the LDAP server.</para>

		<para>
		  <option>-s</option>: create public store.
		</para><para>
		  <option>-l</option>: list users known to Zarafa.
		</para><para>
		  <option>-L</option>: list groups known to Zarafa.
		</para><para>
		  <option>--details</option>
		  <replaceable>username</replaceable>: show user details.
		</para><para>
		  <option>--sync</option>: trigger full synchonise for users
		  and groups from the external source.
		</para>

		<para>When the users change in the external source, the Zarafa
		server instantly synchronizes to these changes. There are two
		exceptions that need some extra attention, and these are when
		users are created or deleted. When a user is created, the
		<option>createuser_script</option> from the
		<citerefentry><refentrytitle>zarafa-server.cfg</refentrytitle>
		<manvolnum>5</manvolnum></citerefentry> will be started to
		create a store for a user. Likewise, when deleting a user, the
		<option>deleteuser_script</option> from the
		<citerefentry><refentrytitle>zarafa-server.cfg</refentrytitle>
		<manvolnum>5</manvolnum></citerefentry> will be started to
		delete a store from a user. The same is valid for creating and
		deleting a group and tenant, starting the
		<option>creategroup_script</option>/<option>createcompany_script</option> and
		<option>deletegroup_script</option>/<option>deletecompany_script</option>
		scripts respectively.</para>
	  </refsection>

	  <refsection>
		<title>Diagnostics</title>

		<para><errortext>Could not create user/store/public
		store.</errortext></para>

		<para>When you get this error, make sure the Zarafa server and
		database server are running.</para>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-server</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-server.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Passwd manual page (5.0 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-passwd</refentrytitle>
		<manvolnum>1</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-passwd</refname>
		<refpurpose>Change Zarafa user password.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-passwd</command>
		  <arg choice="plain"><replaceable>ACTION</replaceable></arg>
		  <arg rep="repeat"><replaceable>OPTION</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>This tool can be used to change a user password.
		The Zarafa server must be running for
		<command>zarafa-passwd</command> to work.
		</para>

		<para>If no action is given, an error message is printed.
		When invalid actions or not enough options for an action
		are given, an error message is printed.</para>

		<para>The Zarafa passwd works only with the dbplugin.
		Please see the
		<citerefentry>
		  <refentrytitle>EXTERNAL USERS</refentrytitle>
		</citerefentry> section for more information.</para>
	  </refsection>

	  <refsection>
		<title>Actions</title>
		<para>zarafa-passwd needs an action command with the appropriate
		options. Valid actions are:</para>

		<variablelist>
		  <varlistentry>
			<term>
			  <option>-u</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Update the password. Valid parameters are:
			  <parameter>[-p]</parameter> and <parameter>-o</parameter>
			  </para>
			  <para>Default the password can be entered on the password
					prompt. The password will not be shown.</para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Options</title>
		<para>The options used by actions are as follows:</para>

		<variablelist>
		  <varlistentry>
			<term>
			  <option>-p</option>
			  <replaceable>'new password'</replaceable>
			</term>
			<listitem>
			  <para>Set new password for a user. This option is only valid
			  with the <parameter>-o</parameter>.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-o</option>
			  <replaceable>oldpassword</replaceable>
			</term>
			<listitem>
			  <para>old password of a user. This option is only valid
			  with the <parameter>-p</parameter>.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--host</option></term>
			<term>
			  <option>-h</option>
			  <replaceable>path</replaceable>
			</term>
			<listitem>
			  <para>Connect to the Zarafa server through
			  <replaceable>path</replaceable>, e.g.
			  <filename>file:///path/to/socket</filename>. Default:
			  <filename>file:///var/run/zarafa</filename>. This option
			  can always be specified.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>
	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-server</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-server.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa set oof manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-set-oof</refentrytitle>
		<manvolnum>1</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-set-oof</refname>
		<refpurpose>Control a user's out of office settings.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-set-oof</command>
		  <arg choice="opt">-h <arg choice="plain"><replaceable>hostname</replaceable></arg></arg>
		  <arg choice="opt">-m <arg choice="plain"><replaceable>mode</replaceable></arg></arg>
		  <arg choice="opt">-n <arg choice="plain"><replaceable>msgfile</replaceable></arg></arg>
		  <arg choice="opt">-p <arg choice="plain"><replaceable>keypass</replaceable></arg></arg>
		  <arg choice="opt">-s <arg choice="plain"><replaceable>keyfile</replaceable></arg></arg>
		  <arg choice="opt">-t <arg choice="plain"><replaceable>subject</replaceable></arg></arg>
		  <arg choice="opt">-u <arg choice="plain"><replaceable>username</replaceable></arg></arg>
		  <arg choice="opt">--from <arg choice="plain"><replaceable>datetime</replaceable></arg>
		  --until <arg choice="plain"><replaceable>datetime</replaceable></arg></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>This tool can be used to change a user's out of office settings.
		The Zarafa server must be running for
		<command>zarafa-set-oof</command> to work.
		</para>
	  </refsection>

	  <refsection>
		<title>Options</title>

		<variablelist>
		  <varlistentry>
		    <term><option>-h</option> <replaceable>hostname</replaceable></term>
		    <listitem>
		    <para>Connect to the given Zarafa server. This defaults to
		    file:///var/run/zarafa.</para>
		    </listitem>
		  </varlistentry>
		</variablelist>

		<variablelist>
		  <varlistentry>
			<term><option>-m</option></term>
			<term><option>--mode</option> <option>0</option></term>
			<listitem>
			  <para>Disable the user's out of office reply.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>-m</option></term>
			<term><option>--mode</option> <option>1</option></term>
			<listitem>
			  <para>Enable the user's out of office reply.</para>
			</listitem>
		  </varlistentry>
		  
		  <varlistentry>
			<term><option>-m</option></term>
			<term><option>--mode</option> <option>-</option></term>
			<listitem>
				<para>Don't enable or disable the user's out of office
				reply. Just update the subject and message, unless the
				user's out of office reply is enabled. This is
				the default mode.</para>
				<para>This is useful to update all out of office
				settings without enabling them and without changing
				the messages of enabled replies because that might
				overwrite some useful information that a user has set.
				</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>-n</option></term>
		    <term><option>--message</option> <replaceable>file</replaceable></term>
		    <listitem>
		    <para>Reads the given text file and uses its contents for
		    the autoreply's message body.</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>-p</option></term>
		    <term><option>--sslkey-pass</option> <replaceable>password</replaceable></term>
		    <listitem>
		    <para>Use the given password to access the
		    certificate.</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>-s</option></term>
		    <term><option>--sslkey-file</option> <replaceable>sslkey</replaceable></term>
		    <listitem>
		    <para>Use the given certificate when connecting to the
		    Zarafa server.</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>-t</option></term>
		    <term><option>--subject</option> <replaceable>text</replaceable></term>
		    <listitem>
		    <para>The subject for Out Of Office messages will be set to
		    the specified text.</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>-u</option></term>
		    <term><option>--user</option> <replaceable>name</replaceable></term>
		    <listitem>
		    <para>Modify the Out Of Office settings for the particular
		    user.</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>--from</option></term>
		    <term><option>--until</option> <replaceable>datetime</replaceable></term>
		    <listitem>
		    <para>Limit the OOF responder to the given timeframe.
		    Both options, or neither of the two, must be specified.
		    The format to use as argument is to be in the form of
		    "2015-04-01 23:50" (ISO-8601-like), and is taken to be in
		    local time.</para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa mailbox permissions manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-mailbox-permissions</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-mailbox-permissions</refname>
		<refpurpose>Manage mailbox delegate permissions.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-mailbox-permissions</command>
		  <arg choice="plain"><replaceable>ACTION</replaceable></arg>
		  <arg rep="repeat"><replaceable>MAILBOXES</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>This script can be used to show delegate permissions and
		settings for users.  The Zarafa server must be running for
		<command>zarafa-mailbox-permissions</command> to work.
		</para>

		<para>You can show delegates and permissions information, and
		add or update delegate permissions on a mailbox.</para>
	  </refsection>

	  <refsection>
		<title>Actions</title>
		<para>zarafa-mailbox-permissions needs an action command with
		the appropriate options. Valid actions are:</para>

		<variablelist>
		  <varlistentry>
			<term>
			  <option>--update-delegate</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Add or update delegate information for
			  <replaceable>username</replaceable> on specified
			  <replaceable>mailboxes</replaceable>.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--remove-all-permissions</option>
			</term>
			<listitem>
			  <para>Removes all delegates and explicit permissions on
			  folders from one or more <replaceable>mailboxes</replaceable>.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--list-permissions</option>
			</term>
			<listitem>
			  <para>Show all delegates and folder permissions of one
			  or more <replaceable>mailbox</replaceable>.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--list-permissions-per-folder</option>
			</term>
			<listitem>
			  <para>Show delegates and folder containing explicit
			  permissions of one or more
			  <replaceable>mailbox</replaceable>.
			  </para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Options</title>
		<para>The options used by actions are as follows:</para>

		<variablelist>
		  <varlistentry>
			<term>
			  <option>-a</option>, <option>--all</option>
			</term>
			<listitem>
			  <para>Perform the action on all available users in the zarafa-server.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-h</option>, <option>--host</option>
			  <replaceable>URL</replaceable>
			</term>
			<listitem>
			  <para>Use URL to connect to the zarafa-server. Default
			  is
			  <replaceable>file:///var/run/zarafa</replaceable>.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-s</option>, <option>--sslkey-file</option>
			  <replaceable>FILENAME</replaceable>
			</term>
			<listitem>
			  <para>Use this file as the SSL private key to connect to the zarafa-server. Default
			  is no SSL key.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-p</option>, <option>--sslkey-pass</option>
			  <replaceable>PASSWORD</replaceable>
			</term>
			<listitem>
			  <para>Use this password as the SSL private key password. Default
			  is no SSL key password.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--verbose</option>
			</term>
			<listitem>
			  <para>Currently unused, but may be used in the future
			  for more information.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--calendar</option>
			  <replaceable>[none|readonly|secretary|owner]</replaceable>
			</term>
			<listitem>
			  <para>When updating a delegate, set these permissions on
			  the default calendar folder of the given
			  <replaceable>mailboxes</replaceable>. Select one of the
			  permission preset to set on the folder.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--tasks</option>
			  <replaceable>[none|readonly|secretary|owner]</replaceable>
			</term>
			<listitem>
			  <para>When updating a delegate, set these permissions on
			  the default tasks folder of the given
			  <replaceable>mailboxes</replaceable>. Select one of the
			  permission preset to set on the folder.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--inbox</option>
			  <replaceable>[none|readonly|secretary|owner]</replaceable>
			</term>
			<listitem>
			  <para>When updating a delegate, set these permissions on
			  the default inbox folder of the given
			  <replaceable>mailboxes</replaceable>. Select one of the
			  permission preset to set on the folder.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--notes</option>
			  <replaceable>[none|readonly|secretary|owner]</replaceable>
			</term>
			<listitem>
			  <para>When updating a delegate, set these permissions on
			  the default notes folder of the given
			  <replaceable>mailboxes</replaceable>. Select one of the
			  permission preset to set on the folder.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--journal</option>
			  <replaceable>[none|readonly|secretary|owner]</replaceable>
			</term>
			<listitem>
			  <para>When updating a delegate, set these permissions on
			  the default journal folder of the given
			  <replaceable>mailboxes</replaceable>. Select one of the
			  permission preset to set on the folder.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--store</option>
			  <replaceable>[denied|norights|readonly|secretary|owner|fullcontrol]</replaceable>
			</term>
			<listitem>
			  <para>When updating a delegate, set these permissions on
			  the store of the given
			  <replaceable>mailboxes</replaceable>. All folders in the
			  store inherit these permissions unless explicitly
			  overwritten. Select one of the permission preset to set
			  on the store.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--see-private</option>
			  <replaceable>[no|yes]</replaceable>
			</term>
			<listitem>
			  <para>When updating a delegate, allow the delegate to
			  see private marked items of the given
			  <replaceable>mailboxes</replaceable>.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--sendcopy</option>
			  <replaceable>[no|yes]</replaceable>
			</term>
			<listitem>
			  <para>When updating a delegate, mark the delegate to
			  receive a copy of meeting requests in their inbox for
			  the given <replaceable>mailboxes</replaceable>.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--send-only-to-delegators</option>
			  <replaceable>[no|yes]</replaceable>
			</term>
			<listitem>
			  <para>When updating a delegate, and
			  <option>--sendcopy</option> is used, let the delegates
			  receive meeting requests only, and not the owner of the
			  given <replaceable>mailboxes</replaceable>.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--help</option>
			</term>
			<listitem>
			  <para>Show a help text of the program and some usage examples.</para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>
	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-server</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-server.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Server Configuration file manual page (5.0 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-server.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-server.cfg</refname>
		<refpurpose>The Zarafa configuration file</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>server.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>server.cfg</filename> is a configuration file for
		the zarafa-server process. <filename>server.cfg</filename>
		contains instructions for the software to set up the database
		environment, logging system and license.</para>
	  </refsection>

	  <refsection>
		<title>File format</title>

		<para>The file consists of one big section, but parameters can be
		grouped by functionality.</para>

		<para>The parameters are written in the form:</para>

		<para><option>name</option> = <replaceable>value</replaceable></para>

		<para>The file is line-based. Each newline-terminated line
		represents either a comment, nothing, a parameter or a directive.
		A line beginning with `#' is considered a comment, and will be
		ignored	by Zarafa. Parameter names are case sensitive. Lines
		beginning with `!' are directives.</para>

		<para>Directives are written in the form:</para>

		<para>!<option>directive</option> <replaceable>[argument(s)]
		</replaceable></para>

		<para>The following directives exist:</para>
		<variablelist>
		  <varlistentry>
		    <term><option>include</option></term>
		    <listitem>
		      <para>Include and process <replaceable>argument</replaceable>
		      </para>
		      <para>Example: !include common.cfg</para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the Server Settings parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>server_bind</option></term>
			<listitem>
			  <para>IP address to bind to. 0.0.0.0 for any
			  address. Keep in mind that both Webaccess and Outlook
			  should be able to connect. The Webaccess normally
			  connects on 127.0.0.1, and Outlook over the
			  network.</para>
			  <para>Default: <replaceable>0.0.0.0</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_tcp_enabled</option></term>
			<listitem>
			  <para>Enable direct TCP connections.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_tcp_port</option></term>
			<listitem>
			  <para>Port to listen on.</para>
			  <para>Default: <replaceable>236</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_pipe_enabled</option></term>
			<listitem>
			  <para>Enable Unix pipe connections. Should not be disabled.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_recv_timeout</option></term>
			<listitem>
			  <para>TCP and SSL receive timeout in seconds. This is the time
			  that a TCP connection may be idle (between requests) before
			  the TCP connection is closed from the server. Settings this
			  high makes it less necessary for clients to re-connect, but
			  increases the total number of concurrent open sockets in the
			  server. You normally needn't change the default value.</para>
			  <para>Default: <replaceable>5</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_read_timeout</option></term>
			<listitem>
			  <para>TCP and SSL read timeout in seconds. The read timeout is
			  the amount of time that the server will wait to read more data
			  from a socket, after processing of the request has started.
			  This needn't be changed in most cases.</para>
			  <para>Default: <replaceable>60</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_send_timeout</option></term>
			<listitem>
			  <para>TCP and SSL send timeout in seconds. The send timeout is
			  the amount of time that the server will wait to write data to
			  a socket, analogous to server_read_timeout.</para>
			  <para>Default: <replaceable>60</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_max_keep_alive_requests</option></term>
			<listitem>
			  <para>Limits the number of requests allowed per connection.</para>
			  <para>Default: <replaceable>100</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_pipe_name</option></term>
			<listitem>
			  <para>Unix socket to listen on.</para>
			  <para>Default:
			  <replaceable>/var/run/zarafa</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_pipe_priority</option></term>
			<listitem>
			  <para>Priority unix socket to listen on. This socket is only used by the zarafa-licensed daemon.</para>
			  <para>Default:
			  <replaceable>/var/run/zarafa-prio</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_name</option></term>
			<listitem>
			  <para>Unique name for identifying the server in a multi-server environment.</para>
			  <para>Default:
			  <replaceable>Zarafa</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_hostname</option></term>
			<listitem>
			  <para>DNS name of the server. This is used for the
			  Kerberos single sign-on environment. If empty (default),
			  the FQDN or hostname will be used.</para>
			  <para>Default:
			  <replaceable></replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>database_engine</option></term>
			<listitem>
			  <para>The database engine to use. Values can be:</para>
			  <variablelist>
				<varlistentry>
				  <term><replaceable>mysql</replaceable></term>
				  <listitem>
					<para>Use MySQL.</para>
				  </listitem>
				</varlistentry>
			  </variablelist>
			  <para>Default: <replaceable>mysql</replaceable></para>
			</listitem>
		  </varlistentry>


		  <varlistentry>
			<term><option>allow_local_users</option></term>
			<listitem>
			  <para>Named Unix users which connect through the unix
			  socket (server_pipe_name) which are added here, those
			  users will become the internal SYSTEM user in Zarafa,
			  and have administrative rights. Normally, this is only
			  'root', so the unix root user can use the zarafa-admin
			  tool. You can add a generic user to be used by the
			  zarafa-dagent here. This user is most likely called
			  'vmail'. Note that the field is SPACE separated.</para>
			  <para>Default:
			  <replaceable>root</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>system_email_address</option></term>
			<listitem>
			  <para>This is the e-mail address of the SYSTEM
			  user. When people receive mail from the quota monitor,
			  or receive fallback deliveries from the zarafa-dagent,
			  the From email address is this field. You might want to
			  change this field so people can reply to this
			  address.</para>
			  <para>Default:
			  <replaceable>postmaster@localhost</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_user</option></term>
			<listitem>
			  <para>After correctly starting, the server process will
			  become this user, dropping root privileges. Note that
			  the log file needs to be writeable by this user, and the
			  directory too to create new logfiles after
			  logrotation. This can also be achieved by setting the
			  correct group and permissions.
			  </para>
			  <para>Default value is empty, not changing the user
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_group</option></term>
			<listitem>
			  <para>After correctly starting, the server process will
			  become this group, dropping root privileges.
			  </para>
			  <para>Default value is empty, not changing the group
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pid_file</option></term>
			<listitem>
			  <para>Write the process ID number to this file. This is
			  used by the init.d script to correctly stop/restart the
			  service.
			  </para>
			  <para>Default:
			  <replaceable>/var/run/zarafa-server.pid</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>running_path</option></term>
			<listitem>
			  <para>Change directory to this path when running in
			  daemonize mode. When using the -F switch to run in the
			  foreground the directory will not be changed.
			  </para>
			  <para>Default:
			  <replaceable>/</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>coredump_enabled</option></term>
			<listitem>
			  <para>When a segfault occurs, a coredump file will be
			  written in the running_path directory. This file should
			  be sent along with the crash report.
			  </para>
			  <para>Default:
			  <replaceable>yes</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>session_timeout</option></term>
			<listitem>
			  <para>
			  The session timeout specifies how many seconds must elapse
			  without any activity from a client before the server counts
			  the session as dead. The client sends keepalive requests every
			  60 seconds, so the session timeout can never be below 60. In
			  fact, if you specify a timeout below 300, 300 will be taken as
			  the session timeout instead. This makes sure you can never
			  timeout your session while the Zarafa client is running.
			  </para>
			  <para>
			  Setting the session timeout low will keep the session count
			  and therefore the memory usage on the server low, but may also
			  timeout sessions of client that have lost network connectivity
			  temporarily. For example, some clients with powersaving modes
			  will disable the ethernet card during the screensaver. When
			  this happens, you must set the session_timeout to a value that
			  is higher than the time that it takes for the network
			  connection to come back. This could be anything ranging up to
			  several hours.
			  </para>
			  <para>Default: <replaceable>300</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>session_ip_check</option></term>
			<listitem>
			  <para>Normally, a session is linked to an IP-address, so
			  this check is enabled. You may want to disable this
			  check when you have laptop's which can get multiple
			  ip-adresses through wired and wireless networks. It is
			  highly recommended to leave this check enabled, since
			  the session id can be used by other machines, and thus
			  introduces a large security risc. Since version 6.20,
			  the session id is 64 bits. Older versions use a 32 bit
			  session id, so then the session is easier guessable.
			  </para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>hide_everyone</option></term>
			<listitem>
			  <para>If this option is set to 'yes', the internal group
			  Everyone (which always contains all users) will be
			  hidden from the Global Addressbook. Thus, users will not
			  be able to send e-mail to this group anymore, and also
			  will not be able to set access rights on folders for
			  this group. Administrators will still be able to see and
			  use the group.
			  </para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>hide_system</option></term>
			<listitem>
			  <para>If this option is set to 'yes', the internal user
			  SYSTEM will be hidden from the Global Addressbook.
			  Thus, users will not be able to send e-mail to this user
			  anymore.
			  Administrators will still be able to see and use the user.
	  		  </para>
			  <para>Default: <replaceable>yes</replaceable></para>
	 		</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>thread_stacksize</option></term>
			<listitem>
			  <para>This setting might be useful on 32-bit system with
			  a lot of users. This setting should not be set too
			  small, or your server will crash. The value set is in
			  Kb.</para>
			  <para>Default: <replaceable>512</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>license_socket</option></term>
			<listitem>
			  <para>Path to the
				<citerefentry>
				  <refentrytitle>zarafa-licensed</refentrytitle>
				  <manvolnum>8</manvolnum>
				</citerefentry>
				service.</para>
			  <para>Default: <replaceable>/var/run/zarafa-licensed</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>license_timeout</option></term>
			<listitem>
			  <para>Time (in seconds) to wait for a connection to the
				<citerefentry>
				  <refentrytitle>zarafa-licensed</refentrytitle>
				  <manvolnum>8</manvolnum>
				</citerefentry>
				before terminating the request.</para>
			  <para>Default: <replaceable>10</replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the Logging Settings parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>log_method</option></term>
			<listitem>
			  <para>The method which should be used for logging. Valid
			  values are:</para>

			  <variablelist>
				<varlistentry>
				  <term><replaceable>syslog</replaceable></term>
				  <listitem>
					<para>Use the Linux system log. All messages will
					be written to the mail facility. See also <citerefentry>
					<refentrytitle>syslog.conf</refentrytitle>
					<manvolnum>5</manvolnum>
					</citerefentry>.</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><replaceable>file</replaceable></term>
				  <listitem>
					<para>Log to a file. The filename will be
					specified in <option>log_file</option>.</para>
				  </listitem>
				</varlistentry>
			  </variablelist>
			  <para>Default: <replaceable>file</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_file</option></term>
			<listitem>
			  <para>When logging to a file, specify the filename in
			  this parameter. Use <replaceable>-</replaceable> (minus
			  sign) for stderr output.</para>
			  <para>Default: <replaceable>/var/log/zarafa/server.log</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_level</option></term>
			<listitem>
			  <para>The level of output for logging in the range from
			  0 to 5. 0 means no logging, 5 means full logging.</para>
			  <para>Default: <replaceable>2</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_timestamp</option></term>
			<listitem>
			  <para>Specify whether to prefix each log line with a
			  timestamp in 'file' logging mode.</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_buffer_size</option></term>
			<listitem>
			  <para>Buffer logging in what sized blocks.
                              Bigger buffers is better for the performance but it gives lag
                              when running e.g. multitail or 'tail -f' on the log-file. If
                              you want to directly see what is happing, set this to e.g. 1.
                              So when debugging: make it a small value, else set it to
                              4096 or more.</para>
			  <para>Default: <replaceable>4096</replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>
	  <refsection>
		<title>Explanation of the Security Logging Settings parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>audit_log_enabled</option></term>
			<listitem><para>Whether the security logging feature
			should be enabled.</para>
			<para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>audit_log_method</option></term>
			<listitem>
			  <para>The method which should be used for logging. Valid
			  values are:</para>

			  <variablelist>
				<varlistentry>
				  <term><replaceable>syslog</replaceable></term>
				  <listitem>
					<para>Use the Linux system log. All messages will
					be written to the authpriv facility. See also <citerefentry>
					<refentrytitle>syslog.conf</refentrytitle>
					<manvolnum>5</manvolnum>
					</citerefentry>.</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><replaceable>file</replaceable></term>
				  <listitem>
					<para>Log to a file. The filename will be
					specified in <option>log_file</option>.</para>
				  </listitem>
				</varlistentry>
			  </variablelist>
			  <para>Default: <replaceable>syslog</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>audit_log_file</option></term>
			<listitem>
			  <para>When logging to a file, specify the filename in
			  this parameter. Use <replaceable>-</replaceable> (minus
			  sign) for stderr output.</para>
			  <para>Default: <replaceable>-</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>audit_log_level</option></term>
			<listitem>
			  <para>The level of output for logging in the range from
			  0 to 1. 0 means no logging, 1 means full logging.</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>audit_log_timestamp</option></term>
			<listitem>
			  <para>Specify whether to prefix each log line with a
			  timestamp in 'file' logging mode.</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the MySQL Settings parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>mysql_host</option></term>
			<listitem>
			  <para>The hostname of the MySQL server to use.</para>
			  <para>Default:
			  <replaceable>localhost</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>mysql_port</option></term>
			<listitem>
			  <para>The port of the MySQL server to use.</para>
			  <para>Default: <replaceable>3306</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>mysql_user</option></term>
			<listitem>
			  <para>The user under which we connect with MySQL.</para>
			  <para>Default: <replaceable>root</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>mysql_password</option></term>
			<listitem>
			  <para>The password to use for MySQL. Leave empty for no
			  password.</para>
			  <para>Default: <replaceable></replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>mysql_socket</option></term>
			<listitem>
				<para>The socket of the MySQL server to use. This option
						can be used to override the default mysql socket.
						To use the socket, the mysql_host value must be
						empty or 'localhost'</para>
			  <para>Default: <replaceable></replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>mysql_database</option></term>
			<listitem>
			  <para>The MySQL database to connect to.</para>
			  <para>Default: <replaceable>zarafa</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>mysql_group_concat_max_len</option></term>
		    <listitem>
		      <para>The group_concat_max_len used to set for MySQL. If you
		      have large distribution lists (more than 150 members), it is useful to set this value
		      higher. On the other hand, some MySQL versions are known to
		      break with a value higher than 21844.</para>
		      <para>Default: <replaceable>21844</replaceable></para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>attachment_storage</option></term>
			<listitem>
			  <para>The location where attachments are stored. This
			  can be in the MySQL database, or as separate files. The
			  drawback of 'database' is that the large data of
			  attachment will push useful data from the MySQL
			  cache. The drawback of separate files is that a
			  mysqldump is not enough for a full disaster recovery.</para>
			  <para>Default: <replaceable>files</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>attachment_path</option></term>
			<listitem>
			  <para>When the attachment_storage option is 'files',
			  this option sets the location of the attachments on
			  disk. Note that the server runs as the 'run_as_user'
			  user and 'run_as_group' group, which will require write
			  access to this directory.</para>
			  <para>Default: <replaceable>/var/lib/zarafa/attachments</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>attachment_compression</option></term>
			<listitem>
			  <para>When the attachment_storage option is 'files',
			  this option controls the compression level for the attachments.
			  Higher compression levels will compress data better,
			  but at the cost of CPU usage. Lower compression levels will
			  require less CPU but will compress data less. Setting the
			  compression level to 0 will effectively disable compression completely.
			  </para>
			  <para>Changing the compression level, or switching it on or off,
			  will not affect any existing attachments, and will remain accessible
			  as normal.</para>
			  <para>Set to <replaceable>0</replaceable> to disable compression
			  completely. The maximum compression level is
			  <replaceable>9</replaceable> </para>
			  <para>Default: <replaceable>6</replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the SSL Settings parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>server_ssl_enabled</option></term>
			<listitem>
			  <para>Enable direct SSL connections. When this option is
			  enabled, you must set the following ssl options
			  correctly, otherwise the server may or will not start.
			  </para>
			  <para>Default: <replaceable>no</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_ssl_port</option></term>
			<listitem>
			  <para>The portnumber to accept SSL connections on.
			  </para>
			  <para>Default: <replaceable>237</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_ssl_key_file</option></term>
			<listitem>
			  <para>The file containing the private key and
			  certificate. Please read the SSL section in the
			  <citerefentry><refentrytitle>zarafa-server</refentrytitle>
			  <manvolnum>8</manvolnum></citerefentry> manual on how to
			  create this file.
			  </para>
			  <para>Default:
			  <replaceable>/etc/zarafa/ssl/server.pem</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_ssl_key_pass</option></term>
			<listitem>
			  <para>Enter you password here when your key file
			  contains a password to be readable.
			  </para>
			  <para>No default set.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_ssl_ca_file</option></term>
			<listitem>
			  <para>The CA file which was used to sign client SSL
			  certificates. This CA will be trusted. This value must
			  be set for clients to login with an SSL Key. Their
			  public key must be present in the sslkeys_path
			  directory.
			  </para>
			  <para>No default set.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_ssl_ca_path</option></term>
			<listitem>
			  <para>When you have multiple CA's to trust, you may use
			  this option. Set this to a directory which contains all
			  your trusted CA certificates. The name of the
			  certificate needs to be the hash of the certificate. You
			  can get the hash value of the certificate with the
			  following command:</para>
			  <para>
				<command>
				  openssl x509 -hash -noout -in cacert.pem
				</command>
			  </para>
			  <para>Create a symbolic link to the certificate with the
			  hashname like this:</para>
			  <para>
				<command>
				  ln -s cacert.pem `openssl x509 -hash -noout -in cacert.pem`.0
				</command>
			  </para>
			  <para>If you have several certificates which result in
			  the same hash, use .1, .2, etc. in the end of the
			  filename.
			  </para>
			  <para>No default set.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkeys_path</option></term>
			<listitem>
			  <para>The path which contains public keys of clients
			  which can login over SSL using their key. Please read
			  the SSL section in the
			  <citerefentry><refentrytitle>zarafa-server</refentrytitle>
			  <manvolnum>8</manvolnum></citerefentry> manual on how to
			  create these files.</para>
			  <para>Default:
			  <replaceable>/etc/zarafa/sslkeys</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_ssl_protocols</option></term>
			<listitem>
			  <para>Disabled or enabled protocol names. Supported protocol names
			  are <replaceable>SSLv2</replaceable>, <replaceable>SSLv3</replaceable>
			  and <replaceable>TLSv1</replaceable>. If Zarafa was linked against
			  OpenSSL 1.0.1 or later there is additional support for the new protocols
			  <replaceable>TLSv1.1</replaceable> and <replaceable>TLSv1.2</replaceable>.
			  To exclude both, SSLv2 and SSLv3 set <option>server_ssl_protocols</option>
			  to <replaceable>!SSLv2 !SSLv3</replaceable>. SSLv2 is considered unsafe
			  and these connections should not be accepted.</para>
			  <para>Default: <replaceable>!SSLv2</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_ssl_ciphers</option></term>
			<listitem>
			  <para>SSL ciphers to use, set to <replaceable>ALL</replaceable> for backward compatibility.</para>
			  <para>Default: <replaceable>ALL:!LOW:!SSLv2:!EXP:!aNULL</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_ssl_prefer_server_ciphers</option></term>
			<listitem>
			  <para>Prefer the server's order of SSL ciphers over client's.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the threading parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>threads</option></term>
			<listitem>
			  <para>Number of server threads.</para>
			  <para>Default: <replaceable>8</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>watchdog_frequency</option></term>
			<listitem>
			  <para>Watchdog frequency. The number of watchdog
			  checks per second.</para>
	  		  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>watchdog_max_age</option></term>
			<listitem>
			  <para>Watchdog max age. The maximum age in ms of a task before
			  a new thread is started.</para>
			  <para>Default: <replaceable>500</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_max_keep_alive_requests</option></term>
			<listitem>
			  <para>Maximum SOAP keep_alive value.</para>
			  <para>Default: <replaceable>100</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_recv_timeout</option></term>
			<listitem>
			  <para>SOAP recv timeout value.</para>
			  <para>Default: <replaceable>5</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_send_timeout</option></term>
			<listitem>
			  <para>SOAP send timeout value.</para>
			  <para>Default: <replaceable>60</replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the Other Settings parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>softdelete_lifetime</option></term>
			<listitem>
			  <para>Softdelete clean cycle, in days. 0 means
			  never. Items older than this setting will be removed
			  from the database.</para>
			  <para>Default: <replaceable>0</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sync_lifetime</option></term>
			<listitem>
				<para>Synchronization clean cycle, in days. 0 means
				never. Synchronizations older than this setting will be
				removed	from the database.</para>
				<para>Default: <replaceable>90</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sync_log_all_changes</option></term>
			<listitem>
				<para>Normally changes to messages inside folders which
				no user is syncing from are not logged to the database as
				optimization. In some scenarios (i.e. when using BlackBerry
				synchronization) it is important for all changes to be logged
				regardless of the number of listeners to these changes.</para>
				<para>Setting this value to <replaceable>yes</replaceable>
				will cause slightly more database traffic and the value
				<replaceable>no</replaceable> will be the correct for
				most installations.</para>
				<para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>enable_sso</option></term>
			<listitem>
				<para>When you configured your system for single
				  sign-on, you can enable this by setting the value
				  to <replaceable>yes</replaceable>. The server can
				  autodetect between NTLM and Kerberos. For NTLM
				  authentication you will need the ntlm_auth program
				  from Samba. Please see the server installation
				  manual on howto enable your system for single
				  sign-on.</para>
				<para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>enable_gab</option></term>
			<listitem>
				<para>Enables viewing of the Global Address Book (GAB) by
				users. Disabling the GAB will show an empty list in the GAB,
				which may be required for some installations. Resolving
				addresses is not affected by this option.</para>
				<para>Users with administrator rights are also not affected
				by this option and always have access to the GAB.</para>
				<para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>auth_method</option></term>
			<listitem>
				<para>Authentication is normally done in the user
				plugin. In case your plugin cannot provide the
				authentication, you may set this to pam, and set the
				pam_service to authenticate through pam. Another
				choice is kerberos. The user password will be verified
				using the kerberos service. Note that is not a
				single-signon method, since the server requires the
				user password.</para>
				<para>Default: <replaceable>plugin</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>restrict_admin_permissions</option></term>
			<listitem>
				<para>Normally, admin users are granted all permissions on
				all stores in the server, or for stores in the tenant's
				company (in multi-tenant mode). Enabling this option
				restricts permissions to folder operations: Folder viewing,
				folder creation and importantly, folder permissions. This
				means that an administrator can grant himself full
				permissions on a folder. However, in combination with
				auditing, it provides an extra level of security protection
				against unwanted access.
				</para>
				<para>Note that some applications may require full access to
				all stores, which would be restricted by this option. Also,
				this option cannot be reset by sending a HUP signal, so a
				full server restart is required to change the setting.
				</para>
				<para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>embedded_attachment_limit</option></term>
		    <listitem>
		      <para>Defines the number of
		      attachment-in-attachment-in-attachment levels allowed when
		      saving and replicating a MAPI object. This limit can be made
		      higher if needed, but will also require you to increase the
		      stack_size in mysql to allow for correct exporting for
		      replication.
		      </para>
		      <para>Default: <replaceable>no</replaceable></para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pam_service</option></term>
			<listitem>
				<para>This is the pam service name. Pam services can
				be found in /etc/pam.d/.</para>
				<para>Default: <replaceable>passwd</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		  	<term><option>max_deferred_records</option></term>
		  	<listitem>
		  		<para>The server has a list of deferred writes to the
		  		tproperties table, to improve overall I/O performance. The
		  		number of deferred writes is kept below this value; setting
		  		it high will allow writes to be more efficient by grouping more
		  		writes together, but may slow down reading, and setting it
		  		low will force writes to complete directly, but speed up reading
		  		of tables.
		  		</para>
		  		<para>Default: <replaceable>0 (off)</replaceable></para>
		  	</listitem>
		  </varlistentry>

		  <varlistentry>
		  	<term><option>max_deferred_records_folder</option></term>
		  	<listitem>
		  		<para>
		  		Same as the max_deferred_records variable, but per folder
		  		instead of total.
		  		</para>
		  		<para>Default: <replaceable>20</replaceable></para>
		  	</listitem>
		  </varlistentry>

		  <varlistentry>
		  	<term><option>disabled_features</option></term>
		  	<listitem>
		  		<para>In this list you can disable certain features
		  		for users. Normally all features are enabled for all
		  		users, making it possible through the user plugin to
		  		disable specific features for specific users. To set
		  		the default of a feature to disabled, add it here to
		  		the list, making it possible through the user plugin
		  		to enable a specific user for specific users.</para>
				<para>This list is space separated, and currently may
				contain the following features: imap, pop3.</para>
		  		<para>Default: <replaceable>imap pop3</replaceable></para>
		  	</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the Cache Settings parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>cache_cell_size</option></term>
			<listitem>
			  <para>Size in bytes of the cell cache. This is the
			  main cache used in Zarafa. It caches all data that
			  comes into view in tables (ie the view of your
			  inbox, or any other folder). In an ideal
			  situation, all cells would be cached, so that the
			  database does not need to be queried for data when
			  browsing through folders, but this would require
			  around 1.5K per message item (e-mail, appointment
			  task, etc) in the entire server. If you can afford
			  it, set this value as high as possible, up to 50%
			  of your total RAM capacity. Make sure this doesn't
			  lead to swapping though. This value may contain a
			  k, m or g multiplier.</para>
			  <para>Default: <replaceable>256M</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>cache_object_size</option></term>
			<listitem>
			  <para>This caches objects and their respective hierarchy
			  of folders. You can calculate the size with a simple
			  equation:</para>
			  <para>concurrent users * max items in a folder * 24</para>
			  <para>This value may contain a k, m or g multiplier.</para>
			  <para>Default: <replaceable>5M</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>cache_indexedobject_size</option></term>
			<listitem>
			  <para>This cache contains unique id's of objects. This
			  cache is used twice, also by the index2 cache, which is
			  the inverse of the index1 cache. This value may contain
			  a k, m or g multiplier.</para>
			  <para>Default: <replaceable>16M</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>cache_quota_size</option></term>
			<listitem>
			  <para>This cache contains quota values of users. This
			  value may contain a k, m or g multiplier.</para>
			  <para>Default: <replaceable>1M</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>cache_quota_lifetime</option></term>
			<listitem>
			  <para>This sets the lifetime for quota details inside the cache.
			  If quota details weren't queried during this period it is removed
			  from the cache making room for more often requested quota details.
			  Set to 0 to never expire, or -1 to disable this cache.
			  </para>
			  <para>Default: <replaceable>1</replaceable> (1 minute)</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>cache_acl_size</option></term>
			<listitem>
			  <para>This cache contains Access Control List
			  values. Folders who are opened in other stores than your
			  own are listed in the ACL table, and will be cached.
			  This value may contain a k, m or g multiplier.</para>
			  <para>Default: <replaceable>1M</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>cache_store_size</option></term>
			<listitem>
			  <para>This cache contains store id values. This value
			  may contain a k, m or g multiplier.</para>
			  <para>Default: <replaceable>1M</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>cache_user_size</option></term>
			<listitem>
			  <para>This cache contains user id values. This cache is
			  used twice, also by the externid cache, which is the
			  inverse of this cache. This value may contain a k, m or
			  g multiplier.</para>
			  <para>Default: <replaceable>1M</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>cache_userdetails_size</option></term>
			<listitem>
			  <para>This cache contains the details of users. This
			  value may contain a k, m or g multiplier.</para>
			  <para>Default: <replaceable>3M</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>cache_userdetails_lifetime</option></term>
			<listitem>
			  <para>This sets the lifetime for user details inside the cache.
			  If user details weren't queried during this period it is removed
			  from the cache making room for more often requested user details.
			  Set to 0 to never expire, or -1 to disable this cache.
			  </para>
			  <para>Default: <replaceable>0</replaceable> (never expire)</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>cache_server_size</option></term>
			<listitem>
			  <para>This cache contains server locations. This cache
			  is only used in multiserver mode. This value may contain
			  a k, m or g multiplier.</para>
			  <para>Default: <replaceable>1M</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>cache_server_lifetime</option></term>
			<listitem>
			  <para>This sets the lifetime for server location details inside the cache.
			  If server details weren't queried during this period it is removed
			  from the cache making room for more often requested server details.
			  Set to 0 to never expire, or -1 to disable this cache.
			  </para>
			  <para>Default: <replaceable>30</replaceable> (30 minutes)</para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the Quota Settings parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>quota_warn</option></term>
			<listitem>
			  <para>Size in Mb of de default quota warning level. Use
			  0 to disable this quota level.</para>
			  <para>Default: <replaceable>0</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>quota_soft</option></term>
			<listitem>
			  <para>Size in Mb of de default quota soft level. Use 0
			  to disable this quota level.</para>
			  <para>Default: <replaceable>0</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>quota_hard</option></term>
			<listitem>
			  <para>Size in Mb of de default quota hard level. Use 0
			  to disable this quota level.</para>
			  <para>Default: <replaceable>0</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>companyquota_warn</option></term>
			<listitem>
			  <para>Size in Mb of de default quota warning level for
			  multitenant public stores. Use 0
			  to disable this quota level.</para>
			  <para>Default: <replaceable>0</replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the User plugin Settings parameters</title>

		<variablelist>

		  <varlistentry>
			<term><option>plugin_path</option></term>
			<listitem>
			  <para>The location of the Zarafa plugin directory.</para>
			  <para>Default:
			  <replaceable>/usr/lib/zarafa</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>user_plugin</option></term>
			<listitem>
			  <para>The source of the user base. Possible values are:</para>

			  <variablelist>
				<varlistentry>
				  <term><replaceable>db</replaceable></term>
				  <listitem>
					<para>Retrieve the users from the Zarafa
					database. Use the zarafa-admin tool to
					create users and groups. There are no additional
					settings for this plugin.</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><replaceable>ldap</replaceable></term>
				  <listitem>
					<para>Retrieve the users and groups information
					from an LDAP server. All additional LDAP settings
					are set in a separate config file, which will be
					defined by the <option>user_plugin_config</option>.
					See also <citerefentry>
					<refentrytitle>zarafa-ldap.cfg</refentrytitle>
					<manvolnum>5</manvolnum>
					</citerefentry>.</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><replaceable>unix</replaceable></term>
				  <listitem>
					<para>Retrieve the users and groups information
					from the Linux password files. User information
					will be read the /etc/passwd file. Passwords will
					be checked agains /etc/shadow. Group information
					will read from /etc/group. Use the
					<citerefentry><refentrytitle>zarafa-admin</refentrytitle><manvolnum>8</manvolnum></citerefentry>
					tool to set Zarafa specific attributes on a
					user.</para>
					<para> All additional Unix settings are set in a
					separate config file, which will be defined by the
					<option>user_plugin_config</option>. See also
					<citerefentry><refentrytitle>zarafa-unix.cfg</refentrytitle><manvolnum>5</manvolnum></citerefentry>
					.</para>
				  </listitem>
				</varlistentry>

			  </variablelist>

			  <para>Default: <replaceable>db</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>createuser_script</option></term>
			<term><option>deleteuser_script</option></term>
			<term><option>creategroup_script</option></term>
			<term><option>deletegroup_script</option></term>
			<term><option>createcompany_script</option></term>
			<term><option>deletecompany_script</option></term>
			<listitem>
			  <para>These scripts are called by the server when the
			  external user source, like LDAP, is different from the
			  users, groups and companies which are known to Zarafa. The script
			  uses a environment variable to see which user, group or tenant
			  is affected. The following parameter is used for the script:
			  </para>
			  <variablelist>
				<varlistentry>
				  <term><option>createuser_script</option></term>
				  <listitem>
					<para><parameter>ZARAFA_USER</parameter> contains
					the new username. The script should at least call
					 <command>zarafa-admin</command>
					<parameter>--create-store</parameter>
					<parameter>"${ZARAFA_USER}"</parameter> to
					correctly create the store for the new
					user.</para>
					<para>Default:
					 <replaceable>/etc/zarafa/userscripts/createuser</replaceable>
					</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><option>deleteuser_script</option></term>
				  <listitem>
					<para><parameter>ZARAFA_STOREID</parameter>
					contains the old id of the store of the removed
					user.</para>
					<para>Default:
					<replaceable>/etc/zarafa/userscripts/deleteuser</replaceable>
					</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><option>creategroup_script</option></term>
				  <listitem>
					<para><parameter>ZARAFA_GROUP</parameter> contains
					the new groupname. No action is currently needed
					by the script.</para>
					<para>Default:
					<replaceable>/etc/zarafa/userscripts/creategroup</replaceable>
					</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><option>deletegroup_script</option></term>
				  <listitem>
					<para><parameter>ZARAFA_GROUPID</parameter>
					contains the old id of the group. No action is
					currently needed by the script.</para>
					<para>Default:
					<replaceable>/etc/zarafa/userscripts/deletegroup</replaceable>
					</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><option>createcompany_script</option></term>
				  <listitem>
				    <para><parameter>ZARAFA_COMPANY</parameter>
					contains the new companyname. No action is currently needed
					by the script.</para>
					<para>Default:
					<replaceable>/etc/zarafa/userscripts/createcompany</replaceable>
					</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><option>deletecompany_script</option></term>
				  <listitem>
				    <para><parameter>ZARAFA_COMPANYID</parameter>
					contains the old id of the company. No action is
					currently needed by the script.</para>
					<para>Default:
					<replaceable>/etc/zarafa/userscripts/deletecompany</replaceable>
					</para>
				  </listitem>
				</varlistentry>
			  </variablelist>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>user_safe_mode</option></term>
			<listitem>
			  <para>If enabled, the zarafa server will only log when
			  create, delete and move actions are done on an user
			  object. This might be useful when you are testing
			  changes to your plugin configuration.</para>
			  <para>Default:
			  <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of miscelleanious parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>enable_hosted_zarafa</option></term>
			<listitem>
			  <para>Enable multi-tenancy environment.</para>
			  <para>When set to true it is possible to create companies within the
			  zarafa instance and assign all users and groups to particular companies.
			  </para>
			  <para>When set to false, the normal single-tenancy environment is created.</para>
			  <para>Default: <replaceable>false</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>enable_distributed_zarafa</option></term>
			<listitem>
			  <para>Enable multi-server environment.</para>
			  <para>When set to true it is possible to place users and companies on
			  specific servers.
			  </para>
			  <para>When set to false, the normal single-server environment is created.</para>
			  <para>Default: <replaceable>false</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>storename_format</option></term>
			<listitem>
			  <para>Display format of store name.</para>
			  <para>Allowed variables:</para>
			  <variablelist>
				<varlistentry>
				  <term><option>%u</option></term>
				  <listitem>
					<para>Username</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><option>%f</option></term>
				  <listitem>
					<para>Fullname</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><option>%c</option></term>
				  <listitem>
					<para>Companyname</para>
				  </listitem>
				</varlistentry>
			  </variablelist>
			  <para>Default: <replaceable>%f</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>loginname_format</option></term>
			<listitem>
			  <para>Loginname format (for multi-tenancy installations).
			  When the user does not login through a system-wide unique
			  username (like the email address) a unique name has created
			  by combining the username and the tenancyname.
			  With the this configuration option you can set how the
			  loginname should be build up.</para>
			  <para>Allowed variables:</para>
			  <variablelist>
				<varlistentry>
				  <term><option>%u</option></term>
				  <listitem>
					<para>Username</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><option>%c</option></term>
				  <listitem>
					<para>Companyname</para>
				  </listitem>
				</varlistentry>
			  </variablelist>
			  <para>Default: <replaceable>%u</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>client_update_enabled</option></term>
			<listitem>
			  <para>Enable client updates.</para>
			  <para>You can place the Zarafa Outlook Client installer
			  in the client_update_path directory, and enable this
			  option. Windows clients which have the automatic updater
			  program installed will be able to download the latest
			  client from the Zarafa server.
			  </para>
			  <para>Default: <replaceable>false</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>client_update_path</option></term>
			<listitem>
			  <para>This is the path where you will place the Zarafa
			  Outlook Client MSI install program for Windows clients
			  to download. You need the
			  <option>client_update_enabled</option> option set to
			  <replaceable>true</replaceable> for clients to actually
			  download this file through the Zarafa server.
			  </para>
			  <para>Default: <replaceable>/var/lib/zarafa/client</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>client_update_log_level</option></term>
			<listitem>
			  <para>Receive the log information from the client auto update service.</para>
			  <para>Options: 0 disable, 1 sent only with errors, 2 always sent</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>client_update_log_path</option></term>
			<listitem>
				<para>Log location for the client auto update files</para>
				<para>You need the <option>client_update_log_level</option> option set to non-zero
						value to receive log files from the client.</para>
				<para>Default: <replaceable>/var/log/zarafa/autoupdate</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>search_enabled</option></term>
			<listitem>
			  <para>Use the zarafa-search indexing service for faster searching. Enabling this option
			  requires the
				<citerefentry>
				  <refentrytitle>zarafa-search</refentrytitle>
				  <manvolnum>8</manvolnum>
				</citerefentry>
			  service to be running.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>search_socket</option></term>
			<listitem>
			  <para>Path to the
			    <citerefentry>
				  <refentrytitle>zarafa-search</refentrytitle>
				  <manvolnum>8</manvolnum>
				</citerefentry>
				service, this option is only required if the server is going
				to make use of the indexing service.</para>
			  <para>Default: <replaceable>file:///var/run/zarafa-search</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>search_timeout</option></term>
			<listitem>
			  <para>Time (in seconds) to wait for a connection to the
				<citerefentry>
				  <refentrytitle>zarafa-search</refentrytitle>
				  <manvolnum>8</manvolnum>
				</citerefentry>
				before terminating the indexed search request.</para>
			  <para>Default: <replaceable>10</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>enable_enhanced_ics</option></term>
			<listitem>
			  <para>Allow enhanced ICS operations to speedup synchronization
			  with cached profiles. Only disable this option for debugging purposes.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>enable_sql_procedures</option></term>
			<listitem>
			  <para>SQL Procedures allow for some optimized queries
			  when streaming with enhanced ICS. This is default
			  disabled because you must set 'thread_stack = 256k' in
			  your MySQL server config under the [mysqld] tag and
			  restart your MySQL server.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>folder_max_items</option></term>
			<listitem>
			  <para>Limits the amount of items (messages or folders) in a
			  single folder. This makes sure that the server will not attempt
			  to load folders that are so large that it would require huge
			  amounts of memory just to show the data. In practice, folders
			  of over 1000000 items are usually created by runaway processes
			  which are therefore useless anyway.</para>
			  <para>Default: <replaceable>1000000</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>sync_gab_realtime</option></term>
		    <listitem>
		      <para>When set to 'yes', zarafa will synchronize the local
		      user list whenever a list of users is requested (eg during
		      zarafa-admin -l or when opening the addressbook). This was the
		      default for zarafa 6.40.4 and earlier. When setting this value
		      to 'no', synchronization will only occur during zarafa-admin
		      --sync. This is useful for setups which have large
		      addressbooks (more than 1000 entries in the addressbook).
		      </para>
		      <para>This option is forced to 'yes' when using the 'db'
		      plugin since synchronization is implicit in that case.
		      </para>
		      <para>Default: <replaceable>yes</replaceable></para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>counter_reset</option></term>
		    <listitem>
		      <para>The counter_reset option forces a recount of items in
		      the folder each time a folder is opened. Although this is
		      not strictly necessary, it is a precaution to make sure that
		      counters are always correct. When enabled, this does incur a
		      performance penalty, especially on large (>50000 items)
		      folders. Each time a counter_reset found an incorrect item
		      count, it increments the system statistic counter_resyncs. If
		      it is at 0 on your system, then this option has had no effect
		      except for slowing it down.
		      </para>
		      <para>Default: <replaceable>yes</replaceable></para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>proxy_header</option></term>
		    <listitem>
		      <para>In normal operation, a cluster of zarafa-server nodes is
		      served by sending redirections back to the clients requesting
		      information. The redirection URL is built from the server's
		      information in the LDAP database. However, in some cases it is
		      useful to place the zarafa-server instances behind a reverse
		      HTTP proxy. In this case the redirected URL returned to the
		      client cannot be the 'normal' hostname, but must be a URL that
		      is handled by the proxy.</para>
		      <para>
		      However, internal ('behind' the proxy) redirections must *not*
		      be redirected to the proxy since this is not necessary. The
		      strategy is that zarafa-server will redirect to the proxy URL
		      if the connection that initiated the redirect passed through a
		      proxy. The way that this is detected is by examining an HTTP
		      header. If the header specified by this option is found, then
		      redirections will be to the proxy. If it is not, then
		      redirections will be to the internal host. If the special
		      value '*' is specified for this option, then the proxy URL
		      will always be used. Specifying an empty value disables proxy
		      detection.</para>
		      <para>
		      Another effect of this option is that when a proxy connection
		      is detected, zarafa-server attempts to use the
		      'X-Forwarded-For' header to determine the originating IP
		      address. This is used for logging and session binding (a
		      session initiated on a certain IP address may not be accessed
		      from another IP address).
		      </para>
		      <para>Default: <replaceable></replaceable></para>
		    </listitem>
		  </varlistentry>


		</variablelist>
	  </refsection>

	  <refsection>
		<title>Reloading</title>
		<para>The following options are reloadable by sending the zarafa-server process a HUP signal or reload the process by the initscript</para>

		<variablelist>
		  <varlistentry>
                        <term>system_email_address</term>
                        <term>local_admin_users</term>
                        <term>allow_local_users</term>
                        <term>hide_system</term>
                        <term>hide_everyone</term>
                        <term>auth_method</term>
                        <term>pam_service</term>
			<term>enable_sso</term>
                        <term>enable_gab</term>
                        <term>sync_gab_realtime</term>
                        <listitem><para></para></listitem>
                  </varlistentry>

                  <varlistentry>
                        <term>session_timeout</term>
                        <term>server_recv_timeout</term>
                        <term>server_read_timeout</term>
                        <term>server_send_timeout</term>
			<term>sync_lifetime</term>
                        <listitem><para></para></listitem>
                  </varlistentry>

                  <varlistentry>
			<term>log_level</term>
                        <term>audit_log_level</term>
                        <listitem><para></para></listitem>
                  </varlistentry>

                  <varlistentry>
                        <term>threads</term>
                        <term>watchdog_max_age</term>
                        <term>watchdog_frequency</term>
                        <term>max_deferred_records</term>
                        <term>max_deferred_records_folder</term>
                        <listitem><para></para></listitem>
                  </varlistentry>

                  <varlistentry>
                        <term>counter_reset</term>
                        <term>user_safe_mode</term>
                        <term>enable_enhanced_ics</term>
                        <term>report_path</term>
                        <term>report_ca_path</term>
                        <term>client_update_log_level</term>
                        <term>client_update_path</term>
                        <term>client_update_log_path</term>
                        <listitem><para></para></listitem>
                  </varlistentry>

                  <varlistentry>
                        <term>search_enabled</term>
                        <term>search_socket</term>
                        <term>search_timeout</term>
                        <term>disabled_features</term>
                        <term>mysql_group_concat_max_len</term>
                        <term>embedded_attachment_limit</term>
                        <term>proxy_header</term>
			<listitem><para></para></listitem>
		  </varlistentry>

		  <varlistentry>
			<term>quota_warn</term>
			<term>quota_soft</term>
			<term>quota_hard</term>
                        <term>companyquota_warn</term>
			<listitem><para></para></listitem>
		  </varlistentry>

		  <varlistentry>
			<term>createuser_script</term>
			<term>deleteuser_script</term>
			<term>creategroup_script</term>
			<term>deletegroup_script</term>
                        <term>createcompany_script</term>
                        <term>deletecompany_script</term>
			<listitem><para></para></listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Files</title>

		<variablelist>
		  <varlistentry>
			<term><filename>/etc/zarafa/server.cfg</filename></term>
			<listitem><para>The server configuration file.</para></listitem>
		  </varlistentry>
		  <varlistentry>
			<term><filename>/etc/zarafa/ldap.cfg</filename></term>
			<listitem><para>The Zarafa LDAP user plugin configuration file.</para></listitem>
		  </varlistentry>
		  <varlistentry>
			<term><filename>/etc/zarafa/unix.cfg</filename></term>
			<listitem><para>The Zarafa Unix user plugin configuration file.</para></listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-server</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-ldap.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-unix.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa LDAP Server Configuration file manual page
	TODO: quota and such explanations
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-ldap.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-ldap.cfg</refname>
		<refpurpose>The Zarafa LDAP configuration file</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>ldap.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>ldap.cfg</filename> is a configuration
		file for LDAP user plugin. All options to correctly retrieve
		user and group information can be set here.</para>
	  </refsection>

	  <refsection>
		<title>File format</title>

		<para>The file consists of one big section, but parameters can be
		grouped by functionality.</para>

		<para>The parameters are written in the form:</para>

		<para><option>name</option> = <replaceable>value</replaceable></para>

		<para>The file is line-based. Each newline-terminated line
		represents either a comment, nothing, a parameter or a directive.
		A line beginning with `#' is considered a comment, and will be
		ignored	by Zarafa. Parameter names are case sensitive. Lines
		beginning with `!' are directives.</para>

		<para>Directives are written in the form:</para>

		<para>!<option>directive</option> <replaceable>[argument(s)]
		</replaceable></para>

		<para>The following directives exist:</para>
		<variablelist>
		  <varlistentry>
		    <term><option>include</option></term>
		    <listitem>
		      <para>Include and process <replaceable>argument</replaceable>
		      </para>
		      <para>Example: !include common.cfg</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>propmap</option></term>
			<listitem>
			  <para>Propmap delivers the capabilities to map additional
			  attributes to addressbook properties (e.g. firstname, lastname,
			  telephonenumber).</para>
	  		  <para>In the propmap the configuration names must be the hex property tag
			  of the requested property. The value given to the configuration name
			  must be the LDAP attribute to which the property should be mapped.</para>
			  <para>Example: !propmap ldap.propmap.cfg</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of each parameter</title>

		<variablelist>
		  <varlistentry>
			<term><option>ldap_host</option></term>
			<listitem>
			  <para>The hostname or ip-adress of the LDAP
			  server.</para>
			  <para>Default:
			  <replaceable>localhost</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_port</option></term>
			<listitem>
			  <para>The port number of the LDAP server. LDAP normally
			  runs on port 389.</para>
			  <para>Default: <replaceable>389</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_protocol</option></term>
			<listitem>
			  <para>The protocol to be used to connect to the LDAP server.
			  Can be either 'ldap' or 'ldaps' for SSL connections. You will
			  probably have to specify port 636 for ldap_port also. Zarafa
			  will not use STARTTLS for such an SSL connection but instead
			  will connect directly to an SSL encrypted port.</para>
			  <para>Default: <replaceable>ldap</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>ldap_uri</option></term>
		    <listitem>
		      <para>Instead of using ldap_host, ldap_port and ldap_protocol,
		      you may also use ldap_uri which should specify the URI of the
		      LDAP server like 'ldap://server:389'. If ldap_uri is set,
		      the values of ldap_host, ldap_port and ldap_protocol are
		      ignored. You may also specify multiple space-separated LDAP
		      server URI's.
		      </para>
			  <para>Default: <replaceable></replaceable></para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_server_charset</option></term>
			<listitem>
			  <para>The charset that the LDAP server uses to store strings.
			  All strings sent to the LDAP server or retrieved from the server
			  will be interpreted in this charset. In most setups, utf-8 is
			  used, but may also be iso-8859-15. All charsets supported by
			  the system iconv() are supported here.</para>
			  <para>Default: <replaceable>utf-8</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_bind_user</option></term>
			<listitem>
			  <para>The bind dn as to connect to the LDAP
			  server. Leave empty to connect anonymous.</para>
			  <para>Default value is empty.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_bind_passwd</option></term>
			<listitem>
			  <para>When ldap_bind_user is a valid DN, this should be
			  filled in too.</para>
			  <para>Default value is empty.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_network_timeout</option></term>
			<listitem>
			  <para>The timeout for network operations in seconds.
			  </para>
			  <para>Default: <replaceable>30</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_last_modification_attribute</option></term>
			<listitem>
			  <para>This value is used to detect changes in the item in the
			  LDAP server. Since it is a standard LDAP attribute, you should
			  never have to change this. It is mainly used for addressbook
			  synchronisation between your server and your offline data.
			  </para>
			  <para>Default:
			  <replaceable>modifyTimeStamp</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_page_size</option></term>
			<listitem>
			  <para>Limit result sets in pages of this size,
			  downloading fewer results at a time from the LDAP
			  server.
			  </para>
			  <para>Default:
			  <replaceable>1000</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_search_base</option></term>
			<listitem>
			  <para>This is the subtree entry where all objects are
			  defined in the LDAP server.</para>
			  <para>Default:
			  <replaceable>dc=zarafa,dc=com</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_object_type_attribute</option></term>
			<listitem>
			  <para>An object is defined by this attribute what type
			  it is, eg. user, group, etc. Every object type should
			  have a unique value in this attribute in order to define
			  what which enrty is.</para>
			  <para>The value of this attribute must be specified in the
			  ldap_*_type_attribute_value settings. Each of those settings
			  may specify multiple values for the type attribute, separated
			  by comma's. All of these values must be present in the objects
			  type attribute for a match to be made and the object to be
			  recognised as that type.
			  </para>
			  <para>It is possible for ambiguities to arise by setting the
			  same string for multiple ldap_*_type_attribute_value settings.
			  This ambiguity will be resolved by preferring objects with
			  more matching values. If the ambiguity cannot be resolved in
			  this way, then the first possibility is chosen from the list
			  (addresslist, tenant, dynamic group, group, contact, user).
			  </para>
			  <para>Default:
			  <replaceable>objectClass</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_user_type_attribute_value</option></term>
			<listitem>
			  <para>The value in
			  <option>ldap_object_type_attribute</option> which
			  defines a user.</para>
			  <para>Default for OpenLDAP:
			  <replaceable>posixAccount</replaceable></para>
			  <para>Default for ADS:
			  <replaceable>user</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_group_type_attribute_value</option></term>
			<listitem>
			  <para>The value in
			  <option>ldap_object_type_attribute</option> which
			  defines a group.</para>
			  <para>Default for OpenLDAP:
			  <replaceable>posixGroup</replaceable></para>
			  <para>Default for ADS:
			  <replaceable>group</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_contact_type_attribute_value</option></term>
			<listitem>
			  <para>The value in
			  <option>ldap_object_type_attribute</option> which
			  defines a contact.</para>
			  <para>Default for OpenLDAP:
			  <replaceable>inetOrgPerson</replaceable></para>
			  <para>Default for ADS:
			  <replaceable>contact</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_company_type_attribute_value</option></term>
			<listitem>
			  <para>The value in
			  <option>ldap_object_type_attribute</option> which
			  defines a tenant. This option is only used in
			  multi-tenancy installations.</para>
			  <para>Default for OpenLDAP:
			  <replaceable>organizationalUnit</replaceable></para>
			  <para>Default for ADS:
			  <replaceable>zarafa-company</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_addresslist_type_attribute_value</option></term>
			<listitem>
			  <para>The value in
			  <option>ldap_object_type_attribute</option> which
			  defines an addresslist.</para>
			  <para>Default:
			  <replaceable>zarafa-addresslist</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_dynamicgroup_type_attribute_value</option></term>
			<listitem>
			  <para>The value in
			  <option>ldap_object_type_attribute</option> which
			  defines a dynamic group.</para>
			  <para>Default:
			  <replaceable>zarafa-dynamicgroup</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_user_search_filter</option></term>
			<listitem>
			  <para>Adds an extra filter to the user search.</para>
			  <para>Hint: Use the zarafaAccount attribute in the filter to differentiate
			  between non-zarafa and zarafa users.</para>
			  <para>Default for OpenLDAP is empty.</para>
			  <para>Default for ADS:
			  <replaceable>(objectCategory=Person)</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_user_unique_attribute</option></term>
			<listitem>
			  <para>This is the unique attribute of a user which is
			  never going to change, unless the user is removed from
			  LDAP. When this value changes, Zarafa will remove the
			  previous user and store from the database, and create a
			  new user with this unique value.</para>
			  <para>Default for OpenLDAP: <replaceable>uidNumber</replaceable></para>
			  <para>Default for ADS: <replaceable>objectGuid</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_user_unique_attribute_type</option></term>
			<listitem>
			  <para>Contents type for the <option>ldap_user_unique_attribute</option>.
			  This value can be <replaceable>binary</replaceable>
			  or <replaceable>text</replaceable>.</para>
			  <para>Default for OpenLDAP: <replaceable>text</replaceable></para>
			  <para>Default for ADS: <replaceable>binary</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_fullname_attribute</option></term>
			<listitem>
			  <para>This value is the fullname of a user. It will be
			  used on outgoing messages, and store names.</para>
			  <para>Default: <replaceable>cn</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_loginname_attribute</option></term>
			<listitem>
			  <para>This value is the loginname of a user. This is
			  what the user uses to login on zarafa. The DAgent will
			  use this value to open the store of the user.</para>
			  <para>Default for OpenLDAP: <replaceable>uid</replaceable></para>
			  <para>Default for ADS: <replaceable>sAMAccountName</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_password_attribute</option></term>
			<listitem>
			  <para>This value is the password of a user. When using
			  <option>ldap_authentication_method</option> =
			  <replaceable>password</replaceable>, this value will be
			  checked. The <option>ldap_bind_user</option> should have
			  enough access rights to read the password field.</para>
			  <para>Default for OpenLDAP: <replaceable>userPassword</replaceable></para>
			  <para>Default for ADS: <replaceable>unicodePwd</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_authentication_method</option></term>
			<listitem>
			  <para>This value can be <replaceable>bind</replaceable>
			  or <replaceable>password</replaceable>. When set to
			  bind, the plugin will authenticate by opening a new
			  connection to the LDAP server as the user with the given
			  password. When set to password, the plugin will read and
			  match the password field from the LDAP server
			  itself. When set to password, the
			  <option>ldap_bind_user</option> should have enough
			  access rights to read the password field.</para>
			  <para>Default for OpenLDAP: <replaceable>bind</replaceable></para>
			  <para>Default for ADS: <replaceable>bind</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_emailaddress_attribute</option></term>
			<listitem>
			  <para>This value is the email address of a user. It will
			  be used to set the From on outgoing messages.</para>
			  <para>Default: <replaceable>mail</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_emailaliases_attribute</option></term>
			<listitem>
			  <para>This value is the email aliases of a user. It can
			  be used to find extra valid email accounts for incoming
			  email. These email addresses cannot be used for outgoing
			  email.</para>
			  <para>Default: <replaceable>zarafaAliases</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_isadmin_attribute</option></term>
			<listitem>
			  <para>This value indicates if a user has administrator
			  rights. 0 or not presents means no. 1 means
			  yes. In multi-tenancy environment a value of 1 means that the
			  user is administrator over his own tenant. A value of 2 means
			  he is administrator over all companies within the environment.</para>
			  <para>Default: <replaceable>zarafaAdmin</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_nonactive_attribute</option></term>
			<listitem>
			  <para>This value indicates if a user is nonactive.
			  Nonactive users cannot login, but the store
			  can be used as a shared store for other users.</para>
			  <para>Setting this value to 1 will make a mailbox nonactive.
			  The nonactive attribute provided by the Zarafa schema
			  for nonactive users is <replaceable>zarafaSharedStoreOnly</replaceable>
			  </para>
			  <para>Default: <replaceable>zarafaSharedStoreOnly</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_resource_type_attribute</option></term>
			<listitem>
			  <para>This attribute can change the type of a non-active
			  user. The value of this attribute can be
			  <replaceable>room</replaceable> or
			  <replaceable>equipment</replaceable> to make it such a
			  resource. If this attribute is not present, or not one
			  of the previously described values, the user will be a
			  normal non-active user.</para>
			  <para>Default: <replaceable>zarafaResourceType</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_resource_capacity_attribute</option></term>
			<listitem>
			  <para>Resources often have a limited capacity. Use this attribute to control this value.
			  user.</para>
			  <para>Default: <replaceable>zarafaResourceCapacity</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_sendas_attribute</option></term>
			<listitem>
			  <para>This attribute contains the list of users for which the
			  user can use the sendas feature.</para>
			  <para>Default: <replaceable>zarafaSendAsPrivilege</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_sendas_attribute_type</option></term>
			<listitem>
			  <para>Contents type for the <option>ldap_sendas_attribute</option>
			  this value can be <replaceable>dn</replaceable>, <replaceable>binary</replaceable>
			  or <replaceable>text</replaceable>.</para>
			  <para>Default for OpenLDAP: <replaceable>text</replaceable></para>
			  <para>Default for ADS: <replaceable>dn</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_sendas_relation_attribute</option></term>
			<listitem>
			  <para>This value is used to find the users in the sendas list.</para>
			  <para>Defaults to empty value, using the <option>ldap_user_unique_attribute</option>
			  setting. By using the DN, you can also add groups to the sendas list.</para>
			  <para>Default for OpenLDAP is empty.</para>
			  <para>Default for ADS: <replaceable>distinguishedName</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_user_certificate_attribute</option></term>
			<listitem>
			  <para>The attribute which contains the user's public
			  certificate to be used for encrypted S/MIME messages.
			  Both Active Directory and OpenLDAP use the same ldap attribute
			  by default. The format of the certificate should be the binary
			  DER format.
			  </para>
			  <para>Default: <replaceable>userCertificate</replaceable></para>
			</listitem>
		  </varlistentry>


		  <varlistentry>
			<term><option>ldap_group_search_filter</option></term>
			<listitem>
			  <para>Adds an extra filter to the group search.</para>
			  <para>Hint: Use the zarafaAccount attribute in the filter to differentiate
			  between non-zarafa and zarafa groups.</para>
			  <para>Default for OpenLDAP is empty.</para>
			  <para>Default for ADS:
			  <replaceable>(objectCategory=Group)</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_group_unique_attribute</option></term>
			<listitem>
			  <para>This is the unique attribute of a group which is
			  never going to change, unless the group is removed from
			  LDAP. When this value changes, Zarafa will remove the
			  previous group from the database, and create a new group
			  with this unique value.</para>
			  <para>Default for OpenLDAP: <replaceable>gidNumber</replaceable></para>
			  <para>Default for ADS: <replaceable>objectSid</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_group_unique_attribute_type</option></term>
			<listitem>
			  <para>Contents type for the <option>ldap_group_unique_attribute</option>
			  this value can be <replaceable>binary</replaceable>
			  or <replaceable>text</replaceable>.</para>
			  <para>Default for OpenLDAP: <replaceable>text</replaceable></para>
			  <para>Default for ADS: <replaceable>binary</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_groupname_attribute</option></term>
			<listitem>
			  <para>This value is the name of a group.</para>
			  <para>Default: <replaceable>cn</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_groupmembers_attribute</option></term>
			<listitem>
			  <para>This value is the member list of a group.</para>
			  <para>Default for OpenLDAP: <replaceable>memberUid</replaceable></para>
			  <para>Default for ADS: <replaceable>member</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_groupmembers_attribute_type</option></term>
			<listitem>
			  <para>Contents type for the <option>ldap_groupmembers_attribute</option>
			  this value can be <replaceable>dn</replaceable>, <replaceable>binary</replaceable>
			  or <replaceable>text</replaceable>.</para>
			  <para>Default for OpenLDAP: <replaceable>text</replaceable></para>
			  <para>Default for ADS: <replaceable>dn</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_groupmembers_relation_attribute</option></term>
			<listitem>
			  <para>This value is used to find the users in a group if
			  <option>ldap_groupmembers_attribute_type</option> is
			  <replaceable>text</replaceable>.</para>
			  <para>Defaults to empty value, using the
			  <option>ldap_user_unique_attribute</option> setting.</para>
			  <para>Default is empty.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_group_security_attribute</option></term>
			<listitem>
			  <para>If this attribute is present, you can make a group
			  a security group. These groups can be used to place
			  permissions on folders.</para>
			  <para>Default for OpenLDAP: <replaceable>zarafaSecurityGroup</replaceable></para>
			  <para>Default for ADS: <replaceable>groupType</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_group_security_attribute_type</option></term>
			<listitem>
			  <para>The type of the
			  <option>ldap_group_security_attribute</option> is very
			  different for ADS and OpenLDAP. The value of this option
			  can be <replaceable>boolean</replaceable> or
			  <replaceable>ads</replaceable>. The ads option only
			  looks at the highest bit in the numeric value of the groupType attribute.</para>
			  <para>Default for OpenLDAP: <replaceable>boolean</replaceable></para>
			  <para>Default for ADS: <replaceable>ads</replaceable></para>
			</listitem>
		  </varlistentry>


		  <varlistentry>
			<term><option>ldap_company_search_filter</option></term>
			<listitem>
			  <para>Add an extra filter to the tenant search.</para>
			  <para>Hint: Use the zarafaAccount attribute in the filter to differentiate
			  between non-zarafa and zarafa companies.</para>
			  <para>Default for OpenLDAP is empty.</para>
			  <para>Default for ADS: <replaceable>(objectCategory=Company)</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_company_unique_attribute</option></term>
			<listitem>
			  <para>This is the unique attribute of a tenant which is never going to change,
			  unless the tenant is removed from LDAP. When this value changes, Zarafa
			  will remove the previous tenant from the database, and create a new tenant with
			  this unique value.</para>
			  <para>Default for OpenLDAP: <replaceable>ou</replaceable></para>
			  <para>Default for ADS: <replaceable>objectSid</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_company_unique_attribute_type</option></term>
			<listitem>
			  <para>Contents type for the <option>ldap_company_unique_attribute</option>
			  this value can be <replaceable>binary</replaceable>
			  or <replaceable>text</replaceable>.</para>
			  <para>Default for OpenLDAP: <replaceable>text</replaceable></para>
			  <para>Default for ADS: <replaceable>binary</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>ldap_companyname_attribute</option></term>
			<listitem>
			  <para>This value is the name of a tenant.</para>
			  <para>Default: <replaceable>cn</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_company_view_attribute</option></term>
			<listitem>
			  <para>This attribute contains the list of tenants which can view
			  the members of the tenant where this attribute is set on. tenants
			  which are not listed in this attribute cannot see the presence of the
			  tenant space itself nor its members.</para>
			  <para>Default: <replaceable>zarafaViewPrivilege</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_company_view_attribute_type</option></term>
			<listitem>
			  <para>Contents type for the <option>ldap_company_view_attribute</option>
			  this value can be <replaceable>dn</replaceable>, <replaceable>binary</replaceable>
			  or <replaceable>text</replaceable>.</para>
			  <para>Default for OpenLDAP: <replaceable>text</replaceable></para>
			  <para>Default for ADS: <replaceable>dn</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_company_view_relation_attribute</option></term>
			<listitem>
			  <para>The attribute of the tenant which is listed in
			  <option>ldap_company_view_attribute</option>.</para>
			  <para>Default: Empty, using the <option>ldap_company_unique_attribute</option></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_company_admin_attribute</option></term>
			<listitem>
			  <para>This attribute contains the list of users outside of the selected
			  tenant space who are administrator over the selected tenant space.
			  Note that local users should not be listed as administrator here, those
			  users need the <option>ldap_isadmin_attribute</option> attribute.</para>
			  <para>Default: <replaceable>zarafaAdminPrivilege</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_company_admin_attribute_type</option></term>
			<listitem>
			  <para>Contents type for the <option>ldap_company_admin_attribute</option>
			  this value can be <replaceable>dn</replaceable>, <replaceable>binary</replaceable>
			  or <replaceable>text</replaceable>.</para>
			  <para>Default for OpenLDAP: <replaceable>text</replaceable></para>
			  <para>Default for ADS: <replaceable>dn</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_company_admin_relation_attribute</option></term>
			<listitem>
			  <para>The attribute of the user which is listed in
			  <option>ldap_company_admin_attribute</option>.</para>
			  <para>Default: Empty, using the <option>ldap_user_unique_attribute</option></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_company_system_admin_attribute</option></term>
			<listitem>
			  <para>This attribute contains the user who acts as the system administrator
			  of this tenatn space. This can either be a local user or a user from a
			  different tenant space. At the moment this user is set as the sender
			  of quota warning emails.</para>
			  <para>Default: <replaceable>zarafaSystemAdmin</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_company_system_admin_attribute_type</option></term>
			<listitem>
			  <para>Contents type for the <option>ldap_company_system_admin_attribute</option>
			  this value can be <replaceable>dn</replaceable>, <replaceable>binary</replaceable>
			  or <replaceable>text</replaceable>.</para>
			  <para>Default for OpenLDAP: <replaceable>text</replaceable></para>
			  <para>Default for ADS: <replaceable>dn</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_company_system_admin_relation_attribute</option></term>
			<listitem>
			  <para>The attribute of the user which is listed in
			  <option>ldap_system_admin_attribute</option>.</para>
			  <para>Default: Empty, using the <option>ldap_user_unique_attribute</option></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_addresslist_search_filter</option></term>
			<listitem>
			  <para>Add a filter to the addresslist search.</para>
			  <para>Hint: Use the zarafaAccount attribute in the filter to differentiate
			  between non-zarafa and zarafa addresslists.</para>
			  <para>Default:
			  <replaceable>(objectClass=zarafa-addresslist)</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_addresslist_unique_attribute</option></term>
			<listitem>
			  <para>This is the unique attribute of a addresslist which is
			  never going to change, unless the addresslist is removed from
			  LDAP. When this value changes, Zarafa will remove the
			  previous addresslist from the database, and create a new addresslist
			  with this unique value.</para>
			  <para>Default: <replaceable>cn</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_addresslist_unique_attribute_type</option></term>
			<listitem>
			  <para>Contents type for the <option>ldap_addresslist_unique_attribute</option>
			  this value can be <replaceable>dn</replaceable>, <replaceable>binary</replaceable>
			  or <replaceable>text</replaceable>. On LDAP this value should be
			  <replaceable>text</replaceable>. On ADS this value should be
			  <replaceable>dn</replaceable></para>
			  <para>Default: <replaceable>text</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_addresslist_filter_attribute</option></term>
			<listitem>
			  <para>This is the name of the attribute on the addresslist
			  object that specifies the filter to be applied for this
			  addresslist. All users matching this filter AND matching the
			  default ldap_user_search_filter will be included in the
			  addresslist.</para>
			  <para>Default: <replaceable>zarafaFilter</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
				  <term><option>ldap_addresslist_search_base_attribute</option></term>
			<listitem>
			  <para>This is the name of the attribute on the addresslist
			  object that specifies the search base to be applied for this
			  addresslist.</para>
			  <para>Default: <replaceable>zarafaBase</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_addresslist_name_attribute</option></term>
			<listitem>
			  <para>The attribute containing the name of the addresslist</para>
			  <para>Default: <replaceable>cn</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_dynamicgroup_search_filter</option></term>
			<listitem>
			  <para>Add an extra filter to the dynamicgroup search.</para>
			  <para>Hint: Use the zarafaAccount attribute in the filter to differentiate
			  between non-zarafa and zarafa dynamic groups.</para>
			  <para>Default is empty.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_dynamicgroup_unique_attribute</option></term>
			<listitem>
			  <para>This is the unique attribute of a dynamicgroup which is
			  never going to change, unless the dynamicgroup is removed from
			  LDAP. When this value changes, Zarafa will remove the
			  previous dynamicgroup from the database, and create a new dynamicgroup
			  with this unique value.</para>
			  <para>Default: <replaceable>cn</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_dynamicgroup_unique_attribute_type</option></term>
			<listitem>
			  <para>Contents type for the <option>ldap_dynamicgroup_unique_attribute</option>
			  this value can be <replaceable>binary</replaceable>
			  or <replaceable>text</replaceable>. On LDAP this value should be
			  <replaceable>text</replaceable>. On ADS this value should be
			  <replaceable>binary</replaceable></para>
			  <para>Default: <replaceable>text</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_dynamicgroup_filter_attribute</option></term>
			<listitem>
			  <para>This is the name of the attribute on the dynamicgroup
			  object that specifies the filter to be applied for this
			  dynamicgroup. All users matching this filter AND matching the
			  default search filters for objects will be included in the
			  dynamicgroup.</para>
			  <para>Default: <replaceable>zarafaFilter</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_dynamicgroup_search_base_attribute</option></term>
			<listitem>
			  <para>This is the name of the attribute on the dynamicgroup
			  object that specifies the search base to be applied for this
			  dynamicgroup.</para>
			  <para>Default: <replaceable>zarafaBase</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_dynamicgroup_name_attribute</option></term>
			<listitem>
			  <para>The attribute containing the name of the dynamicgroup.</para>
			  <para>Default: <replaceable>cn</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_quotaoverride_attribute</option></term>
			<listitem>
			  <para>Default: <replaceable>zarafaQuotaOverride</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_warnquota_attribute</option></term>
			<listitem>
			  <para>Default:
			  <replaceable>zarafaQuotaWarn</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_softquota_attribute</option></term>
			<listitem>
			  <para>Default:
			  <replaceable>zarafaQuotaSoft</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_hardquota_attribute</option></term>
			<listitem>
			  <para>Default:
			  <replaceable>zarafaQuotaHard</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_userdefault_quotaoverride_attribute</option></term>
			<listitem>
			  <para>Default:
			  <replaceable>zarafaUserDefaultQuotaOverride</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_userdefault_warnquota_attribute</option></term>
			<listitem>
			  <para>Default:
			  <replaceable>zarafaUserDefaultQuotaWarn</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_userdefault_softquota_attribute</option></term>
			<listitem>
			  <para>Default:
			  <replaceable>zarafaUserDefaultQuotaSoft</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_userdefault_hardquota_attribute</option></term>
			<listitem>
			  <para>Default:
			  <replaceable>zarafaUserDefaultQuotaHard</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_quota_multiplier</option></term>
			<listitem>
			  <para>This value is used to multiply the quota values to
			  bytes. When the values in LDAP are in Kb, use 1024
			  here.</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_quota_userwarning_recipients_attribute</option></term>
			<listitem>
			 <para>This attribute contains the list of users who will receive an
			 email when a user exceeds his quota. User who exceeds his quota will
			 be automatically added to the recipients list, this list only indicates
			 who else will be notified.</para>
			 <para>Default: <replaceable>zarafaQuotaUserWarningRecipients</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_quota_userwarning_recipients_attribute_type</option></term>
			<listitem>
			  <para>Contents type for the <option>ldap_quota_userwarning_recipients_attribute</option>
			  this value can be <replaceable>dn</replaceable>, <replaceable>binary</replaceable>
			  or <replaceable>text</replaceable>. On LDAP this value should be
			  <replaceable>text</replaceable>. On ADS this value should be
			  <replaceable>dn</replaceable></para>
			  <para>Default: <replaceable>text</replaceable></para>
			 </listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_quota_userwarning_recipients_relation_attribute</option></term>
			<listitem>
			  <para>The attribute of the user which is listed in <option>ldap_quota_userwarning_recipients_attribute</option></para>
			  <para>Default: Empty, using <replaceable>ldap_user_unique_attribute</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_quota_companywarning_recipients_attribute</option></term>
			<listitem>
			  <para>This attribute contains the list of users who will receive an
			  email when a tenant exceeds its quota. The system administrator of the
			  tenant that is over quota will automatically be added to the recipients list,
			  this list only indicates who else will be notified.</para>
			  <para>Default: <replaceable>zarafaQuotaCompanyWarningRecipients</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_quota_companywarning_recipients_attribute_type</option></term>
			<listitem>
			  <para>Contents type for the <option>ldap_quota_companywarning_recipients_attribute</option>
			  this value can be <replaceable>dn</replaceable>, <replaceable>binary</replaceable>
			  or <replaceable>text</replaceable>. On LDAP this value should be
			  <replaceable>text</replaceable>. On ADS this value should be
			  <replaceable>dn</replaceable></para>
			  <para>Default: <replaceable>text</replaceable></para>
			 </listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_quota_companywarning_recipients_relation_attribute</option></term>
			<listitem>
			  <para>The attribute of the user which is listed in <option>ldap_quota_companywarning_recipients_attribute</option></para>
			  <para>Default: Empty, using <replaceable>ldap_user_unique_attribute</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_addressbook_hide_attribute</option></term>
			<listitem>
			  <para>The attribute indicating the object must be hidden
			  from the addressbook. The object will still be detected
			  as zarafa user and is allowed to login and work as regular
			  zarafa user, but will not be visible in the addressbook for
			  other users.</para>
			  <para>Default: <replaceable>zarafaHidden</replaceable></para>
			</listitem>
		  </varlistentry>


		  <varlistentry>
			<term><option>ldap_object_search_filter</option></term>
			<listitem>
			  <para>When searching in the addressbook, this filter
			  will be used. Normally, the zarafa server will only
			  search in the unique attribute, loginname, fullname and
			  emailaddress. You might want to search in more fields,
			  like 'lastname'. Zarafa also uses a postfix wildcard
			  only. Using the '*' wildcard with prefixes makes a
			  search slower, but can return more results.</para>
	  		  <para>Hint: Use the zarafaAccount attribute in the filter to differentiate
			  between non-zarafa and zarafa objects.</para>
			  <para>You can set a custom search filter here. '%s' will
			  be replaced with the string being searched.</para>
			  <para>Active Directory has a shortcut for searching
			  in the addressbook using the 'anr' attribute. This is
			  recommended on ADS installations.</para>
			  <para>Default: <replaceable></replaceable></para>
			  <para>Recommended for ADS installations: <replaceable>(anr=%s)</replaceable></para>
			  <para>Optional for OpenLDAP installations: <replaceable>(|(mail=%s*)(uid=%s*)(cn=*%s*)&#x200B;(fullname=*%s*)(givenname=*%s*)(lastname=*%s*)(sn=*%s*))</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>ldap_filter_cutoff_elements</option></term>
		    <listitem>
		      <para>When the ldap plugin retrieves information from the
		      LDAP Server, large queries can be created to retrieve data
		      for multiple objects at once. These large queries can
		      perform badly on some LDAP server implementations. This
		      option limits the number of elements that can be retrieved in
		      one search filter and therefore limits the size of the filter.
		      Instead, a broader search filter is created which retrieves
		      all objects from the LDAP server. This results in slightly
		      higher processing overhead and network activity, but with the
		      bonus that the query can be served by the LDAP server much
		      faster (a factor of 40 in 5000-object queries has been
		      observed).</para>
		      <para>Setting this value to 0 will never limit the filter, setting
		      it to a value of 1 will always limit the filter (since all
		      queries will be retrieving one or more objects).</para>
		      <para>Default: <replaceable>1000</replaceable></para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Files</title>

		<variablelist>
		  <varlistentry>
			<term><filename>/etc/zarafa/server.cfg</filename></term>
			<listitem><para>The server configuration file.</para></listitem>
		  </varlistentry>
		  <varlistentry>
			<term><filename>/etc/zarafa/ldap.cfg</filename></term>
			<listitem><para>The Zarafa LDAP configuration file.</para></listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-server</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-server.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa LDAP Multi Server Configuration file manual page
  -+-+-
-->

	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-ldapms.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-ldapms.cfg</refname>
		<refpurpose>The Zarafa LDAP Multiserver configuration file</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>ldapms.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>ldapms.cfg</filename> is a configuration
		file for LDAPMS user plugin, used for multiserver setups. All
		options to correctly retrieve user and group information can
		be set here.</para>
		<para>Please rever to
		<citerefentry>
		  <refentrytitle>zarafa-ldap.cfg</refentrytitle>
		  <manvolnum>5</manvolnum>
		</citerefentry>
		for all normal LDAP settings. This manual page only discusses
		the extra options for multiserver environments.</para>
	  </refsection>

	  <refsection>
		<title>File format</title>

		<para>The file consists of one big section, but parameters can be
		grouped by functionality.</para>

		<para>The parameters are written in the form:</para>

		<para><option>name</option> = <replaceable>value</replaceable></para>

		<para>The file is line-based. Each newline-terminated line
		represents either a comment, nothing, a parameter or a directive.
		A line beginning with `#' is considered a comment, and will be
		ignored	by Zarafa. Parameter names are case sensitive. Lines
		beginning with `!' are directives.</para>

		<para>Directives are written in the form:</para>

		<para>!<option>directive</option> <replaceable>[argument(s)]
		</replaceable></para>

		<para>The following directives exist:</para>
		<variablelist>
		  <varlistentry>
		    <term><option>include</option></term>
		    <listitem>
		      <para>Include and process <replaceable>argument</replaceable>
		      </para>
		      <para>Example: !include common.cfg</para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of each parameter</title>

		<variablelist>
		  <varlistentry>
			<term><option>ldap_user_server_attribute</option></term>
			<listitem>
			  <para>This value is the unique name of the server on
			  which the users store is available.</para>
			  <para>Default: <replaceable>zarafaUserServer</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ldap_company_server_attribute</option></term>
			<listitem>
			  <para>This value is the unique name of the server on
			  which the public store for a tenant is available.</para>
			  <para>Default: <replaceable>zarafaCompanyServer</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>ldap_server_address_attribute</option></term>
		    <listitem>
		      <para>The attribute which contains the address of the
		      server. This is used by servers to redirect a client to
		      the correct server.</para>
		      <para>Default: Empty</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>ldap_server_http_port_attribute</option></term>
		    <listitem>
		      <para>The attribute that contains the port on which the
		      server listens for HTTP connections.</para>
		      <para>Default: <replaceable>zarafaHttpPort</replaceable>
		      </para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>ldap_server_ssl_port_attribute</option></term>
		    <listitem>
		      <para>The attribute that contains the port on which the
		      server listens for SSL connections.</para>
		      <para>Default: <replaceable>zarafaSslPort</replaceable>
		      </para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>ldap_server_file_path_attribute</option></term>
		    <listitem>
		      <para>The attribute that contains the path on which the
		      server listens for unix socket connections in Linux or
		      named pipe connections in MS Windows.</para>
		      <para>Default: <replaceable>zarafaFilePath</replaceable>
		      </para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>ldap_server_proxy_url_attribute</option></term>
		    <listitem>
		      <para>If the node is accessed through a reverse HTTP proxy, it
		      should be accessed using this URL. See the manual page entry
		      of proxy_header in the
		      <citerefentry><refentrytitle>zarafa-server.cfg</refentrytitle><manvolnum>5</manvolnum></citerefentry> manpage for
		      details on when this value is used.</para>
		      <para>Default: <replaceable>zarafaProxyURL</replaceable>
		      </para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>ldap_server_contains_public_attribute</option></term>
		    <listitem>
		      <para>The attribute that determines if a server contains the
		      public store for a non-hosted environment.</para>
		      <para>Default: <replaceable>zarafaContainsPublic</replaceable>
		      </para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>ldap_server_search_filter</option></term>
		    <listitem>
		      <para>Add an extra filter to the server search.</para>
			  <para>Default for OpenLDAP is empty.</para>
			  <para>Default for ADS: <replaceable>(objectClass=Computer)</replaceable></para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>ldap_server_unique_attribute</option></term>
		    <listitem>
		      <para>This is the unique attribute of a server which is
			  never going to change, unless the server is removed from
			  LDAP.</para>
			  <para>Default: <replaceable>cn</replaceable></para>
		    </listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Files</title>

		<variablelist>
		  <varlistentry>
			<term><filename>/etc/zarafa/server.cfg</filename></term>
			<listitem><para>The server configuration file.</para></listitem>
		  </varlistentry>
		  <varlistentry>
			<term><filename>/etc/zarafa/ldap.cfg</filename></term>
			<listitem><para>The Zarafa LDAP configuration file.</para></listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-server</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-server.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa unix user plugin configuration file manual page (5.0 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-unix.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-unix.cfg</refname>
		<refpurpose>The Zarafa Unix user plugin configuration file</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>unix.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>unix.cfg</filename> is a configuration
		file for the unix user plugin. All options to correctly retrieve
		user and group information can be set here.</para>
	  </refsection>

	  <refsection>
		<title>File format</title>

		<para>The file consists of one big section, but parameters can be
		grouped by functionality.</para>

		<para>The parameters are written in the form:</para>

		<para><option>name</option> = <replaceable>value</replaceable></para>

		<para>The file is line-based. Each newline-terminated line
		represents either a comment, nothing, a parameter or a directive.
		A line beginning with `#' is considered a comment, and will be
		ignored	by Zarafa. Parameter names are case sensitive. Lines
		beginning with `!' are directives.</para>

		<para>Directives are written in the form:</para>

		<para>!<option>directive</option> <replaceable>[argument(s)]
		</replaceable></para>

		<para>The following directives exist:</para>
		<variablelist>
		  <varlistentry>
		    <term><option>include</option></term>
		    <listitem>
		      <para>Include and process <replaceable>argument</replaceable>
		      </para>
		      <para>Example: !include common.cfg</para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of each parameter</title>

		<variablelist>
		  <varlistentry>
			<term><option>fullname_charset</option></term>
			<listitem>
			  <para>The charset that is used in /etc/passwd for the
			  fullname of a user. In most setups, us-ascii is used,
			  but may also be iso-8859-15. All charsets supported by
			  the system iconv() are supported here. Since iso-8859-15
			  is an extension on us-ascii, this is used as the default
			  to support high characters for most latin languages. If
			  your default shell is in UTF-8 (see your locales
			  settings), enter utf-8 here.</para>
			  <para>Default: <replaceable>iso-8859-15</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>default_domain</option></term>
			<listitem>
			  <para>The default domain name to set as e-mail address.
			  When a user is created, its email address will be set
			  to <replaceable>username@default_domain</replaceable>.
			  </para>
			  <para>Default: <replaceable>no default
			  present</replaceable>.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>min_user_uid</option></term>
			<listitem>
			  <para>This is the minimal uid a user must have to be
			  created as a Zarafa user. This is to skip system users
			  present in the /etc/passwd file. Normally, users start
			  at 1000.</para>
			  <para>Default: <replaceable>1000</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>max_user_uid</option></term>
			<listitem>
			  <para>This is the maximum uid a user may have to be
			  created as a Zarafa user. This is to skip system users
			  present in the /etc/passwd file with a high uid, as user
			  nobody does.</para>
			  <para>Default: <replaceable>10000</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>except_user_uids</option></term>
			<listitem>
			  <para>A whitespace separated list of uids that are within
			  the min_user_uid and max_user_uid range, but shouldn't be
			  considered as users.</para>
			  <para>Default: <replaceable>empty</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>min_group_gid</option></term>
			<listitem>
			  <para>This is the minimal gid a group must have to be
			  created as a Zarafa group. This is to skip system groups
			  present in the /etc/group file. Normally, groups start
			  at 1000.</para>
			  <para>Default: <replaceable>1000</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>max_group_gid</option></term>
			<listitem>
			  <para>This is the maximum gid a group may have to be
			  created as a Zarafa group. This is to skip system groups
			  present in the /etc/group file with a high gid, as group
			  nogroup does.</para>
			  <para>Default: <replaceable>10000</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>except_group_gids</option></term>
			<listitem>
			  <para>A whitespace separated list of gids that are within
			  the min_group_gid and max_group_gid range, but shouldn't be
			  considered as groups.</para>
			  <para>Default: <replaceable>empty</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>non_login_shell</option></term>
			<listitem>
			  <para>This this the shell a user has to be created as a
			  non-login box. Mail can be delivered to this box, but
			  you cannot directly login with this username. The uid
			  must be within the defined limits.</para>
			  <para>Default: <replaceable>/bin/false</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>User attributes</title>

		<para>Not all Zarafa attributes can be used from the system
		files. The following attibutes are used from the system files:
		</para>

		<variablelist>
		  <varlistentry>
			<term>username</term>
			<listitem>
			  <para>The login name of the user.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>fullname</term>
			<listitem>
			  <para>The fullname of the user.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>password</term>
			<listitem>
			  <para>The password is in the /etc/shadow file. Zarafa
			  needs reads access to this file to correctly work with
			  the Unix plugin.
			  </para>
			</listitem>
		  </varlistentry>
		</variablelist>
		<para>Other attributes like quota settings, admin setting and
		e-mail address are kept in the database like the db user
		plugin does.
		</para>
	  </refsection>

	  <refsection>
		<title>Files</title>

		<variablelist>
		  <varlistentry>
			<term><filename>/etc/zarafa/server.cfg</filename></term>
			<listitem><para>The server configuration file.</para></listitem>
		  </varlistentry>
		  <varlistentry>
			<term><filename>/etc/zarafa/unix.cfg</filename></term>
			<listitem><para>The Zarafa Unix user plugin configuration file.</para></listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-server</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-server.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>


<!--
  -+-+-
	Zarafa Spooler manual page (5.0 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-spooler</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-spooler</refname>
		<refpurpose>Start the Zarafa spooler.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-spooler</command>
		  <arg choice="opt" rep="repeat">
			<replaceable>OPTION</replaceable>
		  </arg>
		  <arg><replaceable>SERVERNAME</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The spooler sends all pending Zarafa e-mail to the
		recipients.  When started, the program will keep running and
		sending messages whenever needed.</para>

		<para>The outgoing mailserver can be overwritten from the
		config file by specifying this on the commandline.</para>

		<para>
		  The default settings of the spooler program are defined in
		  <citerefentry>
			<refentrytitle>zarafa-spooler.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>.
		</para>
	  </refsection>

	  <refsection>
		<title>Options</title>

		<para>Various options are possible. None of these options are
		required.</para>

		<variablelist>
		  <varlistentry>
			<term><option>--config</option></term>
			<term>
			  <option>-c</option>
			  <replaceable>spooler.cfg</replaceable>
			</term>
			<listitem>
			  <para>Specify the location of the spooler.cfg file. If
			  the spooler.cfg file is not specified, the spooler will
			  try to load <filename>/etc/zarafa/spooler.cfg</filename>.
			  If that file is not present, it will continue using its
			  default settings.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--host</option></term>
			<term>
			  <option>-h</option>
			  <replaceable>path</replaceable>
			</term>
			<listitem>
			  <para>Connect to the Zarafa server through
			  <replaceable>path</replaceable>, e.g.
			  <filename>file:///path/to/socket</filename>. Default:
			  <filename>file:///var/run/zarafa</filename>. Overrides the config file setting.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--foreground</option></term>
			<term>
			  <option>-F</option>
			</term>
			<listitem>
			  <para>Run in the foreground. Normally the spooler
			  will daemonize and run in the background.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Usage</title>

		<para>To start the spooler delivering e-mail to
		recipients:</para>

		<para><command>zarafa-spooler</command></para>

		<para>
		  To start the spooler delivering e-mail through
		  <filename>smtp.example.com</filename>:
		</para>

		<para><command>zarafa-spooler</command>
		<filename>smtp.example.com</filename>
		</para>

		<para>The spooler process will keep running and watching the
		outgoing queue for new mail to send. You may also use the
		init.d scripts:</para>

		<para><command>/etc/init.d/zarafa-spooler</command>
		[<replaceable>start</replaceable>|
		<replaceable>stop</replaceable>|
		<replaceable>restart</replaceable>]</para>
	  </refsection>

	  <refsection>
		<title>Signals</title>
		<para>The following signals can be sent to the zarafa-spooler
		process:</para>
		<variablelist>
		  <varlistentry>
			<term><option>HUP</option></term>
			<listitem>
			  <para>When the HUP signal is received, some options from
			  the configuration file are reloaded. The reloadable
			  options are listed in the
			  <citerefentry><refentrytitle>zarafa-spooler.cfg</refentrytitle>
			  <manvolnum>5</manvolnum></citerefentry> manual page.</para>
			  <para>Also, when using <replaceable>log_method =
			  file</replaceable>, the logfile will be closed and a new
			  logfile will be opened. You can use this signal in your
			  logrotate system.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term><option>TERM</option></term>
			<listitem>
			  <para>To gracefully let the service exit, the normal TERM
			  signal is used. Because of multiple running threads, it
			  may take up to 60 seconds for the server to completely
			  shutdown.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-spooler.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-server</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Spooler Configuration file manual page (5.0 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-spooler.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-spooler.cfg</refname>
		<refpurpose>The Zarafa spooler configuration file</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>spooler.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>spooler.cfg</filename> is a configuration
		file for the Zarafa Spooler. <filename>spooler.cfg</filename>
		contains instructions for the software to set up the logging
		system and outgoing smtp relay server.</para>
	  </refsection>

	  <refsection>
		<title>File format</title>

		<para>The file consists of one big section, but parameters can be
		grouped by functionality.</para>

		<para>The parameters are written in the form:</para>

		<para><option>name</option> = <replaceable>value</replaceable></para>

		<para>The file is line-based. Each newline-terminated line
		represents either a comment, nothing, a parameter or a directive.
		A line beginning with `#' is considered a comment, and will be
		ignored	by Zarafa. Parameter names are case sensitive. Lines
		beginning with `!' are directives.</para>

		<para>Directives are written in the form:</para>

		<para>!<option>directive</option> <replaceable>[argument(s)]
		</replaceable></para>

		<para>The following directives exist:</para>
		<variablelist>
		  <varlistentry>
		    <term><option>include</option></term>
		    <listitem>
		      <para>Include and process <replaceable>argument</replaceable>
		      </para>
		      <para>Example: !include common.cfg</para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of each parameter</title>

		<variablelist>
		  <varlistentry>
			<term><option>smtp_server</option></term>
			<listitem>
			  <para>Hostname or IP address of the outgoing SMTP
			  server. This server needs to relay mail for your
			  server.</para>
			  <para>Default: <parameter>localhost</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>smtp_port</option></term>
			<listitem>
			  <para>TCP Port number for smtp_server.
			  </para>
			  <para>Default: <parameter>25</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_socket</option></term>
			<listitem>
			  <para>Unix socket to find the connection to the Zarafa
			  server.</para>
			  <para>Default:
			  <parameter>file:///var/run/zarafa</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_user</option></term>
			<listitem>
			  <para>After correctly starting, the spooler process will
			  become this user, dropping root privileges. Note that
			  the log file needs to be writeable by this user, and the
			  directory too to create new logfiles after
			  logrotation. This can also be achieved by setting the
			  correct group and permissions.
			  </para>
			  <para>Default value is empty, not changing the user
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_group</option></term>
			<listitem>
			  <para>After correctly starting, the spooler process will
			  become this group, dropping root privileges.
			  </para>
			  <para>Default value is empty, not changing the group
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pid_file</option></term>
			<listitem>
			  <para>Write the process ID number to this file. This is
			  used by the init.d script to correctly stop/restart the
			  service.
			  </para>
			  <para>Default:
			  <replaceable>/var/run/zarafa-spooler.pid</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>running_path</option></term>
			<listitem>
			  <para>Change directory to this path when running in
			  daemonize mode. When using the -F switch to run in the
			  foreground the directory will not be changed.
			  </para>
			  <para>Default:
			  <replaceable>/</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_file</option></term>
			<listitem>
			  <para>Use this file as key to logon to the server. This
			  is only used when server_socket is set to an HTTPS
			  transport. See the
			  <citerefentry>
				<refentrytitle>zarafa-server</refentrytitle>
				<manvolnum>8</manvolnum>
			  </citerefentry>
			  manual page on how to setup SSL keys.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_pass</option></term>
			<listitem>
			  <para>The password of the SSL key file that is set in
			  sslkey_file.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_method</option></term>
			<listitem>
			  <para>The method which should be used for logging. Valid
			  values are:</para>

			  <variablelist>
				<varlistentry>
				  <term><replaceable>syslog</replaceable></term>
				  <listitem>
					<para>Use the Linux system log. All messages will
					be written to the mail facility. See also <citerefentry>
					<refentrytitle>syslog.conf</refentrytitle>
					<manvolnum>5</manvolnum>
					</citerefentry>.</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><replaceable>file</replaceable></term>
				  <listitem>
					<para>Log to a file. The filename will be
					specified in <option>log_file</option>.</para>
				  </listitem>
				</varlistentry>
			  </variablelist>

			  <para>Default: <replaceable>file</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_file</option></term>
			<listitem>
			  <para>When logging to a file, specify the filename in
			  this parameter. Use <replaceable>-</replaceable> (minus
			  sign) for stderr output.</para>
			  <para>Default: <replaceable>/var/log/zarafa/spooler.log</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_timestamp</option></term>
			<listitem>
			  <para>Specify whether to prefix each log line with a
			  timestamp in 'file' logging mode.</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_buffer_size</option></term>
			<listitem>
			  <para>Buffer logging in what sized blocks.
                              Bigger buffers is better for the performance but it gives lag
                              when running e.g. multitail or 'tail -f' on the log-file. If
                              you want to directly see what is happing, set this to e.g. 1.
                              So when debugging: make it a small value, else set it to
                              4096 or more.</para>
			  <para>Default: <replaceable>4096</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_level</option></term>
			<listitem>
			  <para>The level of output for logging in the range from
			  0 to 5. 0 means no logging, 5 means full logging.</para>
			  <para>Default: <replaceable>2</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>max_threads</option></term>
			<listitem>
			  <para>The maximum number of threads used to send outgoing messages.
			  For each email in the outgoing queue a separate thread will be started
			  in order to allow multiple emails to be send out simultaneously.</para>
			  <para>Default: <replaceable>5</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>fax_domain</option></term>
			<listitem>
			  <para>When an email is sent to a contact with a FAX type
			  email address, the address will be rewritten to a normal
			  SMTP address, using the scheme:
			  &lt;faxnumber&gt;@&lt;fax_domain&gt;. You can install
			  software in your SMTP server which handles these email
			  addresses to actually fax the message to that number.</para>
			  <para>Default: <replaceable></replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>fax_international</option></term>
			<listitem>
			  <para>When sending an international fax, the number will
			  start with a '+' sign. You can rewrite this to the
			  digits you need to dial when dialing to another
			  country.</para>
			  <para>Default: <replaceable>+</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>always_send_delegates</option></term>
			<listitem>
			  <para>Normally, a user needs to give explicit rights to
			  other users to be able to send under their name. When
			  setting this value to 'yes', the spooler will not check
			  these permissions, and will always send the email with
			  'On behalf of' headers. This was the default behaviour
			  in installations before Zarafa 6.20. Please note that
		      this feature overrides 'send-as' functionality.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>always_send_tnef</option></term>
			<listitem>
			  <para>Since Zarafa 6.30, meeting requests will be sent
			  using iCalendar files. This adds compatibility to more
			  calendar programs. To use the previous TNEF
			  (winmail.dat) method, set this option to 'yes'.</para>
			  <para>When an email body is written in RTF text,
			  normally this data is sent using TNEF. If you want to
			  send an HTML representation of the email instead and not
			  use TNEF, set this to 'minimal'.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>always_send_utf8</option></term>
			<listitem>
			  <para>E-mails can be sent in any charset that the e-mail
			   was written in. It may be desirable to always send in
			   the UTF-8 charset, which may be more widely
			   supported. To enable e-mail to always be sent in the
			   utf-8 charset, set this option to 'yes'.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			 <term><option>enable_dsn</option></term>
			 <listitem>
				<para>Enable the Delivery Status Notifications (DSN) for users.
				If a user requests a DSN the spooler sends the request to the MTA and when
				the MTA support this the user will receive the report in the mailbox. When the
				MTA doesn't support DSN the user will not receive a report. Ensure you have
			   	a supported MTA like postfix 2.3 and higher.
				If DSN is disabled and the user request a DSN then it will be ignored
				and the delivery report is not sent.
				</para>
		 	   <para>Default: <replaceable>yes</replaceable></para>
	   		</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>charset_upgrade</option></term>
			<listitem>
			  <para>Upgrades the us-ascii charset to this
			  charset. This makes sure high-characters in recipients
			  and attachment filenames are correctly sent when the
			  body is in plain text. Not used when always_send_utf8 is
			  enabled.</para>
			  <para>Default: <replaceable>windows-1252</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>allow_redirect_spoofing</option></term>
			<listitem>
			  <para>Normally, users are not allowed to send e-mail from a
			  different e-mail address than their own. However, the 'redirect'
			  rule sends e-mails with their original 'from' address.
			  Enabling this option allows redirected e-mails to be sent with
			  their original 'from' e-mail address.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>copy_delegate_mails</option></term>
			<listitem>
			  <para>Make a copy of the sent mail of delegates in the
			  sent items folder of the representee. This is done for
			  both delegate and send-as e-mails.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>allow_delegate_meeting_request</option></term>
			<listitem>
			  <para>
			  Normally, users are not allowed to send meeting requests as
			  external delegate. However, when you want to forward meeting requests
			  you need delegate permissions. Enabling this option allows
			  you to sent and forward a meeting request as a delegate Zarafa and
			  SMTP user.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>allow_send_to_everyone</option></term>
			<listitem>
			  <para>
			  When set to 'no', sending to the 'everyone' group is
			  disallowed. The entire message will be bounced if this is
			  attempted. When set to 'yes', this allows sending to all users
			  in the 'everyone' group.
			  </para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>expand_groups</option></term>
			<listitem>
			  <para>Expand groups in headers of sent e-mails. This means
			  that the recipient of an e-mail with one or more groups as
			  recipients will see the members of the groups instead of the
			  groups themselves. If a group has an e-mail address, the group
			  is not expanded irrespective of this setting, since having an
			  e-mail address for the group implies that this address can be
			  used to send messages to the group.
			  </para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

          <varlistentry>
            <term><option>archive_on_send</option></term>
            <listitem>
              <para>Archive outgoing messages. If an archive is
              attached to the mailbox from which a message is send, the message
              will immediately be archived to the special Outgoing folder.</para>
              <para>Messages that are archived this way are not attached to
              the original message in the primary store. So there's no easy
              way to find the original sent item based on an archive or find an
              archive based on the sent item in the primary store. This option
              is only intended to make sure all outgoing messages are stored
              without the possibility for the owner to delete them.</para>
              <para>Default: <replaceable>no</replaceable></para>
            </listitem>
          </varlistentry>

		  <varlistentry>
			<term><option>plugin_enabled</option></term>
			<listitem>
					<para>Enable or disable the spooler plugin framework.</para>
				<para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>plugin_manager_path</option></term>
			<listitem>
					<para>The path to the spooler plugin manager.</para>
				<para>Default: <replaceable>/usr/share/zarafa-spooler/python</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>plugin_path</option></term>
			<listitem>
				<para>Path to the activated spooler plugins. This folder contains symlinks
				to the zarafa plugins and custom scripts. The plugins are installed in
				<replaceable>/usr/share/zarafa-spooler/python/plugins</replaceable>. To activate a plugin create a symbolic
				link in the <replaceable>plugin_path</replaceable> directory.</para>
				<para>Example:</para>
				<para>
					<command>ln</command>
					<option>-s</option>
				    <replaceable>/usr/share/zarafa-spooler/python/plugins/BMP2PNG.py</replaceable> <replaceable>/var/lib/zarafa/spooler/plugins/BMP2PNG.py</replaceable>
				</para>
				<para>Default: <replaceable>/var/lib/zarafa/spooler/plugins</replaceable></para>
			</listitem>
		  </varlistentry>


		</variablelist>
	  </refsection>

	  <refsection>
		<title>Reloading</title>
		<para>The following options are reloadable by sending the zarafa-spooler process a HUP signal:</para>

		<variablelist>
		  <varlistentry>
			<term>log_level</term>
			<term>max_threads</term>
			<term>archive_on_send</term>
			<listitem><para></para></listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Files</title>

		<variablelist>
		  <varlistentry>
			<term><filename>/etc/zarafa/spooler.cfg</filename></term>
			<listitem>
			  <para>The Zarafa spooler configuration file.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-spooler</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Gateway manual page (5.0 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-gateway</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-gateway</refname>
		<refpurpose>Start the Zarafa IMAP/POP3 Gateway.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-gateway</command>
		  <arg choice="opt" rep="repeat">
			<replaceable>OPTION</replaceable>
		  </arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The gateway enables other e-mail clients to connect
		through POP3 or IMAP to the Zarafa server to read their
		e-mail. With IMAP, it is also possible to view the contents of
		other folders and subfolders. The gateway can be configured to
		listen for POP3, POP3S, IMAP and/or IMAPS.</para>

		<para>The default settings of the gateway program are defined
		in <citerefentry>
		<refentrytitle>zarafa-gateway.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
		</citerefentry>.
		</para>
	  </refsection>

	  <refsection>
		<title>Options</title>

		<para>Various options are possible. None of these options are
		required.</para>

		<para>
		  <variablelist>
			<varlistentry>
			  <term><option>--config</option></term>
			  <term>
				<option>-c</option>
				<replaceable>gateway.cfg</replaceable>
			  </term>
			  <listitem>
				<para>Specify the location of the gateway.cfg file. If
				the gateway.cfg file is not specified, the gateway
				will continue using its default settings.</para>
				<para>Default: <replaceable>/etc/zarafa/gateway.cfg</replaceable></para>
			  </listitem>
			</varlistentry>

			<varlistentry>
			  <term><option>--host</option></term>
			  <term>
				<option>-h</option>
				<replaceable>path</replaceable>
			  </term>
			  <listitem>
				<para>Connect to the Zarafa server through
				<replaceable>path</replaceable>, e.g.
				<filename>file:///path/to/socket</filename>. Default:
				<filename>file:///var/run/zarafa</filename>. Overrides the config file setting.</para>
			  </listitem>
			</varlistentry>

		  <varlistentry>
			<term><option>--foreground</option></term>
			<term>
			  <option>-F</option>
			</term>
			<listitem>
			  <para>Run in the foreground. Normally the gateway
			  will daemonize and run in the background.</para>
			</listitem>
		  </varlistentry>
		  </variablelist>
		</para>
	  </refsection>

	  <refsection>
		<title>Signals</title>
		<para>The following signals can be sent to the zarafa-gateway
		process:</para>
		<variablelist>
		  <varlistentry>
			<term><option>HUP</option></term>
			<listitem>
			  <para>When the HUP signal is received, some options from
			  the configuration file are reloaded. The reloadable
			  options are listed in the
			  <citerefentry><refentrytitle>zarafa-gateway.cfg</refentrytitle>
			  <manvolnum>5</manvolnum></citerefentry> manual page.</para>
			  <para>Also, when using <replaceable>log_method =
			  file</replaceable>, the logfile will be closed and a new
			  logfile will be opened. You can use this signal in your
			  logrotate system.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term><option>TERM</option></term>
			<listitem>
			  <para>To gracefully let the service exit, the normal TERM
			  signal is used.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Usage</title>

		<para>To start the gateway:</para>

		<para><command>zarafa-gateway</command></para>

		<para>The gateway process will keep running. You may also use
		the init.d scripts:</para>

		<para><command>/etc/init.d/zarafa-gateway</command>
		[<replaceable>start</replaceable>|
		<replaceable>stop</replaceable>|
		<replaceable>restart</replaceable>]</para>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-gateway.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-server</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Gateway Configuration file manual page (5.0 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-gateway.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-gateway.cfg</refname>
		<refpurpose>The Zarafa gateway configuration file</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>gateway.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>gateway.cfg</filename> is a configuration
		file for the Zarafa Gateway. <filename>gateway.cfg</filename>
		contains instructions for the software to set up the logging
		system and to enable or disable the POP3, POP3S, IMAP or
		IMAPS part of the service.</para>
	  </refsection>

	  <refsection>
		<title>File format</title>

		<para>The file consists of one big section, but parameters can be
		grouped by functionality.</para>

		<para>The parameters are written in the form:</para>

		<para><option>name</option> = <replaceable>value</replaceable></para>

		<para>The file is line-based. Each newline-terminated line
		represents either a comment, nothing, a parameter or a directive.
		A line beginning with `#' is considered a comment, and will be
		ignored	by Zarafa. Parameter names are case sensitive. Lines
		beginning with `!' are directives.</para>

		<para>Directives are written in the form:</para>

		<para>!<option>directive</option> <replaceable>[argument(s)]
		</replaceable></para>

		<para>The following directives exist:</para>
		<variablelist>
		  <varlistentry>
		    <term><option>include</option></term>
		    <listitem>
		      <para>Include and process <replaceable>argument</replaceable>
		      </para>
		      <para>Example: !include common.cfg</para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of each parameter</title>

		<variablelist>
		  <varlistentry>
			<term><option>server_bind</option></term>
			<listitem>
			  <para>IP address to bind to. 0.0.0.0 for any address.</para>
			  <para>Default: <replaceable>0.0.0.0</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_hostname</option></term>
			<listitem>
			  <para>Hostname of the server to print to a client in the
			  logon greeting. Leave empty to use DNS to find the hostname.</para>
			  <para>Default: <replaceable></replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_hostname_greeting</option></term>
			<listitem>
			  <para>Whether to show the hostname in the logon greeting
			  to clients. This config option is reloadable using the
			  HUP signal.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pop3_enable</option></term>
			<listitem>
			  <para>Enable POP3 service with value yes.
			  All other values disable the service.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pop3_port</option></term>
			<listitem>
			  <para>The POP3 service will listen on this port for
			  incoming connections.</para>
			  <para>Default: <replaceable>110</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pop3s_enable</option></term>
			<listitem>
			  <para>Enable POP3S service with value yes.
			  All other values disable the service.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pop3s_port</option></term>
			<listitem>
			  <para>The POP3S service will listen on this port for
			  incoming connections.</para>
			  <para>Default: <replaceable>995</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>imap_enable</option></term>
			<listitem>
			  <para>Enable IMAP service with value yes.
			  All other values disable the service.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>imap_port</option></term>
			<listitem>
			  <para>The IMAP service will listen on this port for
			  incoming connections.</para>
			  <para>Default: <replaceable>143</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>imaps_enable</option></term>
			<listitem>
			  <para>Enable IMAPS service with value yes.
			  All other values disable the service.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>imaps_port</option></term>
			<listitem>
			  <para>The IMAPS service will listen on this port for
			  incoming connections.</para>
			  <para>Default: <replaceable>993</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_socket</option></term>
			<listitem>
			  <para>The http address of the Zarafa server.</para>
			  <para>Default:
			  <replaceable>http://localhost:236/zarafa</replaceable>
			  </para>
			  <para>It is not advised to specify the UNIX socket
			  here, but the http address instead. In default
			  configuration the gateway will then be trusted by the
			  Zarafa server (as set in its local_admin_users
		 	  configuration setting). Unless is run as an untrusted
			  user, by specifying the <option>run_as_user</option>,
			  the gateway always authenticates users even if they
			  provide no or wrong credentials!</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_user</option></term>
			<listitem>
			  <para>After correctly starting, the gateway process will
			  become this user, dropping root privileges. Note that
			  the log file needs to be writeable by this user, and the
			  directory too to create new logfiles after
			  logrotation. This can also be achieved by setting the
			  correct group and permissions.
			  </para>
			  <para>Default value is empty, not changing the user
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_group</option></term>
			<listitem>
			  <para>After correctly starting, the gateway process will
			  become this group, dropping root privileges.
			  </para>
			  <para>Default value is empty, not changing the group
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pid_file</option></term>
			<listitem>
			  <para>Write the process ID number to this file. This is
			  used by the init.d script to correctly stop/restart the
			  service.
			  </para>
			  <para>Default:
			  <replaceable>/var/run/zarafa-gateway.pid</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>running_path</option></term>
			<listitem>
			  <para>Change directory to this path when running in
			  daemonize mode. When using the -F switch to run in the
			  foreground the directory will not be changed.
			  </para>
			  <para>Default:
			  <replaceable>/</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>process_model</option></term>
			<listitem>
			  <para>You can change the process model between
			  <replaceable>fork</replaceable> and
			  <replaceable>thread</replaceable>. The forked model uses
			  somewhat more resources, but if a crash is triggered,
			  this will only affect one user. In the threaded model, a
			  crash means all users are affected, and will not be able
			  to use the service.
			  </para>
			  <para>Default:
			  <replaceable>fork</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>imap_only_mailfolders</option></term>
			<listitem>
			  <para>Enable the IMAP and IMAPS service to only show the
			  mailfolders. This is the default behaviour. When this
			  option is set to 'no', you will also be able to select
			  you calendar and contacts and such. These views will not
			  contain all information, since these items cannot be
			  converted to a rfc-822 mail item.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>imap_public_folders</option></term>
			<listitem>
			  <para>Enable the IMAP and IMAPS service to also show the
			  public store with subfolders. This is the default
			  behaviour. When this option is set to 'no', IMAP clients
			  will only see the users' folder.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>imap_capability_idle</option></term>
			<listitem>
			  <para>Allow IMAP clients to issue the IDLE command. When
			  an IMAP client is idle, it may receive notifications
			  from the server about changes of the selected
			  folder. This may increase load on the server when many
			  users are using the IMAP service.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>imap_generate_utf8</option></term>
			<listitem>
				<para>Normally e-mails specify the correct charset for
				their contents. This may be altered to make it always
				UTF-8. This will only happen on e-mails that do not
				have the extra imap data properties, which is true for
				users without the 'imap' feature enabled.</para>
				<para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>imap_max_messagesize</option></term>
			<listitem>
				<para>Limit the maximum message size (in bytes) which can
				be created by an IMAP client. The maximum of this value is 4GB
				although this is not recommended. If the value is too high
				it will cause a segmentation fault. This value may contain a
				k, m or g multiplier.</para>
				<para>Default: <replaceable>128M</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>imap_expunge_on_delete</option></term>
			<listitem>
				<para>Normally when you delete an e-mail in an IMAP
				client, it will only be marked as deleted, and not
				removed from the folder. The client should send the
				EXPUNGE command to actually remove the item from the
				folder (where Zarafa will place it in the soft-delete
				system). When this option is set to
				<replaceable>yes</replaceable>, the zarafa-gateway
				will issue the expunge command itself directly after a
				'mark as delete' command was received.</para>
				<para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>imap_store_rfc822</option></term>
			<listitem>
				<para>Store the rfc822 data with the message in MAPI. The
				Zarafa Gateway stores the original rfc822 data of an
				APPENDed message in the database for later retrieval. This
				makes sure that the exact message that was delivered into
				the Zarafa gateway is available for retrieval later, which
				is the behaviour when set to
				<replaceable>yes</replaceable>. If set to no, the zarafa-gateway
				will not store the original rfc822 text. This means that the
				rfc822 data must be re-created when retrieved. This may
				cause changes in encoding or charset and some loss of
				fidelity. This will also invalidate any signatures in the
				stored messages.
				</para>
				<para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>imap_max_fail_commands</option></term>
			<listitem>
				<para>Maximum of failed commands before forcibly closing
				connection of client. This makes sure that a client which does
				repeatedly fails on a specific connection (like opening folders
				over and over again which do not exist) does not affect the
				overall performance of the gateway process.
				With the default value set to <replaceable>10</replaceable>,
				normal operation will work for most productionenvironments.
				With IMAP migrations, this value should be set higher as
				many traditional IMAP migration tools try to fetch folders
				which do not necessarily exist before, so in a migration
				scenario this value should be set higher, at minimum to the
				number of folders to be migrated from the largest mailbox.
				</para>
				<para>Default: <replaceable>10</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>disable_plaintext_auth</option></term>
			<listitem>
			  <para>Disable all plaintext POP3 and IMAP authentications unless
			  SSL/TLS is used. Obviously this requires at least
			  <replaceable>ssl_private_key_file</replaceable> and
			  <replaceable>ssl_certificate_file</replaceable> to take effect.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_private_key_file</option></term>
			<listitem>
			  <para>The gateway will use this file as private
			  key for SSL TLS. This file can be created with:
			  <command>openssl genrsa -out /etc/zarafa/gateway/privkey.pem 2048</command>.</para>
			  <para>Default:
			  <replaceable>/etc/zarafa/gateway/privkey.pem</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_certificate_file</option></term>
			<listitem>
			  <para>The gateway will use this file as
			  certificate for SSL TLS. A self-signed certificate
			  can be created with: <command>openssl req -new -x509
			  -key /etc/zarafa/gateway/privkey.pem -out /etc/zarafa/gateway/cert.pem
			  -days 1095</command>.</para>
			  <para>Default:
			  <replaceable>/etc/zarafa/gateway/cert.pem</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_verify_client</option></term>
			<listitem>
			  <para>Enable client certificate verification with value
			  yes. All other values disable the verification.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_verify_file</option></term>
			<listitem>
			  <para>The file to verify the clients certificates
			  with.</para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_verify_path</option></term>
			<listitem>
			  <para>The path with the files to verify the clients
			  certificates with.</para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_protocols</option></term>
			<listitem>
			  <para>Disabled or enabled protocol names. Supported protocol names
			  are <replaceable>SSLv2</replaceable>, <replaceable>SSLv3</replaceable>
			  and <replaceable>TLSv1</replaceable>. If Zarafa was linked against
			  OpenSSL 1.0.1 or later there is additional support for the new protocols
			  <replaceable>TLSv1.1</replaceable> and <replaceable>TLSv1.2</replaceable>.
			  To exclude both, SSLv2 and SSLv3 set <option>ssl_protocols</option>
			  to <replaceable>!SSLv2 !SSLv3</replaceable>. SSLv2 is considered unsafe
			  and these connections should not be accepted.</para>
			  <para>Default: <replaceable>!SSLv2</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_ciphers</option></term>
			<listitem>
			  <para>SSL ciphers to use, set to <replaceable>ALL</replaceable> for backward compatibility.</para>
			  <para>Default: <replaceable>ALL:!LOW:!SSLv2:!EXP:!aNULL</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_prefer_server_ciphers</option></term>
			<listitem>
			  <para>Prefer the server's order of SSL ciphers over client's.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_method</option></term>
			<listitem>
			  <para>The method which should be used for logging. Valid
			  values are:</para>

			  <variablelist>
				<varlistentry>
				  <term><replaceable>syslog</replaceable></term>
				  <listitem>
					<para>Use the Linux system log. All messages will
					be written to the mail facility. See also <citerefentry>
					<refentrytitle>syslog.conf</refentrytitle>
					<manvolnum>5</manvolnum></citerefentry>.</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><replaceable>file</replaceable></term>
				  <listitem>
					<para>Log to a file. The filename will be
					specified in <option>log_file</option>.</para>
				  </listitem>
				</varlistentry>
			  </variablelist>

			  <para>Default: <replaceable>file</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_file</option></term>
			<listitem>
			  <para>When logging to a file, specify the filename in
			  this parameter. Use <replaceable>-</replaceable> (minus
			  sign) for stderr output.</para>
			  <para>Default: <replaceable>/var/log/zarafa/gateway.log</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_level</option></term>
			<listitem>
			  <para>The level of output for logging in the range from
			  0 to 5. 0=no logging, 5=full logging.</para>
			  <para>Default: <replaceable>2</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_timestamp</option></term>
			<listitem>
			  <para>Specify whether to prefix each log line with a
			  timestamp in 'file' logging mode.</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_buffer_size</option></term>
			<listitem>
			  <para>Buffer logging in what sized blocks.
                              Bigger buffers is better for the performance but it gives lag
                              when running e.g. multitail or 'tail -f' on the log-file. If
                              you want to directly see what is happing, set this to e.g. 1.
                              So when debugging: make it a small value, else set it to
                              4096 or more.</para>
			  <para>Default: <replaceable>4096</replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Reloading</title>
		<para>The following options are reloadable by sending the zarafa-gateway process a HUP signal:</para>

		<variablelist>
		  <varlistentry>
			<term>log_level</term>
			<listitem><para></para></listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Files</title>

		<variablelist>
		  <varlistentry>
			<term><filename>/etc/zarafa/gateway.cfg</filename></term>
			<listitem>
			  <para>The Zarafa gateway configuration file.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-gateway</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Monitor manual page (5.0 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-monitor</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-monitor</refname>
		<refpurpose>Start the Zarafa monitor.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-monitor</command>
		  <arg choice="opt" rep="repeat">
			<replaceable>OPTION</replaceable>
		  </arg>
		  <arg><replaceable>SERVERNAME</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The monitor checks user mailbox sizes. When the quota is
		reached the monitor sends a quota email. When started, the
		program will keep running.
		</para>

		<para>The defaults can be overwritten in the config
		file.</para>

		<para>
		  The default settings of the monitor program are defined in
		  <citerefentry>
			<refentrytitle>zarafa-monitor.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>.
		</para>
	  </refsection>

	  <refsection>
		<title>Options</title>

		<para>Various options are possible. None of these options are
		required.</para>

		<variablelist>
		  <varlistentry>
			<term><option>--config</option></term>
			<term>
			  <option>-c</option>
			  <replaceable>monitor.cfg</replaceable>
			</term>
			<listitem>
			  <para>Specify the location of the monitor.cfg file. If
			  the monitor.cfg file is not specified, the monitor will
			  try to load <filename>/etc/zarafa/monitor.cfg</filename>.
			  If that file is not present, it will continue using its
			  default settings.</para>
			  <para>Default: <replaceable>/etc/zarafa/monitor.cfg</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--host</option></term>
			<term>
			  <option>-h</option>
			  <replaceable>path</replaceable>
			</term>
			<listitem>
			  <para>Connect to the Zarafa server through
			  <replaceable>path</replaceable>, e.g.
			  <filename>file:///path/to/socket</filename>. Default:
			  <filename>file:///var/run/zarafa</filename>.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--foreground</option></term>
			<term>
			  <option>-F</option>
			</term>
			<listitem>
			  <para>Run in the foreground. Normally the monitor
			  will daemonize and run in the background.</para>
			</listitem>
		  </varlistentry>
	    </variablelist>
	  </refsection>

	  <refsection>
		<title>Signals</title>
		<para>The following signals can be sent to the zarafa-monitor
		process:</para>
		<variablelist>
		  <varlistentry>
			<term><option>HUP</option></term>
			<listitem>
			  <para>When the HUP signal is received, some options from
			  the configuration file are reloaded. The reloadable
			  options are listed in the
			  <citerefentry><refentrytitle>zarafa-monitor.cfg</refentrytitle>
			  <manvolnum>5</manvolnum></citerefentry> manual page.</para>
			  <para>Also, when using <replaceable>log_method =
			  file</replaceable>, the logfile will be closed and a new
			  logfile will be opened. You can use this signal in your
			  logrotate system.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term><option>TERM</option></term>
			<listitem>
			  <para>To gracefully let the service exit, the normal TERM
			  signal is used.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Usage</title>

		<para>The monitor checks user mailbox sizes. The monitor sends
		a quota email when the warning quota limit is reached. When
		started, the program will keep running. You may also use the
		init.d scripts:
		</para>

		<para><command>/etc/init.d/zarafa-monitor</command>
		[<replaceable>start</replaceable>|
		<replaceable>stop</replaceable>|
		<replaceable>restart</replaceable>]</para>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-monitor.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-server</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Monitor Configuration file manual page (5.0 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-monitor.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-monitor.cfg</refname>
		<refpurpose>The Zarafa monitor configuration file</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>monitor.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>monitor.cfg</filename> is a configuration
		file for the Zarafa Monitor. <filename>monitor.cfg</filename>
		contains instructions for the software to set up the logging
		system.</para>
	  </refsection>

	  <refsection>
		<title>File format</title>

		<para>The file consists of one big section, but parameters can be
		grouped by functionality.</para>

		<para>The parameters are written in the form:</para>

		<para><option>name</option> = <replaceable>value</replaceable></para>

		<para>The file is line-based. Each newline-terminated line
		represents either a comment, nothing, a parameter or a directive.
		A line beginning with `#' is considered a comment, and will be
		ignored	by Zarafa. Parameter names are case sensitive. Lines
		beginning with `!' are directives.</para>

		<para>Directives are written in the form:</para>

		<para>!<option>directive</option> <replaceable>[argument(s)]
		</replaceable></para>

		<para>The following directives exist:</para>
		<variablelist>
		  <varlistentry>
		    <term><option>include</option></term>
		    <listitem>
		      <para>Include and process <replaceable>argument</replaceable>
		      </para>
		      <para>Example: !include common.cfg</para>
		    </listitem>
		  </varlistentry>
		</variablelist>

		<para>The types of parameters for the spooler are: server,
		smtp and log.</para>
	  </refsection>

	  <refsection>
		<title>Explanation of each parameter</title>

		<variablelist>
		  <varlistentry>
			<term><option>quota_check_interval</option></term>
			<listitem>
			  <para>Set the interval (in minutes) for checking
			  the quota for all Zarafa users.</para>
	  		  <para>Default: <parameter>15</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>mailquota_resend_interval</option></term>
			<listitem>
			  <para>Send interval of a quota mail in days when a user
			  reache his warning, soft or hard quota.</para>
			  <para>Default: <parameter>1</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_socket</option></term>
			<listitem>
			  <para>Connection URL to find the connection to the Zarafa
			  server.</para>
			  <para>Default:
			  <parameter>file:///var/run/zarafa</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_user</option></term>
			<listitem>
			  <para>After correctly starting, the monitor process will
			  become this user, dropping root privileges. Note that
			  the log file needs to be writeable by this user, and the
			  directory too to create new logfiles after
			  logrotation. This can also be achieved by setting the
			  correct group and permissions.
			  </para>
			  <para>Default value is empty, not changing the user
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_group</option></term>
			<listitem>
			  <para>After correctly starting, the monitor process will
			  become this group, dropping root privileges.
			  </para>
			  <para>Default value is empty, not changing the group
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pid_file</option></term>
			<listitem>
			  <para>Write the process ID number to this file. This is
			  used by the init.d script to correctly stop/restart the
			  service.
			  </para>
			  <para>Default value: /var/run/zarafa-monitor.pid
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>running_path</option></term>
			<listitem>
			  <para>Change directory to this path when running in
			  daemonize mode. When using the -F switch to run in the
			  foreground the directory will not be changed.
			  </para>
			  <para>Default:
			  <replaceable>/</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_file</option></term>
			<listitem>
			  <para>Use this file as key to logon to the server. This
			  is only used when server_socket is set to an HTTPS
			  transport. See the
			  <citerefentry>
				<refentrytitle>zarafa-server</refentrytitle>
				<manvolnum>8</manvolnum>
			  </citerefentry>
			  manual page on how to setup SSL keys.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_pass</option></term>
			<listitem>
			  <para>The password of the SSL key file that is set in
			  sslkey_file.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_method</option></term>
			<listitem>
			  <para>The method which should be used for logging. Valid
			  values are:</para>

			  <variablelist>
				<varlistentry>
				  <term><replaceable>syslog</replaceable></term>
				  <listitem>
					<para>Use the Linux system log. All messages will
					be written to the mail facility. See also <citerefentry>
					<refentrytitle>syslog.conf</refentrytitle>
					<manvolnum>5</manvolnum>
					</citerefentry>.</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><replaceable>file</replaceable></term>
				  <listitem>
					<para>Log to a file. The filename will be
					specified in <option>log_file</option>.</para>
				  </listitem>
				</varlistentry>
			  </variablelist>

			  <para>Default: <replaceable>file</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_file</option></term>
			<listitem>
			  <para>When logging to a file, specify the filename in
			  this parameter. Use <replaceable>-</replaceable> (minus
			  sign) for stderr output.</para>
			  <para>Default: <replaceable>/var/log/zarafa/monitor.log</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_timestamp</option></term>
			<listitem>
			  <para>Specify whether to prefix each log line with a
			  timestamp in 'file' logging mode.</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_buffer_size</option></term>
			<listitem>
			  <para>Buffer logging in what sized blocks.
                              Bigger buffers is better for the performance but it gives lag
                              when running e.g. multitail or 'tail -f' on the log-file. If
                              you want to directly see what is happing, set this to e.g. 1.
                              So when debugging: make it a small value, else set it to
                              4096 or more.</para>
			  <para>Default: <replaceable>4096</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_level</option></term>
			<listitem>
			  <para>The level of output for logging in the range from
			  0 to 5. 0 means no logging, 5 means full logging.</para>
			  <para>Default: <replaceable>2</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>userquota_warning_template</option></term>
			<term><option>companyquota_warning_template</option></term>
			<listitem>
			  <para>These templates are read by the zarafa-monitor when a
			  user or tenant exceeds a particular quota level.
			  In these templates multiple variables can be used which
			  will be replaced before sending the quota warning email.
			  </para>
			  <para>These files should be saved in the UTF-8
			  charset. UTF-8 is compatible with US-ASCII, so if you
			  only use western characters, there is no need for
			  special measurements.</para>
			  <variablelist>
				<varlistentry>
				  <term><parameter>${ZARAFA_QUOTA_NAME}</parameter></term>
				  <listitem>
					<para>userquota template: The name of the user who exceeded his quota</para>
					<para>companyquota template: The name of the tenant which exceeded its quota</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><parameter>${ZARAFA_QUOTA_FULLNAME}</parameter></term>
				  <listitem>
					<para>userquota template: The fullname for the user who exceeded his quota</para>
					<para>tenantquota template: The name of the tenant which exceeded its quota</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><parameter>${ZARAFA_QUOTA_COMPANY}</parameter></term>
				  <listitem>
				    <para>userquota template: The name of the tenant to which the user belongs</para>
					<para>tenantquota template: The name of the tenant which exceeded its quota</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><parameter>${ZARAFA_QUOTA_STORE_SIZE}</parameter></term>
				  <listitem>
					<para>userquota template: The total size of the user's store</para>
					<para>companyquota template: The total size of all stores (including the public store)
					which belong to this tenant</para>
					<para>Note: The size unit (KB,MB) is part of the variable</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><parameter>${ZARAFA_QUOTA_WARN_SIZE}</parameter></term>
				  <listitem>
				    <para>The quota warning level</para>
					<para>Note: The size unit (KB,MB) is part of the variable</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><parameter>${ZARAFA_QUOTA_SOFT_SIZE}</parameter></term>
				  <listitem>
				    <para>The quota soft level</para>
					<para>Note: The size unit (KB,MB) is part of the variable</para>
				  </listitem>
				</varlistentry>
				<varlistentry>
				  <term><parameter>${ZARAFA_QUOTA_HARD_SIZE}</parameter></term>
				  <listitem>
				    <para>The quota hard limit</para>
					<para>Note: The size unit (KB,MB) is part of the variable</para>
				  </listitem>
				</varlistentry>
			  </variablelist>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Reloading</title>
		<para>The following options are reloadable by sending the zarafa-monitor process a HUP signal:</para>

		<variablelist>
		  <varlistentry>
			<term>log_level</term>
			<term>mailquota_resend_interval</term>
			<term>userquota_warning_template</term>
			<listitem><para></para></listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Files</title>

		<variablelist>
		  <varlistentry>
			<term><filename>/etc/zarafa/monitor.cfg</filename></term>
			<listitem>
			  <para>The Zarafa monitor configuration file.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-monitor</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Fsck manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-fsck</refentrytitle>
		<manvolnum>1</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-fsck</refname>
		<refpurpose>Start the Zarafa fsck calendar check program.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-fsck</command>
		  <arg choice="opt" rep="repeat">
			<replaceable>OPTION</replaceable>
		  </arg>
		  <arg rep="repeat"><replaceable>FILTER</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The program finds all items in the default calendar
		folder of the given user, and checks if all items are
		compatible with Microsoft Outlook. It specifically tests for
		known issues with reminders and recurrcences.</para>
	  </refsection>

	  <refsection>
		<title>Options</title>

		<para>Various options are possible. Only the --user options is
		required.</para>

		<variablelist>
		  <varlistentry>
			<term><option>--user</option></term>
			<term>
			  <option>-u</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>The name of the user to login with, and to check
			  the calendar of.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--pass</option></term>
			<term>
			  <option>-p</option>
			  <replaceable>password</replaceable>
			</term>
			<listitem>
			  <para>The password of the user to login with. If this is
			  not passed, you will be prompted for the password, and
			  it will not be displayed when typed.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--prompt</option></term>
			<term>
			  <option>-P</option>
			</term>
			<listitem>
			  <para>
			  Prompt for the password of the user to login with. Overrides
			  the --pass option.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		  	<term><option>--acceptdisclaimer</option></term>
			<listitem>
			  <para>Auto accept the disclaimer so no user input is needed to 
			  accept the disclaimer. This can be used for scripts along with 
			  <parameter>--autofix </parameter>argument.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--public</option></term>
			<listitem>
			  <para>Check the public store for user given with
			  the <parameter>--user</parameter>argument.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--host</option></term>
			<term>
			  <option>-h</option>
			  <replaceable>path</replaceable>
			</term>
			<listitem>
			  <para>Connect to the Zarafa server through
			  <replaceable>path</replaceable>, e.g.
			  <filename>file:///path/to/socket</filename>. Default:
			  <filename>file:///var/run/zarafa</filename>.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--autofix</option>
			<replaceable>[yes|no]</replaceable></term>
			<listitem>
			  <para>Whether the items should immediately be fixed, and
			  not be prompted for.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--autodel</option>
			<replaceable>[yes|no]</replaceable></term>
			<listitem>
			  <para>When the item certainly is broken, and cannot be
			  fixed by the program, it may be deleted.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--checkonly</option></term>
			<listitem>
			  <para>You will only receive a report of which items are
			  probably broken. The calendar folder will not be written
			  to.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--help</option></term>
			<listitem>
			  <para>Print a help screen of all possible
			  options.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Filters</title>

		<para>At least one filter is required. A filter defines which
		kind of items are checked.</para>

		<variablelist>
		  <varlistentry>
			<term><option>--calendar</option></term>
			<listitem>
			  <para>All calendar folders in the store will be checked,
			  and only calendar items will be tried to fix if
			  needed.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--contact</option></term>
			<listitem>
			  <para>All contact folders in the store will be checked,
			  and only contact items will be tried to fix if
			  needed.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--task</option></term>
			<listitem>
			  <para>All task folders in the store will be checked,
			  and only task items will be tried to fix if
			  needed.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--all</option></term>
			<listitem>
			  <para>All filters listed above will be checked.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa</refentrytitle>
			<manvolnum>7</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Backup manual page (5.10 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-backup</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-backup</refname>
		<refpurpose>The Zarafa Backup tool</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-backup</command>
		  <arg rep="repeat"><replaceable>OPTION</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The zarafa-backup tool creates a backup of a store. The
		data of emails, calendar items, contacts, etc. are stored in a
		binary file. You can use the zarafa-restore tool to retrieve
		backed up items.</para>

		<para>Some items are not backed up, like the rules created by
		the user, specific view information, selected sorting, etc.
		</para>

		<para>Therefore, this backup tool cannot be used as a disaster
		recovery method. Please refer to the 'Zarafa Backup &amp;
		Performance' documentation on the Zarafa site for common
		available backup methods.
		</para>

		<para>The backup tool currently automatically detects if a
		full backup or an incremental backup is possible. This may
		change in the future.
		</para>
	  </refsection>

	  <refsection>
		<title>Index file layout</title>
		<para>The backup tool will create 2 files for each store that
		is backed up. username.data.zbk will contain the data of the
		store. username.index.zbk is an text index of data data
		file. The file contains a number of fields per line, separated
		by a colon. The first field is either 'R' (root), 'C'
		(container) or 'M' (message). The Root line contains 4 fields:
		<variablelist>
		  <varlistentry>
			<term>1st field: marker</term>
			<listitem>
			  <para>R: Root marker</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>2nd field: unique id length</term>
			<listitem>
			  <para>[0-9]+: number of characters in following
			  id</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>3rd field: unique id</term>
			<listitem>
			  <para>The unique id of the root. This key matches the
			  parent field of containers which are directly on the
			  root level, eg. Inbox, Outbox, Calendar, etc.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>4th field: username</term>
			<listitem>
			  <para>The name of the user of the backup.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
		</para>
		<para>A container line contains 11 fields:
		<variablelist>
		  <varlistentry>
			<term>1st field: marker</term>
			<listitem>
			  <para>C: Container marker</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>2nd field: unique parent id length</term>
			<listitem>
			  <para>[0-9]+: number of characters in following
			  id</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>3rd field: unique parent id</term>
			<listitem>
			  <para>The unique id of the parent of this
			  container. This key matches the id field of the parent
			  container.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>4th field: unique id length</term>
			<listitem>
			  <para>[0-9]+: number of characters in following
			  id</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>5th field: unique id</term>
			<listitem>
			  <para>The unique id of this container. Other containers
			  and messages may have this id in their parent id
			  field.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>6th field: record key length</term>
			<listitem>
			  <para>The length of the record key in the next
			  field.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>7th field: record key</term>
			<listitem>
			  <para>The record key of the item. Use this key to
			  restore the item.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>8th field: content count</term>
			<listitem>
			  <para>The number of items in this container, excluding
			  other containers. You can use this as a hint, the
			  restore program does not use this number.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>9th field: last modification time</term>
			<listitem>
			  <para>Unix timestamp of the date the container was last
			  modified.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>10th field: type of container</term>
			<listitem>
			  <para>This is the type of the container. Eg: IPF.Note
			  for a mail folder, IPF.Appointment for a calendar folder.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>11th field: container name</term>
			<listitem>
			  <para>The name of the container when it was
			  backed up. The restored folder will have this name. As an
			  exception of the separator, this field can contain a
			  colon.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
		</para>
		<para>A message line contains 9 fields:
		<variablelist>
		  <varlistentry>
			<term>1st field: marker</term>
			<listitem>
			  <para>M: Message marker</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>2nd field: unique parent id length</term>
			<listitem>
			  <para>[0-9]+: number of characters in following
			  id</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>3rd field: unique parent id</term>
			<listitem>
			  <para>The unique id of the message. This key matches the
			  id field of the parent container.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>4th field: record key length</term>
			<listitem>
			  <para>The length of the record key in the next
			  field.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>5th field: record key</term>
			<listitem>
			  <para>The record key of the item. Use this key to
			  restore the item.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>6th field: last modification time</term>
			<listitem>
			  <para>Unix timestamp of the date the message was last
			  modified.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>7th field: type of message</term>
			<listitem>
			  <para>This is the type of the message. Eg: IPM.Note
			  for an email, IPM.Appointment for a calendar item.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>8th field: offset in the data file</term>
			<listitem>
			  <para>The restore tool needs to know where the item
			  begins in the data file. This offset is the startpoint
			  in the datafile.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term>9th field: subject of the message</term>
			<listitem>
			  <para>This is a description of the message. You can use
			  this to find items you want to restore.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
		</para>
	  </refsection>

	  <refsection>
		<title>Options</title>
		<para>The options used to backup are as follows:</para>

		<variablelist>
		  <varlistentry>
			<term><option>--user</option></term>
			<term>
			  <option>-u</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Backup the store of one user.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--public</option></term>
			<term>
			  <option>-p</option>
			</term>
			<listitem>
			  <para>Backup the public store. The file names will be
			  Public.data.zbk and Public.index.zbk.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--all</option></term>
			<term>
			  <option>-a</option>
			</term>
			<listitem>
			  <para>Backup the store of all users, including the public store.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--company</option></term>
			<term>
			  <option>-s</option>
			  <replaceable>tenant</replaceable>
			</term>
			<listitem>
			  <para>Backup all users and public store of specific tenant.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--company-public</option></term>
			<term>
			  <option>-P</option>
			  <replaceable>companyname</replaceable>
			</term>
			<listitem>
			  <para>Backup the public store for a specific tenant. The file names will be
			  named after the tenant.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--store</option></term>
			<term>
			  <option>-i</option>
			  <replaceable>storeguid</replaceable>
			</term>
			<listitem>
			  <para>Backup store with the specified store guid. This can be used
			  to backup orphaned stores. Use <replaceable>zarafa-admin
			  --list-orphans</replaceable> to get a list of orphaned stores and
			  their guids.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--output</option></term>
			<term>
			  <option>-o</option>
			  <replaceable>path</replaceable>
			</term>
			<listitem>
			  <para>Store backup files in specified output directory.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--skip-junk</option></term>
			<term>
			  <option>-J</option>
			</term>
			<listitem>
			  <para>Do not backup the junkmail folder. Since this
			  folder is likely to contain only spam, this folder is
			  skipable.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--skip-public</option></term>
			<term>
			  <option>-N</option>
			</term>
			<listitem>
			  <para>Do not backup the public store. This can be
			  useful with -a or -s &lt;company&gt; options.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--host</option></term>
			<term>
			  <option>-h</option>
			  <replaceable>path</replaceable>
			</term>
			<listitem>
			  <para>Connect to the Zarafa server through
			  <replaceable>path</replaceable>, e.g.
			  <filename>file:///path/to/socket</filename>. Default:
			  <filename>file:///var/run/zarafa</filename>.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--config</option></term>
			<term>
			  <option>-c</option>
			  <replaceable>file</replaceable>
			</term>
			<listitem>
			  <para>Use a configuration file. See the
			  <citerefentry><refentrytitle>CONFIG</refentrytitle></citerefentry>
			  section for more information.</para>
			  <para>Default: <replaceable>/etc/zarafa/backup.cfg</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--threads</option></term>
			<term>
			  <option>-t</option>
			  <replaceable>N</replaceable>
			</term>
			<listitem>
			  <para>Use multiple threads during the backup of multiple
			  stores. Depending on the number of CPUs and disks you
			  have, you can increase this number to a sensible value
			  for your setup. All users within a company space will be
			  backedup simultaneously. On a non-hosted environment,
			  this means all users in the setup.</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--verbose</option></term>
			<term>
			  <option>-v</option>
			</term>
			<listitem>
			  <para>Print more output during the backup. Prints every folder with item count.</para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Examples</title>

		<para>Backup one user:</para>
		<para><command>zarafa-backup</command> <option>-u</option>
		<replaceable>loginname</replaceable></para>
	  </refsection>

	  <refsection>
		<title>Config</title>

		<para>Normally, no configuration file is used or required. The
		following options can be set in the configuation file:</para>

		<variablelist>
		  <varlistentry>
			<term><option>server_socket</option></term>
			<listitem>
			  <para>Unix socket to find the connection to the Zarafa
			  server.</para>
			  <para>Default:
			  <parameter>file:///var/run/zarafa</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_file</option></term>
			<listitem>
			  <para>Use this file as key to logon to the server. This
			  is only used when server_socket is set to an HTTPS
			  transport. See the
			  <citerefentry>
				<refentrytitle>zarafa-server</refentrytitle>
				<manvolnum>8</manvolnum>
			  </citerefentry>
			  manual page on how to setup SSL keys.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_pass</option></term>
			<listitem>
			  <para>The password of the SSL key file that is set in
			  sslkey_file.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-restore</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Restore manual page (5.10 ready)
  -+-+-
-->

	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-restore</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-restore</refname>
		<refpurpose>The Zarafa Restore tool</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-restore</command>
		  <arg rep="repeat"><replaceable>OPTION</replaceable></arg>
		  <arg rep="repeat"><replaceable>RECORDKEY</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The zarafa-restore tool restores data from a backup that
		was created by the zarafa-backup tool. You can search in the
		index file for the items or folders you wish to
		restore.</para>

		<para>Remember the record key, and save it in a file, one per
		line. The record key for containers can be found in the 7th
		field, for messages in the 5th field. The numbers can also be
		passed as command parameters. Please refer to the
		<citerefentry><refentrytitle>zarafa-backup</refentrytitle>
		<manvolnum>8</manvolnum></citerefentry> manual to view the
		index file layout.</para>
	  </refsection>

	  <refsection>
		<title>Options</title>
		<para>The options used to restore are as follows:</para>

		<variablelist>
		  <varlistentry>
			<term><option>--user</option></term>
			<term>
			  <option>-u</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Restore to this Zarafa user. If the
			  <option>--from</option> is not passed, this will also be
			  used as the backup set name to restore from.</para>
	  		  <para>In a single-tenancy environment this option is
			  mandatory when not restoring from the public store. For
			  restoring a multi-tenancy public store, <parameter>--user</parameter>
			  must be used in combination with the name of the tenant.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--from</option></term>
			<term>
			  <option>-f</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Restore from this backup set. This overrides the
			  default backup set name if you want to restore from
			  another name than to restore to.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--public</option></term>
			<term>
			  <option>-p</option>
			</term>
			<listitem>
			  <para>Restore to the public store. This option is only
			  for non multi-tenancy Zarafa servers. If you've enabled
			  the enable_hosted_zarafa option in your server, you can
			  restore public data by using the
			  <parameter>--user</parameter> switch with the name
			  of the tenant which you wish to restore.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--restorefile</option></term>
			<term>
			  <option>-i</option>
			  <replaceable>filename</replaceable>
			</term>
			<listitem>
			  <para>Use this file as input for the record keys. Each
			  recordkey should be on its own line. Use '-' as
			  filename when the record keys are to be read from
			  stdin.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--recurse</option></term>
			<term>
			  <option>-r</option>
			</term>
			<listitem>
			  <para>When you restore a folder, the folder with its
			  contents will be restored. If you add this option, also
			  the subfolders of the given folder are restored.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--host</option></term>
			<term>
			  <option>-h</option>
			  <replaceable>path</replaceable>
			</term>
			<listitem>
			  <para>Connect to the Zarafa server through
			  <replaceable>path</replaceable>, e.g.
			  <filename>file:///path/to/socket</filename>. Default:
			  <filename>file:///var/run/zarafa</filename>.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--config</option></term>
			<term>
			  <option>-c</option>
			  <replaceable>file</replaceable>
			</term>
			<listitem>
			  <para>Use a configuration file. See the
			  <citerefentry><refentrytitle>CONFIG</refentrytitle></citerefentry>
			  section for more information.</para>
			  <para>Default: <replaceable>/etc/zarafa/backup.cfg</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--verbose</option></term>
			<term>
			  <option>-v</option>
			</term>
			<listitem>
			  <para>Print more about which folder is being restored.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--not-before</option></term>
			<term>
			  <option>-b</option>
			  <replaceable>day-month-year</replaceable>
			</term>
			<listitem>
			  <para>When an item was created before this date, it will
			  not be restored. The date is passed in the specified
			  format, with the '-' signs aswell.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--not-after</option></term>
			<term>
			  <option>-a</option>
			  <replaceable>day-month-year</replaceable>
			</term>
			<listitem>
			  <para>When an item was created after this date, it will
			  not be restored. The date is passed in the specified
			  format, with the '-' signs aswell.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Examples</title>
		<para>Some helper and example scripts can be found in
		/usr/share/zarafa/zarafa-backup-helpers. The full-restore.sh
		script allows you to easely restore the complete backup to a
		store. The readable-index.pl script will create a more
		readable version of an index file, and print it to the screen.
		</para>

		<para>Restore one message from user jane to user john:</para>
		<para>
		  <command>zarafa-restore</command>
		  <option>-u</option> <replaceable>john</replaceable>
		  <option>-f</option> <replaceable>jane</replaceable>
		  <option><replaceable>10203040</replaceable></option>
		</para>

		<para>Restore Inbox and all subfolders from user jane:</para>
		<para>
		  <command>zarafa-restore</command>
		  <option>-u</option> <replaceable>jane</replaceable>
		  <option>-r</option>
		  <option>`grep ^C jane.index.zbk | grep Inbox | cut -d: -f7`</option>
		</para>
	  </refsection>

	  <refsection>
		<title>Config</title>

		<para>Normally, no configuration file is used or required. The
		following options can be set in the configuation file:</para>

		<variablelist>
		  <varlistentry>
			<term><option>server_socket</option></term>
			<listitem>
			  <para>Unix socket to find the connection to the Zarafa
			  server.</para>
			  <para>Default:
			  <parameter>file:///var/run/zarafa</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_file</option></term>
			<listitem>
			  <para>Use this file as key to logon to the server. This
			  is only used when server_socket is set to an HTTPS
			  transport. See the
			  <citerefentry>
				<refentrytitle>zarafa-server</refentrytitle>
				<manvolnum>8</manvolnum>
			  </citerefentry>
			  manual page on how to setup SSL keys.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_pass</option></term>
			<listitem>
			  <para>The password of the SSL key file that is set in
			  sslkey_file.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-backup</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa ICal manual page (5.10 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-ical</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-ical</refname>
		<refpurpose>Start the Zarafa ICal/CalDAV gateway.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-ical</command>
		  <arg choice="opt" rep="repeat">
			<replaceable>OPTION</replaceable>
		  </arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The iCal/CalDAV gateway enables users to retrieve their
		calendar using iCalendar compliant clients. The iCal/CalDAV
		gateway can be configured to listen for HTTP and HTTPS
		requests.</para>

		<para>The default settings of the gateway program are defined
		in <citerefentry>
		<refentrytitle>zarafa-ical.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
		</citerefentry>.
		</para>
	  </refsection>

	  <refsection>
		<title>Options</title>

		<para>Various options are possible. None of these options are
		required.</para>

		<para>
		  <variablelist>
			<varlistentry>
			  <term><option>--config</option></term>
			  <term>
				<option>-c</option>
				<replaceable>ical.cfg</replaceable>
			  </term>
			  <listitem>
				<para>Specify the location of the ical.cfg file. If
				the ical.cfg file is not specified, the gateway will
				continue using its default settings.</para>
				<para>Default: <replaceable>/etc/zarafa/ical.cfg</replaceable></para>
			  </listitem>
			</varlistentry>

			<varlistentry>
			  <term><option>--help</option></term>
			  <term>
				<option>-h</option>
			  </term>
			  <listitem>
				<para>Shows the help message of the iCal/CalDAV gateway.
				</para>
			  </listitem>
			</varlistentry>

		  <varlistentry>
			<term><option>--foreground</option></term>
			<term>
			  <option>-F</option>
			</term>
			<listitem>
			  <para>Run in the foreground. Normally the gateway
			  will daemonize and run in the background.</para>
			</listitem>
	  	  </varlistentry>
		  </variablelist>
		</para>
	  </refsection>

	  <refsection>
		<title>Signals</title>
		<para>The following signals can be sent to the zarafa-ical
		process:</para>
		<variablelist>
		  <varlistentry>
			<term><option>HUP</option></term>
			<listitem>
			  <para>When the HUP signal is received, some options from
			  the configuration file are reloaded. The reloadable
			  options are listed in the
			  <citerefentry><refentrytitle>zarafa-ical.cfg</refentrytitle>
			  <manvolnum>5</manvolnum></citerefentry> manual page.</para>
			  <para>Also, when using <replaceable>log_method =
			  file</replaceable>, the logfile will be closed and a new
			  logfile will be opened. You can use this signal in your
			  logrotate system.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term><option>TERM</option></term>
			<listitem>
			  <para>To gracefully let the service exit, the normal TERM
			  signal is used.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Usage</title>

		<para>To start the iCal/CalDAV gateway:</para>

		<para><command>zarafa-ical</command></para>

		<para>The iCal/CalDAV gateway process will keep running. You may also use
		the init.d scripts:</para>

		<para><command>/etc/init.d/zarafa-ical</command>
		[<replaceable>start</replaceable>|
		<replaceable>stop</replaceable>|
		<replaceable>restart</replaceable>]</para>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-ical.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-server</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa iCal Gateway Configuration file manual page (5.10 ready)
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-ical.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-ical.cfg</refname>
		<refpurpose>The Zarafa iCal/CalDAV gateway configuration file</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>ical.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>ical.cfg</filename> is a configuration
		file for the Zarafa iCal/CalDAV Gateway. <filename>ical.cfg</filename>
		contains instructions for the software to set up the logging
		system and to enable or disable the normal or SSL part of the service.
		</para>
	  </refsection>

	  <refsection>
		<title>File format</title>

		<para>The file consists of one big section, but parameters can be
		grouped by functionality.</para>

		<para>The parameters are written in the form:</para>

		<para><option>name</option> = <replaceable>value</replaceable></para>

		<para>The file is line-based. Each newline-terminated line
		represents either a comment, nothing, a parameter or a directive.
		A line beginning with `#' is considered a comment, and will be
		ignored	by Zarafa. Parameter names are case sensitive. Lines
		beginning with `!' are directives.</para>

		<para>Directives are written in the form:</para>

		<para>!<option>directive</option> <replaceable>[argument(s)]
		</replaceable></para>

		<para>The following directives exist:</para>
		<variablelist>
		  <varlistentry>
		    <term><option>include</option></term>
		    <listitem>
		      <para>Include and process <replaceable>argument</replaceable>
		      </para>
		      <para>Example: !include common.cfg</para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of each parameter</title>

		<variablelist>
		  <varlistentry>
			<term><option>server_bind</option></term>
			<listitem>
			  <para>IP address to bind to. 0.0.0.0 for any address.</para>
			  <para>Default: <replaceable>0.0.0.0</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ical_enable</option></term>
			<listitem>
			  <para>Enable iCal/CalDAV service with value yes.
			  All other values disable the service.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ical_port</option></term>
			<listitem>
			  <para>The iCal/CalDAV service will listen on this port for
			  incoming connections.</para>
			  <para>Default: <replaceable>8080</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>icals_enable</option></term>
			<listitem>
			  <para>Enable SSL iCal/CalDAV service with value yes.
			  All other values disable the service.</para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>icals_port</option></term>
			<listitem>
			  <para>The SSL iCal/CalDAV service will listen on this port for
			  incoming connections.</para>
			  <para>Default: <replaceable>8443</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_socket</option></term>
			<listitem>
			  <para>The http address of the Zarafa server.</para>
			  <para>Default:
			  <replaceable>http://localhost:236/zarafa</replaceable>
			  </para>
			  <para>It is not advised to specify the UNIX socket
			  here, but the http address instead. In default
			  configuration the gateway will then be trusted by the
			  Zarafa server (as set in its local_admin_users
		 	  configuration setting). Unless is run as an untrusted
			  user, by specifying the <option>run_as_user</option>,
			  the gateway always authenticates users even if they
			  provide no or wrong credentials!</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_user</option></term>
			<listitem>
			  <para>After correctly starting, the iCal/CalDAV gateway process will
			  become this user, dropping root privileges. Note that
			  the log file needs to be writeable by this user, and the
			  directory too to create new logfiles after
			  logrotation. This can also be achieved by setting the
			  correct group and permissions.
			  </para>
			  <para>Default value is empty, not changing the user
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term><option>run_as_group</option></term>
			<listitem>
			  <para>After correctly starting, the iCal/CalDAV gateway process will
			  become this group, dropping root privileges.
			  </para>
			  <para>Default value is empty, not changing the group
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pid_file</option></term>
			<listitem>
			  <para>Write the process ID number to this file. This is
			  used by the init.d script to correctly stop/restart the
			  service.
			  </para>
			  <para>Default:
			  <replaceable>/var/run/zarafa-ical.pid</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>running_path</option></term>
			<listitem>
			  <para>Change directory to this path when running in
			  daemonize mode. When using the -F switch to run in the
			  foreground the directory will not be changed.
			  </para>
			  <para>Default:
			  <replaceable>/</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>process_model</option></term>
			<listitem>
			  <para>You can change the process model between
			  <replaceable>fork</replaceable> and
			  <replaceable>thread</replaceable>. The forked model uses
			  somewhat more resources, but if a crash is triggered,
			  this will only affect one user. In the threaded model, a
			  crash means all users are affected, and will not be able
			  to use the service.
			  </para>
			  <para>Default:
			  <replaceable>fork</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_private_key_file</option></term>
			<listitem>
			  <para>The iCal/CalDAV gateway will use this file as private
			  key for SSL TLS. This file can be created with:
			  <command>openssl genrsa -out /etc/zarafa/ical/privkey.pem 2048</command>.</para>
			  <para>Default:
			  <replaceable>/etc/zarafa/ical/privkey.pem</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_certificate_file</option></term>
			<listitem>
			  <para>The iCal/CalDAV gateway will use this file as
			  certificate for SSL TLS. A self-signed certificate
			  can be created with: <command>openssl req -new -x509
			  -key /etc/zarafa/ical/privkey.pem -out /etc/zarafa/ical/cert.pem
			  -days 1095</command>.</para>
			  <para>Default:
			  <replaceable>/etc/zarafa/ical/cert.pem</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_verify_client</option></term>
			<listitem>
			  <para>Enable client certificate verification with value
			  yes. All other values disable the verification.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_verify_file</option></term>
			<listitem>
			  <para>The file to verify the clients certificates
			  with.</para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_verify_path</option></term>
			<listitem>
			  <para>The path with the files to verify the clients
			  certificates with.</para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_protocols</option></term>
			<listitem>
			  <para>Disabled or enabled protocol names. Supported protocol names
			  are <replaceable>SSLv2</replaceable>, <replaceable>SSLv3</replaceable>
			  and <replaceable>TLSv1</replaceable>. If Zarafa was linked against
			  OpenSSL 1.0.1 or later there is additional support for the new protocols
			  <replaceable>TLSv1.1</replaceable> and <replaceable>TLSv1.2</replaceable>.
			  To exclude both, SSLv2 and SSLv3 set <option>ssl_protocols</option>
			  to <replaceable>!SSLv2 !SSLv3</replaceable>. SSLv2 is considered unsafe
			  and these connections should not be accepted.</para>
			  <para>Default: <replaceable>!SSLv2</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_ciphers</option></term>
			<listitem>
			  <para>SSL ciphers to use, set to <replaceable>ALL</replaceable> for backward compatibility.</para>
			  <para>Default: <replaceable>ALL:!LOW:!SSLv2:!EXP:!aNULL</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_prefer_server_ciphers</option></term>
			<listitem>
			  <para>Prefer the server's order of SSL ciphers over client's.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_method</option></term>
			<listitem>
			  <para>The method which should be used for logging. Valid
			  values are:</para>

			  <variablelist>
				<varlistentry>
				  <term><replaceable>syslog</replaceable></term>
				  <listitem>
					<para>Use the Linux system log. All messages will
					be written to the mail facility. See also <citerefentry>
					<refentrytitle>syslog.conf</refentrytitle>
					<manvolnum>5</manvolnum></citerefentry>.</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><replaceable>file</replaceable></term>
				  <listitem>
					<para>Log to a file. The filename will be
					specified in <option>log_file</option>.</para>
				  </listitem>
				</varlistentry>
			  </variablelist>

			  <para>Default: <replaceable>file</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_file</option></term>
			<listitem>
			  <para>When logging to a file, specify the filename in
			  this parameter. Use <replaceable>-</replaceable> (minus
			  sign) for stderr output.</para>
			  <para>Default: <replaceable>/var/log/zarafa/ical.log</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_level</option></term>
			<listitem>
			  <para>The level of output for logging in the range from
			  0 to 5. 0=no logging, 5=full logging.</para>
			  <para>Default: <replaceable>2</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_timestamp</option></term>
			<listitem>
			  <para>Specify whether to prefix each log line with a
			  timestamp in 'file' logging mode.</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_buffer_size</option></term>
			<listitem>
			  <para>Buffer logging in what sized blocks.
                              Bigger buffers is better for the performance but it gives lag
                              when running e.g. multitail or 'tail -f' on the log-file. If
                              you want to directly see what is happing, set this to e.g. 1.
                              So when debugging: make it a small value, else set it to
                              4096 or more.</para>
			  <para>Default: <replaceable>4096</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>enable_ical_get</option></term>
		    <listitem>
		      <para>Enable the ical GET method to download an entire
		      calendar. When set to 'yes', the GET method is enabled and
		      allowed. If not, then calendars can only be retrieved with the
		      CalDAV PROPFIND method, which is much more efficient. This
		      option allows you to force the use of CalDAV which lowers load
		      on your server.
		      </para>
		    </listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Reloading</title>
		<para>The following options are reloadable by sending the zarafa-ical process a HUP signal:</para>

		<variablelist>
		  <varlistentry>
			<term>log_level</term>
			<listitem><para></para></listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Files</title>

		<variablelist>
		  <varlistentry>
			<term><filename>/etc/zarafa/ical.cfg</filename></term>
			<listitem>
			  <para>The Zarafa iCal/CalDAV gateway configuration file.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-ical</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>
<!--
  -+-+-
	Zarafa licensed manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-licensed</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-licensed</refname>
		<refpurpose>Start the Zarafa license server.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-licensed</command>
		  <arg choice="opt" rep="repeat">
			<replaceable>OPTION</replaceable>
		  </arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The zarafa-licensed is used for license queries from non-free
		parts of the Zarafa suite. If you wish to use any non-free part of
		Zarafa, you will need to install, configure and run the
		zarafa-licensed server.
		</para>

		<para>The default settings of the zarafa-licensed program are defined
		in <citerefentry>
		<refentrytitle>zarafa-licensed.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
		</citerefentry>.
		</para>
	  </refsection>

	  <refsection>
		<title>Options</title>

		<para>Various options are possible. None of these options are
		required.</para>

		<para>
		  <variablelist>
			<varlistentry>
			  <term><option>--config</option></term>
			  <term>
				<option>-c</option>
				<replaceable>licensed.cfg</replaceable>
			  </term>
			  <listitem>
				<para>Specify the location of the licensed.cfg file. If
				the licensed.cfg file is not specified, the license server
				will continue using its default settings.</para>
				<para>Default: <replaceable>/etc/zarafa/licensed.cfg</replaceable></para>
			  </listitem>
			</varlistentry>

			<varlistentry>
			  <term><option>--help</option></term>
			  <term>
				<option>-h</option>
			  </term>
			  <listitem>
				<para>Shows the help message of the license server.
				</para>
			  </listitem>
			</varlistentry>

		  <varlistentry>
			<term><option>--foreground</option></term>
			<term>
			  <option>-F</option>
			</term>
			<listitem>
			  <para>Run in the foreground. Normally the license server
			  will daemonize and run in the background.</para>
			</listitem>
		  </varlistentry>
		  </variablelist>
		</para>
	  </refsection>

	  <refsection>
		<title>Signals</title>
		<para>The following signals can be sent to the zarafa-license
		process:</para>
		<variablelist>
		  <varlistentry>
			<term><option>HUP</option></term>
			<listitem>
			  <para>When the HUP signal is received, some options from
			  the configuration file are reloaded. The reloadable
			  options are listed in the
			  <citerefentry><refentrytitle>zarafa-licensed.cfg</refentrytitle>
			  <manvolnum>5</manvolnum></citerefentry> manual page.</para>
			  <para>Also, when using <replaceable>log_method =
			  file</replaceable>, the logfile will be closed and a new
			  logfile will be opened. You can use this signal in your
			  logrotate system.</para>
			</listitem>
		  </varlistentry>
		  <varlistentry>
			<term><option>TERM</option></term>
			<listitem>
			  <para>To gracefully let the service exit, the normal TERM
			  signal is used.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Usage</title>

		<para>To start the license server:</para>

		<para><command>zarafa-licensed</command></para>

		<para>The zarafa-licensed process will keep running. You may also use
		the init.d scripts:</para>

		<para><command>/etc/init.d/zarafa-licensed</command>
		[<replaceable>start</replaceable>|
		<replaceable>stop</replaceable>|
		<replaceable>restart</replaceable>]</para>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-licensed.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-server</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>
<!--
  -+-+-
	Zarafa license server configuration file
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-licensed.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-licensed.cfg</refname>
		<refpurpose>The Zarafa licensed configuration file</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>licensed.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>licensed.cfg</filename> is a configuration
		file for the Zarafa license server. <filename>licensed.cfg</filename>
		contains instructions for the software to set up the logging system
		and the licensing part of Zarafa.
		</para>
	  </refsection>

	  <refsection>
		<title>File format</title>

		<para>The file consists of one big section, but parameters can
		be grouped by functionality. The types of parameters are:
		server and log.</para>

		<para>The parameters are written in the form</para>

		<para>
		  <parameter>name</parameter> =
		  <option>value</option>
		</para>

		<para>The file is line-based - that is, each
		newline-terminated line represents either a comment, nothing
		or a parameter.</para>

		<para>A line beginning with # is considered a comment, and
		will be ignored by Zarafa.</para>

		<para>Parameter names are case sensitive.</para>
	  </refsection>

	  <refsection>
		<title>Explanation of each parameter</title>

		<variablelist>
		  <varlistentry>
			<term><option>server_pipe_name</option></term>
			<listitem>
			  <para>Unix socket to listen on.</para>
			  <para>Default:
			  <replaceable>/var/run/zarafa-licensed</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_socket</option></term>
			<listitem>
			  <para>Unix socket to find the connection to the Zarafa
			  server.</para>
			  <para>Default:
			  <parameter>file:///var/run/zarafa</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
				<term><option>sslkey_file</option></term>
				<listitem>
				  <para>Use this file as key to logon to the server. This
				  is only used when server_socket is set to an HTTPS
				  transport. See the
				  <citerefentry>
						<refentrytitle>zarafa-server</refentrytitle>
						<manvolnum>8</manvolnum>
				  </citerefentry>
				  manual page on how to setup SSL keys.
				  </para>
				  <para>Default: value not set.</para>
				</listitem>
		  </varlistentry>

		  <varlistentry>
				<term><option>sslkey_pass</option></term>
				<listitem>
				  <para>The password of the SSL key file that is set in
				  sslkey_file.
				  </para>
				  <para>Default: value not set.</para>
				</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>license_path</option></term>
			<listitem>
			  <para>The path to the license directory. This directory
			  should contain a file named <filename>base</filename>
			  with the serial number. All other files in this
			  directory can contain a CALs (Client Access License),
			  one per file.</para>
			  <para>Default:
			  <replaceable>/etc/zarafa/license</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_user</option></term>
			<listitem>
			  <para>After correctly starting, the server process will
			  become this user, dropping root privileges. Note that
			  the log file needs to be writeable by this user, and the
			  directory too to create new logfiles after
			  logrotation. This can also be achieved by setting the
			  correct group and permissions.
			  </para>
			  <para>Default value is empty, not changing the user
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_group</option></term>
			<listitem>
			  <para>After correctly starting, the server process will
			  become this group, dropping root privileges.
			  </para>
			  <para>Default value is empty, not changing the group
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pid_file</option></term>
			<listitem>
			  <para>Write the process ID number to this file. This is
			  used by the init.d script to correctly stop/restart the
			  service.
			  </para>
			  <para>Default:
			  <replaceable>/var/run/zarafa-licensed.pid</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>running_path</option></term>
			<listitem>
			  <para>Change directory to this path when running in
			  daemonize mode. When using the -F switch to run in the
			  foreground the directory will not be changed.
			  </para>
			  <para>Default:
			  <replaceable>/</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_method</option></term>
			<listitem>
			  <para>The method which should be used for logging. Valid
			  values are:</para>

			  <variablelist>
				<varlistentry>
				  <term><replaceable>syslog</replaceable></term>
				  <listitem>
					<para>Use the Linux system log. All messages will
					be written to the mail facility. See also <citerefentry>
					<refentrytitle>syslog.conf</refentrytitle>
					<manvolnum>5</manvolnum>
					</citerefentry>.</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><replaceable>file</replaceable></term>
				  <listitem>
					<para>Log to a file. The filename will be
					specified in <option>log_file</option>.</para>
				  </listitem>
				</varlistentry>
			  </variablelist>

			  <para>Default: <replaceable>file</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_file</option></term>
			<listitem>
			  <para>When logging to a file, specify the filename in
			  this parameter. Use <replaceable>-</replaceable> (minus
			  sign) for stderr output.</para>
			  <para>Default: <replaceable>/var/log/zarafa/licensed.log</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_timestamp</option></term>
			<listitem>
			  <para>Specify whether to prefix each log line with a
			  timestamp in 'file' logging mode.</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_buffer_size</option></term>
			<listitem>
			  <para>Buffer logging in what sized blocks.
                              Bigger buffers is better for the performance but it gives lag
                              when running e.g. multitail or 'tail -f' on the log-file. If
                              you want to directly see what is happing, set this to e.g. 1.
                              So when debugging: make it a small value, else set it to
                              4096 or more.</para>
			  <para>Default: <replaceable>4096</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_level</option></term>
			<listitem>
			  <para>The level of output for logging in the range from
			  0 to 5. 0 means no logging, 5 means full logging.</para>
			  <para>Default: <replaceable>2</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>report_path</option></term>
			<listitem>
			  <para>The path to a directory where to store the report
			  logging. Report logging is only enabled if you have a
			  report-based license from Zarafa.</para>
			  <para>Default: <replaceable>/var/lib/zarafa/report</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>report_ca</option></term>
			<listitem>
			  <para>The path to a directory containing the SSL CA
			information for zarafa-report. This is needed for secure upload
			of your license information if your license requires this.</para>
			  <para>Default: <replaceable>/etc/zarafa/report-ca</replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Reloading</title>
		<para>The following options are reloadable by sending the
		zarafa-licensed process a HUP signal:</para>

		<variablelist>
		  <varlistentry>
			<term>log_level</term>
			<listitem><para></para></listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Files</title>

		<variablelist>
		  <varlistentry>
			<term><filename>/etc/zarafa/licensed.cfg</filename></term>
			<listitem>
			  <para>The Zarafa license server configuration file.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-licensed</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>
<!--
  -+-+-
	Zarafa backup / restore configuration file
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-backup.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-backup.cfg</refname>
		<refpurpose>The Zarafa backup and restore configuration file</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>backup.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>backup.cfg</filename> is a configuration
		file for the Zarafa backup and restore tools. <filename>backup.cfg</filename>
		contains instructions for the software to set up the
		connection to Zarafa and backup parameters.
		</para>
	  </refsection>

	  <refsection>
		<title>File format</title>

		<para>The file consists of one big section, but parameters can
		be grouped by functionality. The types of parameters are:
		server and log.</para>

		<para>The parameters are written in the form</para>

		<para>
		  <parameter>name</parameter> =
		  <option>value</option>
		</para>

		<para>The file is line-based - that is, each
		newline-terminated line represents either a comment, nothing
		or a parameter.</para>

		<para>A line beginning with # is considered a comment, and
		will be ignored by Zarafa.</para>

		<para>Parameter names are case sensitive.</para>
	  </refsection>

	  <refsection>
		<title>Explanation of each parameter</title>

		<variablelist>
		  <varlistentry>
			<term><option>server_socket</option></term>
			<listitem>
			  <para>Unix socket to find the connection to the Zarafa
			  server.</para>
			  <para>Default:
			  <parameter>file:///var/run/zarafa</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
				<term><option>sslkey_file</option></term>
				<listitem>
				  <para>Use this file as key to logon to the server. This
				  is only used when server_socket is set to an HTTPS
				  transport. See the
				  <citerefentry>
						<refentrytitle>zarafa-server</refentrytitle>
						<manvolnum>8</manvolnum>
				  </citerefentry>
				  manual page on how to setup SSL keys.
				  </para>
				  <para>Default: value not set.</para>
				</listitem>
		  </varlistentry>

		  <varlistentry>
				<term><option>sslkey_pass</option></term>
				<listitem>
				  <para>The password of the SSL key file that is set in
				  sslkey_file.
				  </para>
				  <para>Default: value not set.</para>
				</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>backup_servers</option></term>
			<listitem>
			  <para>Only servers in this list will be processed by the
			  backup tool. Servernames are SPACE separated. Default is
			  empty, processing all servers.</para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>threads</option></term>
			<listitem>
			  <para>Use multiple threads during the backup of multiple
			  stores. Depending on the number of CPUs and disks you
			  have, you can increase this number to a sensible value
			  for your setup. All users within a company space will be
			  backedup simultaneously. On a non-hosted environment,
			  this means all users in the setup.</para>
			  <para>This setting can be overwritten by the
			  <option>--threads</option> commandline option.</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-backup</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
  	Zarafa Report manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-report</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-report</refname>
		<refpurpose>Creates a secure connection with
		https://report.zarafa.com/ for license reports.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-report</command>
		  <arg rep="repeat"><replaceable>OPTION</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>In some setups, zarafa-licensed needs to report license
		usage to Zarafa. This program will send these reports using
		HTTPS. This program will be automatically started by the
		<command>zarafa-licensed</command> daemon.
		</para>
	  </refsection>

	  <refsection>
		<title>Options</title>
		<para>The Zarafa report program takes the following configuration
		options:</para>

		<variablelist>
		  <varlistentry>
			<term>
			  <option>--ca-path</option>
			  <replaceable>ca-path</replaceable>
			</term>
			<listitem>
			  <para>
				Path to directory containg CA certificates.
			  </para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Stats manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-stats</refentrytitle>
		<manvolnum>1</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-stats</refname>
		<refpurpose>Dump zarafa statistics tables.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-stats</command>
		  <arg choice="plain"><replaceable>TABLE</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>This program dumps a statistics table that the
		zarafa-server program collects. The Zarafa server must be
		running for <command>zarafa-stats</command> to work.
		</para>

		<para>If no table, or an invalid table is given, an error
		message is printed.</para>
	  </refsection>

	  <refsection>
		<title>Tables</title>
		<para>There are four tables the zarafa-stats program can
		dump:</para>

		<variablelist>
		  <varlistentry>
			<term>
			  <option>--system</option>
			</term>
			<listitem>
			  <para>Dump the system table. This table contains
			  information about connections, SQL and cache statistics.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--session</option>
			</term>
			<listitem>
			  <para>Dump the session table. This table contains
			  information about user sessions and SOAP functions.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--users</option>
			</term>
			<listitem>
			  <para>Dump the user table. This table contains
			  information about users and user settings.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--company</option>
			</term>
			<listitem>
			  <para>Dump the company table. This table contains
			  information about companies and their properties. This
			  table is only available on multi-tenancy enabled
			  servers.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--servers</option>
			</term>
			<listitem>
			  <para>Dump the servers table. This is only available in
			  multiserver mode. Each server shows access methods and
			  configured ports.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--top</option>
			</term>
			<listitem>
			  <para>Shows a top-like view of all connected clients to
			  the server, showing versions, users, programs, ip-adres,
			  cpu-usage, and other statistical information.
			  </para>
			  <para>Use 1-9 to enable/disable some columns. Use a-g to
			  sort on a column, press the same letter again to reverse
			  the sorting. Press &lt;ESC&gt; to quit the application.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--user</option></term>
			<term>
			  <option>-u</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Connect to the Zarafa server using this name in
			  stead of SYSTEM.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--host</option></term>
			<term>
			  <option>-h</option>
			  <replaceable>path</replaceable>
			</term>
			<listitem>
			  <para>Connect to the Zarafa server through
			  <replaceable>path</replaceable>, e.g.
			  <filename>file:///path/to/socket</filename>. Default:
			  <filename>file:///var/run/zarafa</filename>.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-admin</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Cfgchecker manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-cfgchecker</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-cfgchecker</refname>
		<refpurpose>Checks zarafa config files for common
		errors.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-cfgchecker</command>
		  <arg rep="repeat"><replaceable>OPTION</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>This program tests for common configuration errors for a
		given config file.</para>

		<para>If no options are given, the help message is
		printed.</para>
	  </refsection>

	  <refsection>
		<title>Options</title>
		<para>With the following options config files can be tested:</para>

		<variablelist>
		  <varlistentry>
			<term>
			  <option>-l</option>
			  <replaceable>ldap.cfg</replaceable>
			</term>
			<listitem>
			  <para>Replace <replaceable>ldap.cfg</replaceable> with
			  the actual filename to check the ldap plugin
			  configuration file.</para><para>Use the <replaceable>-c
			  yes</replaceable> and <replaceable>-d yes</replaceable>
			  options to force hosted and multi-server support on if
			  you configured your server that way.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-u</option>
			  <replaceable>unix.cfg</replaceable>
			</term>
			<listitem>
			  <para>Replace <replaceable>unix.cfg</replaceable> with
			  the actual filename to check the unix plugin
			  configuration file.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-s</option>
			  <replaceable>server.cfg</replaceable>
			</term>
			<listitem>
			  <para>Replace <replaceable>server.cfg</replaceable> with
			  the actual filename to check the server configuration
			  file.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-g</option>
			  <replaceable>gateway.cfg</replaceable>
			</term>
			<listitem>
			  <para>Replace <replaceable>gateway.cfg</replaceable>
			  with the actual filename to check the gateway
			  configuration file.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-i</option>
			  <replaceable>ical.cfg</replaceable>
			</term>
			<listitem>
			  <para>Replace <replaceable>ical.cfg</replaceable> with
			  the actual filename to check the ical configuration
			  file.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-m</option>
			  <replaceable>monitor.cfg</replaceable>
			</term>
			<listitem>
			  <para>Replace <replaceable>monitor.cfg</replaceable>
			  with the actual filename to check the monitor
			  configuration file.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-p</option>
			  <replaceable>spooler.cfg</replaceable>
			</term>
			<listitem>
			  <para>Replace <replaceable>spooler.cfg</replaceable>
			  with the actual filename to check the spooler
			  configuration file.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-a</option>
			  <replaceable>dagent.cfg</replaceable>
			</term>
			<listitem>
			  <para>Replace <replaceable>dagent.cfg</replaceable>
			  with the actual filename to check the dagent
			  configuration file.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-c</option>
			  <replaceable>[yes|no]</replaceable>
			</term>
			<listitem>
			  <para>Force multi-tenancy mode on/off. Has effect on
			  server and plugin config files.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-d</option>
			  <replaceable>[yes|no]</replaceable>
			</term>
			<listitem>
			  <para>Force multi-server mode on/off. Has effect on
			  server and plugin config files.</para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa</refentrytitle>
			<manvolnum>7</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa search manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-search</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-search</refname>
		<refpurpose>Zarafa Indexed Search Service.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-search</command>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The zarafa-search daemon is used to index all messages
		for all users in the zarafa-server. Indexing messages greatly
		enhances the search performance of the zarafa-server.
		</para>

		<para>After starting, the search daemon will continuously update the
		store index files and will keep listening for connections on
		the configured TCP port and/or Unix socket for search requests
		from the <citerefentry>
	    <refentrytitle>zarafa-server</refentrytitle><manvolnum>8</manvolnum>
		</citerefentry>.</para>
	  </refsection>

	  <refsection>
		<title>Options</title>
		<para>The Zarafa search program takes the following configuration
		options:</para>

		<variablelist>
		  <varlistentry>
			<term><option>--config</option></term>
			<term>
			  <option>-c</option>
			  <replaceable>file</replaceable>
			</term>
			<listitem>
			  <para>Specify the location of the configuration
			  file.</para>
			  <para>Default: <replaceable>/etc/zarafa/search.cfg</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--foreground</option></term>
			<term>
			  <option>-F</option>
			</term>
			<listitem>
			  <para>Run in the foreground. Normally the zarafa-search process
			  will daemonize and run in the background.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--server-socket</option></term>
			<term>
			  <option>-s</option>
			  <replaceable>path</replaceable>
			</term>
			<listitem>
			  <para>Connect to the Zarafa server through
			  <replaceable>path</replaceable>, e.g.
			  <filename>file:///path/to/socket</filename>. Default:
			  <filename>file:///var/run/zarafa</filename>.</para>
			</listitem>
		  </varlistentry>

	      <varlistentry>
		    <term>
			  <option>--reindex</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
				<para>Remove the current index of the given user and
				start to make a new index immediately.</para>
				<para>The zarafa-search daemon must already be running
				on the same machine.</para>
            </listitem>
		  </varlistentry>

		</variablelist>

		<para>
		  When invoked with no options, the zarafa-search daemon will search for a
		  configuration file in
		  <filename>/etc/zarafa/search.cfg</filename>. If no
		  configuration file is found, default values are used. See
		  <citerefentry><refentrytitle>zarafa-search.cfg</refentrytitle>
		<manvolnum>5</manvolnum></citerefentry> for all
		configuration options and their default values.</para>
	  </refsection>

	  <refsection>
		<title>Usage</title>
		<para>Starting the zarafa-search daemon with an alternative configuration:</para>
		<para>
		  <command>zarafa-search</command>&nbsp; 
		  <option>-c</option>&nbsp;
		  <replaceable>/path/to/search.cfg</replaceable>
		</para>

		<para>You may also use the init.d scripts:</para>
		<para><command>/etc/init.d/zarafa-search</command>
		[<replaceable>start</replaceable>|
		<replaceable>stop</replaceable>|
		<replaceable>restart</replaceable>|
		<replaceable>reload</replaceable>]</para>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-server</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-search.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa search Configuration file manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-search.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-search.cfg</refname>
		<refpurpose>The Zarafa Search configuration file</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>search.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>search.cfg</filename> is a configuration file for
		the Zarafa Search Service. <filename>search.cfg</filename>
		contains instructions for the software to set up the connection,
		indexing and logging systems.</para>
	  </refsection>

	  <refsection>
		<title>File format</title>

		<para>The file consists of one big section, but parameters can be
		grouped by functionality.</para>

		<para>The parameters are written in the form:</para>

		<para><option>name</option> = <replaceable>value</replaceable></para>

		<para>The file is line-based. Each newline-terminated line
		represents either a comment, nothing, a parameter or a directive.
		A line beginning with `#' is considered a comment, and will be
		ignored	by Zarafa. Parameter names are case sensitive. Lines
		beginning with `!' are directives.</para>

		<para>Directives are written in the form:</para>

		<para>!<option>directive</option> <replaceable>[argument(s)]
		</replaceable></para>

		<para>The following directives exist:</para>
		<variablelist>
		  <varlistentry>
		    <term><option>include</option></term>
		    <listitem>
		      <para>Include and process <replaceable>argument</replaceable>
		      </para>
		      <para>Example: !include common.cfg</para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the Service Settings parameters</title>

		<variablelist>

		  <varlistentry>
			<term><option>index_path</option></term>
			<listitem>
			  <para>Directory under which all index files will be placed.</para>
			  <para>Default: <replaceable>/var/lib/zarafa/index/</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_user</option></term>
			<listitem>
			  <para>After correctly starting, the server process will
			  become this user, dropping root privileges. Note that
			  the log file needs to be writeable by this user, and the
			  directory too to create new logfiles after
			  logrotation. This can also be achieved by setting the
			  correct group and permissions.
			  </para>
			  <para>Default value is empty, not changing the user
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_group</option></term>
			<listitem>
			  <para>After correctly starting, the server process will
			  become this group, dropping root privileges.
			  </para>
			  <para>Default value is empty, not changing the group
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pid_file</option></term>
			<listitem>
			  <para>Write the process ID number to this file. This is
			  used by the init.d script to correctly stop/restart the
			  service.
			  </para>
			  <para>Default:
			  <replaceable>/var/run/zarafa-search.pid</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>running_path</option></term>
			<listitem>
			  <para>Change directory to this path when running in
			  daemonize mode. When using the -F switch to run in the
			  foreground the directory will not be changed.
			  </para>
			  <para>Default:
			  <replaceable>/</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		  	<term><option>limit_results</option></term>
		  	<listitem>
		  	  <para>Limit the number of results returned to the server. If
		  	  set to a nonzero value, only the N most relevant results will
		  	  be returned to the server. This in turn limits the number of
		  	  results that the user will see. If the limit is set to 0, all
		  	  results will be returned.
		  	  </para>
		  	  <para>Default:<replaceable>0</replaceable>
		  	  </para>
		  	</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the Server Settings parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>server_socket</option></term>
			<listitem>
			  <para>Socket to find the connection to the Zarafa
			  server.</para>
			  <para>Default:
			  <parameter>file:///var/run/zarafa</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_key_file</option></term>
			<listitem>
			  <para>The file containing the private key and
			  certificate. Please read the SSL section in the
			  <citerefentry><refentrytitle>zarafa-server</refentrytitle>
			  <manvolnum>8</manvolnum></citerefentry> manual on how to
			  create this file.
			  </para>
			  <para>Default:
			  <replaceable>/etc/zarafa/ssl/search.pem</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_key_pass</option></term>
			<listitem>
			  <para>Enter you password here when your key file
			  contains a password to be readable.
			  </para>
			  <para>No default set.
			  </para>
			</listitem>
		  </varlistentry>

<!--
		  <varlistentry>
			<term><option>ssl_verify_client</option></term>
			<listitem>
			  <para>Enable client certificate verification with value
			  yes. All other values disable the verification.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_verify_file</option></term>
			<listitem>
			  <para>The file to verify the clients certificates
			  with.</para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_verify_path</option></term>
			<listitem>
			  <para>The path with the files to verify the clients
			  certificates with.</para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>
-->
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the Listen Settings parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>server_bind_name</option></term>
			<listitem>
			  <para>Connection path to which other processes can
			  connect with the zarafa-search for performing search
			  queries.</para><para>Use
			  <replaceable>http://0.0.0.0:port</replaceable> to listen
			  as an HTTP service on all network interfaces on the
			  given <replaceable>port</replaceable> number.</para>
			  <para>Default: <replaceable>file:///var/run/zarafa-search</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_private_key_file</option></term>
			<listitem>
			  <para>zarafa-search will use this file as private
			  key for SSL TLS. This file can be created with:
			  <command>openssl genrsa -out /etc/zarafa/search/privkey.pem 2048</command>.</para>
			  <para>Default:
			  <replaceable>/etc/zarafa/search/privkey.pem</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>ssl_certificate_file</option></term>
			<listitem>
			  <para>zarafa-search will use this file as
			  certificate for SSL TLS. A self-signed certificate
			  can be created with: <command>openssl req -new -x509
			  -key /etc/zarafa/search/privkey.pem -out /etc/zarafa/search/cert.pem
			  -days 1095</command>.</para>
			  <para>Default:
			  <replaceable>/etc/zarafa/search/cert.pem</replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the Log Settings parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>log_method</option></term>
			<listitem>
			  <para>The method which should be used for logging. Valid
			  values are:</para>

			  <variablelist>
				<varlistentry>
				  <term><replaceable>syslog</replaceable></term>
				  <listitem>
					<para>Use the Linux system log. All messages will
					be written to the mail facility. See also <citerefentry>
					<refentrytitle>syslog.conf</refentrytitle>
					<manvolnum>5</manvolnum>
					</citerefentry>.</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><replaceable>file</replaceable></term>
				  <listitem>
					<para>Log to a file. The filename will be
					specified in <option>log_file</option>.</para>
				  </listitem>
				</varlistentry>
			  </variablelist>
			  <para>Default: <replaceable>file</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_level</option></term>
			<listitem>
			  <para>The level of output for logging in the range from
			  0 to 5. 0 means no logging, 5 means full logging.</para>
			  <para>Default: <replaceable>2</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_file</option></term>
			<listitem>
			  <para>When logging to a file, specify the filename in
			  this parameter. Use <replaceable>-</replaceable> (minus
			  sign) for stderr output.</para>
			  <para>Default: <replaceable>/var/log/zarafa/search.log</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_timestamp</option></term>
			<listitem>
			  <para>Specify whether to prefix each log line with a
			  timestamp in 'file' logging mode.</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_buffer_size</option></term>
			<listitem>
			  <para>Buffer logging in what sized blocks.
                              Bigger buffers is better for the performance but it gives lag
                              when running e.g. multitail or 'tail -f' on the log-file. If
                              you want to directly see what is happing, set this to e.g. 1.
                              So when debugging: make it a small value, else set it to
                              4096 or more.</para>
			  <para>Default: <replaceable>4096</replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the Advanced Settings parameters</title>

		<variablelist>
		  <varlistentry>
		    <term><option>term_cache_size</option></term>
		    <listitem>
		      <para>The size in bytes of the term cache used when writing
		      terms to the index. A larger term cache will increase indexing
		      speed when indexing large number of documents in a single
		      store. This will barely affect incremental updates after the
		      initial indexing has finished. This value may contain a
			  k, m or g multiplier.
		      </para>
		      <para>Default: 64M</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>index_exclude_properties</option></term>
		    <listitem>
		      <para>Some properties are ignored because they contain
		      unrelated information for users to find their messages
		      on. A default set of ignored property ids is set here,
		      but can be expanded. Only the id part of a property is
		      needed, and must be string typed properties. The field
		      is space separated.
		      </para>
		      <para>Default: 007D 0064 0C1E 0075 678E 678F</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>index_processes</option></term>
		    <listitem>
		      <para>Number of indexing processes used during initial 
                      indexing. Setting this to a higher value can greatly 
                      speed up initial indexing, especially when attachments 
                      are indexed.
		      </para>
		      <para>Default: 1</para>
		    </listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>search_engine</option></term>
		    <listitem>
		      <para>Backend search engine (currently only xapian is 
                      supported).
		      </para>
		      <para>Default: xapian</para>
		    </listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>


	  <refsection>
		<title>Explanation of the Attachment Settings parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>index_attachments</option></term>
			<listitem>
			  <para>Enable indexing of attachments. When attachments are being indexed,
			  searching for keywords in the body of a message will automatically cause
			  the attachment to be searched as well.</para>
			  <para>This will slow down the indexing process, require more system memory
			  and increases index file size.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>index_attachment_max_size</option></term>
			<listitem>
			  <para>Maxiumum file size for attachments to be
			  indexed. Any attachment larger then this amount will not
			  be indexed. This value may contain a k, m or g
			  multiplier.</para>
			  <para>Default: <replaceable>5M</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>index_attachment_mime_filter</option></term>
			<listitem>
			  <para>Some attachments are not intresting to run through
			  the parser. With this option you can filter out
			  attachment which have a specific mimetype. Only the
			  first part of the mimetype should be given here. Good
			  examples of a mimetype to filter is 'image', 'audio' and
			  'video'. This field is space separated.</para>
			  <para>Default: <replaceable></replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
		    <term><option>index_attachment_extension_filter</option></term>
			<listitem>
			  <para>As the mime filter above, but works on the
				attachment extension. This is only tested if the
				mimetype of an attachment was unknown. Good examples
				of an extension to filter is 'gif', 'jpeg', 'jpg' and
				'png'. This field is space separated.</para>
			  <para>Default: <replaceable></replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>


	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-search</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>

	</refentry>

<!--
  -+-+-
	Zarafa Archiver manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-archiver</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-archiver</refname>
		<refpurpose>Manages zarafa archives and performs the archive operation.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-archiver</command>
		  <arg rep="repeat"><replaceable>OPTION</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>This tool is used to attach or detach archives to a
		users store. An archive is defined as a special non-active store
		or a folder inside such a store.</para>

		<para>On top of managing archives, this tool is used to perform
		the actual archive operation. Using the	<parameter>-u</parameter>
		option, the archiver can be instructed to archive a single
		store or all stores.</para>
	  </refsection>

	  <refsection>
		<title>Actions</title>
		<para>zarafa-archiver needs an action command with the appropriate
		options. Valid actions are:</para>

		<variablelist>
		  <varlistentry>
			<term><option>-l</option></term>
			<term><option>--list</option></term>
			<listitem>
			  <para>List archives for the specified user. The
			  <parameter>-u</parameter> option is required.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>-L</option></term>
			<term><option>--list-archiveusers</option></term>
			<listitem>
			  <para>List users that have an archive attached.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>-A</option></term>
			<term><option>--archive</option></term>
			<listitem>
			  <para>Perform an archive run. If a <parameter>-u</parameter>
			  option is provided, only the store of one user will be
			  archived. Otherwise all stores are archived. Optionally the
			  <parameter>--local-only</parameter> option can be set to only
			  archive stores that exist on the server to which
			  zarafa-archiver is connected (usually the local server).</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>-C</option></term>
			<term><option>--cleanup</option></term>
			<listitem>
			  <para>Perform an archive cleanup run. If a <parameter>-u</parameter>
			  option is provided, only the archives of one user will be
			  cleaned. Otherwise all stores are cleaned. Optionally the
			  <parameter>--local-only</parameter> option can be set to only
			  cleanup archives of users that have their primary store  on the
			  server to which  zarafa-archiver is connected (usually the local
			  server).</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-a</option>
			  <replaceable>archive</replaceable>
			</term>
			<term>
			  <option>--attach-to</option>
			  <replaceable>archive</replaceable>
			</term>
			<listitem>
			  <para>Attach an archive to the store of the user specified with
			  the <parameter>-u</parameter> option. If no additional options
			  are specified, a folder will be created in the archive store,
			  which will act as the root of the archive for the user. The
			  foldername will be set to the username of the user. This behavior
			  can be changed by providing the <parameter>--archive-folder
			  </parameter> or <parameter>--no-folder</parameter> option.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-d</option>
			  <replaceable>archive</replaceable>
			</term>
			<term>
			  <option>--detach-from</option>
			  <replaceable>archive</replaceable>
			</term>
			<listitem>
			  <para>Detach an archive from the store of the user specified
			  with the <parameter>-u</parameter> option. zarafa-archiver will automatically
			  determine which folder to detach. However if a user has two archives
			  in one archive store, zarafa-archiver won't be able to tell which one
			  needs to be detached. In this case the folder needs to be specified
			  with the <parameter>--archive-folder</parameter> option.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-D</option>
			  <replaceable>archiveno</replaceable>
			</term>
			<term>
			  <option>--detach</option>
			  <replaceable>archiveno</replaceable>
			</term>
			<listitem>
			  <para>Detach an archive from the store of the user specified
			  with the <parameter>-u</parameter> option. The archive to detach
			  is indicated by archiveno and can be obtained by running
			  <command>zarafa-archiver</command> <option>-u</option>
			  <replaceable>username</replaceable> <option>-l</option></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--auto-attach</option>
			</term>
			<listitem>
			  <para>When no user is specified with -u, all users
			  will have their archives attached or detached
			  based on the LDAP/ADS settings. If a user is
			  specified only that user's store will be processed.
			  This option can be combined with <parameter>-A</parameter> to
			  force an auto-attach run regardless of the
			  <parameter>enable_auto_attach</parameter> configuration option.
			  </para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>


	  <refsection>
		<title>Options</title>
		<para>The options used by actions are as follows:</para>

		<variablelist>
		  <varlistentry>
			<term>
			  <option>-u</option>
			  <replaceable>username</replaceable>
			</term>
			<listitem>
			  <para>Use this parameter to specify a user on which store
			  to perform the provided action.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--local-only</option>
			</term>
			<listitem>
			  <para>If this option is passed when an archive run is
			  started, only stores that exist on the server to which
			  zarafa-archiver is connected will be archived.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--archive-folder</option>
			  <replaceable>foldername</replaceable>
			</term>
			<listitem>
			  <para>Use this option to force zarafa-archiver to create
			  the archive folder with a different name than the username
			  of the user for whom to attach an archive.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--archive-server</option>
			  <replaceable>serverpath</replaceable>
			</term>
			<listitem>
			  <para>Use this option to specify the path to the archive
			  server. This is useful when using the archiver in a
			  non-multiserver setup.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--no-folder</option>
			</term>
			<listitem>
			  <para>Use this option to force zarafa-archiver to create
			  the root of the archive in the root of the archive store
			  (IPM subtree). This way only one user store can be attached
			  to an archive.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>-w</option></term>
			<listitem>
			  <para>By default zarafa-archiver makes an archive read-only
			  for the user. By passing this option, the user will get
			  read/write permissions in the attached archive.</para>
			  <para>This will override the <replaceable>auto_attach_writable
			  </replaceable> configuration options when auto attaching
			  archives.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--writable</option>
			  <replaceable>yes|no</replaceable>
			</term>
			<listitem>
			  <para>Explicitly enable or disable write permissions when
			  (auto) attaching archives.</para>
			  <para>This will override the <replaceable>auto_attach_writable
			  </replaceable> configuration options when auto attaching
			  archives.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-c</option>
			  <replaceable>file</replaceable>
			</term>
			<listitem>
			  <para>Select an alternate config file to be used by
			  zarafa-archiver.</para>
			  <para>Default: <replaceable>/etc/zarafa/archiver.cfg</replaceable></para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Examples</title>

		<para>For attaching an archive:</para>

		<para><command>zarafa-archiver</command> <option>-u</option>
		<replaceable>username</replaceable> <option>--attach-to</option>
		<replaceable>archive</replaceable></para>

		<para>For attaching an archive with a custom archive name:</para>

		<para><command>zarafa-archiver</command> <option>-u</option>
		<replaceable>username</replaceable> <option>--attach-to</option>
		<replaceable>archive</replaceable> <option>--archive-name</option>
		<replaceable>archivename</replaceable></para>

		<para>For attaching an archive without an archive folder:</para>

		<para><command>zarafa-archiver</command> <option>-u</option>
		<replaceable>username</replaceable> <option>--attach-to</option>
		<replaceable>archive</replaceable> <option>--no-folder</option></para>

		<para>For detaching an archive:</para>

		<para><command>zarafa-archiver</command> <option>-u</option>
		<replaceable>username</replaceable> <option>--detach-from</option>
		<replaceable>archive</replaceable></para>

		<para>For starting an archive run:</para>

		<para><command>zarafa-archiver</command> <option>-A</option></para>

		<para>For starting an archive run for one user:</para>

		<para><command>zarafa-archiver</command> <option>-u</option>
		<replaceable>username</replaceable> <option>-A</option></para>

		<para>For starting a cleanup run:</para>

		<para><command>zarafa-archiver</command> <option>-C</option></para>

		<para>For starting an cleanup run for one user:</para>

		<para><command>zarafa-archiver</command> <option>-u</option>
		<replaceable>username</replaceable> <option>-C</option></para>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-server</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-archiver.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Archiver config manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-archiver.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-archiver.cfg</refname>
		<refpurpose>The Zarafa archiver configuration file</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>archiver.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>archiver.cfg</filename> is a configuration
		file for the Zarafa Archiver. <filename>archiver.cfg</filename>
		contains instructions for the software to set up the logging
		system and specific actions the archiver can do.</para>
	  </refsection>

	  <refsection>
		<title>File format</title>

		<para>The file consists of one big section, but parameters can be
		grouped by functionality.</para>

		<para>The parameters are written in the form:</para>

		<para><option>name</option> = <replaceable>value</replaceable></para>

		<para>The file is line-based. Each newline-terminated line
		represents either a comment, nothing, a parameter or a directive.
		A line beginning with `#' is considered a comment, and will be
		ignored	by Zarafa. Parameter names are case sensitive. Lines
		beginning with `!' are directives.</para>

		<para>Directives are written in the form:</para>

		<para>!<option>directive</option> <replaceable>[argument(s)]
		</replaceable></para>

		<para>The following directives exist:</para>
		<variablelist>
		  <varlistentry>
		    <term><option>include</option></term>
		    <listitem>
		      <para>Include and process <replaceable>argument</replaceable>
		      </para>
		      <para>Example: !include common.cfg</para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of each parameter</title>

		<variablelist>
		  <varlistentry>
			<term><option>server_socket</option></term>
			<listitem>
			  <para>Unix socket to find the connection to the Zarafa
			  server.</para>
			  <para>Default:
			  <parameter>file:///var/run/zarafa</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_file</option></term>
			<listitem>
			  <para>Use this file as key to logon to the server. This
			  is only used when server_socket is set to an HTTPS
			  transport. See the
			  <citerefentry>
				<refentrytitle>zarafa-server</refentrytitle>
				<manvolnum>8</manvolnum>
			  </citerefentry>
			  manual page on how to setup SSL keys.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_pass</option></term>
			<listitem>
			  <para>The password of the SSL key file that is set in
			  sslkey_file.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>archive_enable</option></term>
			<listitem>
			  <para>Specifies if the archive step will be performed. The
			  archive step is basically the copy to the archive.
			  </para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>archive_after</option></term>
			<listitem>
			  <para>Specifies the age in days of a message before it will
			  be archived.
			  </para>
			  <para>Default: <replaceable>30</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>stub_enable</option></term>
			<listitem>
			  <para>Specifies if the stub step will be performed.
			  Stubbing is the process of removing the data from a message
			  and only leaving a reference to one or more archived versions
			  of that message. When such a message is opened it will be
			  de-stubbed on the fly, leaving the user with a normal message
			  to work with.
			  </para>
			  <para>A message will never be stubbed if it's not yet archived.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>stub_unread</option></term>
			<listitem>
			  <para>Specifies if unread messages will be stubbed.
			  </para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>stub_after</option></term>
			<listitem>
			  <para>Specifies the age in days of a message before it will
			  be stubbed.
			  </para>
			  <para>Default: <replaceable>0</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>delete_enable</option></term>
			<listitem>
			  <para>Specifies if the delete step will be performed.
			  The delete step deletes messages from the users store if
			  they're old enough. This way even more space is freed.
			  </para>
			  <para>A message will never be deleted if it's not yet archived.</para>
			  <para>A message will never be deleted from the archive.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>delete_unread</option></term>
			<listitem>
			  <para>Specifies if unread messages will be deleted.
			  </para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>delete_after</option></term>
			<listitem>
			  <para>Specifies the age in days of a message before it will
			  be deleted.
			  </para>
			  <para>Default: <replaceable>0</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>purge_enable</option></term>
			<listitem>
			  <para>Specifies if message will be purged from the
			  archive after a certain amount of time.
			  </para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>purge_after</option></term>
			<listitem>
			  <para>Specifies the age in days of a message before it
			  will be purged. *Note that the age is measured from
			  the time it was originally delivered in the primay
			  store.
			  </para>
			  <para>Default: <replaceable>0</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>track_history</option></term>
			<listitem>
			  <para>Specifies the behaviour of the archiver when
			  re-archiving messages that were changed after they
			  were archived. When track_history is set to no,
			  the archived version will be updated to contain the
			  most actual information. When track_history is set
			  to yes, a new copy of the message will be created
			  in the archive, and the previous version is linked
			  to it. This way the change history can be tracked.
			  </para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>cleanup_action</option></term>
			<listitem>
			  <para> Specify what action should be taken on archive messages
			  whose primary message has been deleted. The options are 'store'
			  and 'delete', meaning store the archived message in a special
			  'Deleted' folder or delete the archived messages respectively.
			  </para>
			  <para>Default: <replaceable>store</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>cleanup_follow_purge_after</option></term>
			<listitem>
			  <para>Specify if items that are cleaned up from the archive
			  are at least the age that is specified in the purge_after
			  setting. This is to avoid messages being deleted from the
			  archive when they where deleted from the primary store by a
			  delete operation. Note that setting to yes, will cause a
			  cleanup run to seemingly do nothing. A rule of thumb is to
			  set this to the same value as delete_enable. So when
			  delete_enable is set to yes, make sure
			  cleanup_follow_purge_after is also set to yes.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>enable_auto_attach</option></term>
			<listitem>
			  <para> Specify whether on each archive run an auto-attach run
			  is performed in order to match the attached archives to the
			  requested state as specified in LDAP or ADS.
			  </para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>auto_attach_writable</option></term>
			<listitem>
			  <para>Specify whether an auto attached archive will be granted
			  write permissions for the user it's attached to.
			  </para>
			  <para>Default: <replaceable>yes</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_method</option></term>
			<listitem>
			  <para>The method which should be used for logging. Valid
			  values are:</para>

			  <variablelist>
				<varlistentry>
				  <term><replaceable>syslog</replaceable></term>
				  <listitem>
					<para>Use the Linux system log. All messages will
					be written to the mail facility. See also <citerefentry>
					<refentrytitle>syslog.conf</refentrytitle>
					<manvolnum>5</manvolnum>
					</citerefentry>.</para>
				  </listitem>
				</varlistentry>

				<varlistentry>
				  <term><replaceable>file</replaceable></term>
				  <listitem>
					<para>Log to a file. The filename will be
					specified in <option>log_file</option>.</para>
				  </listitem>
				</varlistentry>
			  </variablelist>

			  <para>Default: <replaceable>file</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_file</option></term>
			<listitem>
			  <para>When logging to a file, specify the filename in
			  this parameter. Use <replaceable>-</replaceable> (minus
			  sign) for stderr output.</para>
			  <para>Default: <replaceable>-</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_timestamp</option></term>
			<listitem>
			  <para>Specify whether to prefix each log line with a
			  timestamp in 'file' logging mode.</para>
			  <para>Default: <replaceable>1</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_buffer_size</option></term>
			<listitem>
			  <para>Buffer logging in what sized blocks.
                              Bigger buffers is better for the performance but it gives lag
                              when running e.g. multitail or 'tail -f' on the log-file. If
                              you want to directly see what is happing, set this to e.g. 1.
                              So when debugging: make it a small value, else set it to
                              4096 or more.</para>
			  <para>Default: <replaceable>4096</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_level</option></term>
			<listitem>
			  <para>The level of output for logging in the range from
			  0 to 5. 0 means no logging, 5 means full logging.</para>
			  <para>Default: <replaceable>2</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pid_file</option></term>
			<listitem>
			  <para>The location of the pid file used to guarantee
              only one instance of zarafa-archiver is running
              in non-administrative mode.</para>
			  <para>Default: <replaceable>/var/run/zarafa-archiver.pid
			  </replaceable></para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Explanation of the MySQL Settings parameters</title>

		<variablelist>
		  <varlistentry>
			<term><option>mysql_host</option></term>
			<listitem>
			  <para>The hostname of the MySQL server to use.</para>
			  <para>Default:
			  <replaceable>localhost</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>mysql_port</option></term>
			<listitem>
			  <para>The port of the MySQL server to use.</para>
			  <para>Default: <replaceable>3306</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>mysql_user</option></term>
			<listitem>
			  <para>The user under which we connect with MySQL.</para>
			  <para>Default: <replaceable>root</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>mysql_password</option></term>
			<listitem>
			  <para>The password to use for MySQL. Leave empty for no
			  password.</para>
			  <para>Default: <replaceable></replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>mysql_socket</option></term>
			<listitem>
				<para>The socket of the MySQL server to use. This option
						can be used to override the default mysql socket.
						To use the socket, the mysql_host value must be
						empty or 'localhost'</para>
			  <para>Default: <replaceable></replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>mysql_database</option></term>
			<listitem>
			  <para>The MySQL database to connect to.</para>
			  <para>Default: <replaceable>zarafa</replaceable></para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Files</title>

		<variablelist>
		  <varlistentry>
			<term><filename>/etc/zarafa/archiver.cfg</filename></term>
			<listitem>
			  <para>The Zarafa archiver configuration file.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-archiver</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>


 <!--
  -+-+-
	Mailbox Storage Relocator manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-msr</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-msr</refname>
		<refpurpose>Relocates mailboxes from one node to another.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-msr</command>
		  <arg><replaceable>CONFIG</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>In order to move mailboxes between multi-server nodes, the
		mailbox storage relocator is available. The <command>zarafa-msr
		</command> tool should be used to relocate mailboxes to other
		multi-server nodes.</para>
	  </refsection>

	  <refsection>
		<title>Invocation</title>

		<para>The only argument required by <command>zarafa-msr</command> is an
		configuration file specifying the details of the relocation operation.
		</para>

		<para><command>zarafa-msr</command> <replaceable>CONFIG</replaceable>
		</para>

		<para>When <command>zarafa-msr</command> is finished with relocating
		all mailboxes, it will print</para>

		<para>"x migrations have completed successfully, maintaining sync."
		</para>

		<para>where x denotes the number of migrated mailboxes. The
		administrator can now stop <command>zarafa-msr</command> by pressing
		Ctrl-C.</para>

		<para><command>zarafa-msr</command> can safely be stopped at any time
		by pressing Ctrl-C. On the next run it will continue where it left off
		when it was stopped.</para>
	  </refsection>

	  <refsection>
		<title>Updating LDAP/ADS</title>

		<para>There are two situations in which it’s safe to update the home
		servers for the users whose mailboxes have been relocated:</para>

		<para> 1. <command>zarafa-msr</command> is still running. In this case all
		changes in the original mailbox will continue to be propagated to
		the new mailbox.</para>

		<para>2. No changes in the original mailbox can occur.</para>

		<para>NOTE: Running <command>zarafa-msr</command> after the LDAP/ADS
		has been modified will not work, because it will automatically connect
		to the new server for the source mailbox.</para>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-msr.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-msr-verify</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Mailbox Storage Relocator config manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-msr.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-msr.cfg</refname>
		<refpurpose>The Mailbox Storage Relocator configuration file
		</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>zarafa-msr.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>zarafa-msr.cfg</filename> is a configuration
		file for the Mailbox Storage Relocator. <filename>zarafa-msr.cfg
		</filename> contains instructions for the software to set up the
		connection with the cluster and describe which user stores are to be
		relocated to which node.</para>
	  </refsection>

	  <refsection>
		<title>File format</title>

		<para>The <filename>zarafa-msr.cfg</filename> file contains of three
		sections:</para>

		<para>Connection: This section contains information on how to connect to
		a particular node in the multi-server cluster.</para>

		<para>Servers: This section is an optional section that contains a list
		of server aliases. These aliases can be used in the Mapping section
		when a lot of mailboxes are relocated to the same server.</para>

		<para>Mapping: This section contains the list of usernames and the
		destination node for their mailboxes. The destination node can be a
		full server path or an alias specified in the Servers section.</para>
	  </refsection>

	  <refsection>
		<title>The Connection Section</title>

		<para>The connection setting contains the following options:</para>

		<variablelist>
		  <varlistentry>
			<term><option>serverpath</option></term>
			<listitem>
			  <para>Path to the server. Can be any node in the cluster.</para>
			  <para>Default:
			  <parameter>file:///var/run/zarafa</parameter></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_file</option></term>
			<listitem>
			  <para>Path the the SSL key file.</para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_pass</option></term>
			<listitem>
			  <para>Password for the SSL key specified with sslkey_file.</para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>bidirectional</option></term>
			<listitem>
			  <para>If yes, then perform bidirectional synchronization
			  between source and destination stores. If no, then only
			  unidirectional (migration) replication is used (from source to
			  dest)</para>
			  <para>Default: yes</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>workers</option></term>
			<listitem>
			  <para>Specifies the number of parallel workers to use to
			  migrate the stores.</para>
			  <para>Default: 4</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>force_source</option></term>
			<listitem>
			  <para>Normally, the source server is only used to provide an
			  entry point into the source cluster; If the store of the user
			  to be migrated is on a different host, then zarafa-msr
			  automatically redirects to the correct source server. If this
			  option is 'yes', then no such redirection is performed. This
			  is useful if the user has already been migrated to the
			  new (destination) server, and a final MSR sync is required
			  between the old store and the new (active) store. If you fail
			  to set force_source to 'yes' in this case, MSR will fail
			  since source and destination store will be the same.</para>
			  <para>Default: no</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>The Servers Section</title>

		<para>The servers section has no predefined options. Instead the format
		is</para>

		<para><replaceable>server_alias</replaceable>: <replaceable>server_path</replaceable></para>

		<para>As many items as needed can be placed in this section.</para>
	  </refsection>

	  <refsection>
		<title>The Mapping Section</title>

		<para>The mapping section has no predefined options. Instead, the format
		is</para>

		<para><replaceable>username</replaceable>: <replaceable>destination_node</replaceable></para>

		<para>destination_node can either be the full path to the node or a
		reference to one of the servers from the Servers section. In the case
		of a reference, the syntax is</para>

		<para><replaceable>username</replaceable>: %(<replaceable>server_alias</replaceable>)s</para>

		<para>As many items as needed can be placed in this section.</para>

		<para>To relocate the public store a special name should be used for the
		username:</para>

		<para>1. In a multi-tenant environment, the name of the tenant for which
		to relocate the public store must be used.</para>

		<para>2. In a single-tenant environment, the special name __public__ must
		be used.</para>
	  </refsection>

	  <refsection>
		<title>The Logging Section</title>

		<para>The logging setting contains the following options:</para>

		<variablelist>
		  <varlistentry>
			<term><option>log_file</option></term>
			<listitem>
			  <para>Path of the log file to write to.</para>
			  <para>Default:
			  <parameter>zarafa-msr.log</parameter> (in the working directory)</para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-msr</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

 <!--
  -+-+-
	Mailbox Storage Relocator Verify manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-msr-verify</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-msr-verify</refname>
		<refpurpose>Compares the content of the source and
		destination store after a relocation.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-msr</command>
		  <arg><replaceable>OPTIONS</replaceable></arg>
		  <arg><replaceable>CONFIG</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>Once a user has been relocated from one multi-server
		node to another, this tool can be used to compare the
		content of the two stores in order to verify if all messages
		have realy been relocated.</para>

		<para>The config file is expected to be in the same format as
		the one used for <replaceable>zarafa-msr</replaceable>.
		Usually the same configuration file should be used.</para>
	  </refsection>

	  <refsection>
		<title>Options</title>

		<variablelist>
		  <varlistentry>
			<term>
			  <option>--correct</option>
			</term>
			<listitem>
			  <para>Attempt to correct mismatches. Currently
			  this only removes messages that exist in the
			  destination store but not in the source store.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--help</option>
			</term>
			<listitem>
			  <para>Show a help message.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-msr.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>,
		  <citerefentry>
			<refentrytitle>zarafa-msr</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa 7 Upgrade
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa7-upgrade</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa7-upgrade</refname>
		<refpurpose>Upgrades a Zarafa database from version 6.40 to version 7.0.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa7-upgrade</command>
		  <arg><replaceable>CONFIG</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Options</title>
		<para>The options used by actions are as follows:</para>
		<variablelist>
		  <varlistentry>
			<term><option>-h</option></term>
			<term><option>--help</option></term>
			<listitem>
			  <para>Print help message and exit.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Description</title>

		<para>Due to the probable long duration of a database upgrade from
		version 6.40 to version 7.0 the server by default refuses to upgrade
		the database. This tool is used to perform the database upgrade.</para>
		<para>This script does exactly what the server would do with the
		<replaceable>--force-database-upgrade</replaceable> option passed with
		the difference that it will show progress indication.</para>
	  </refsection>

	  <refsection>
		<title>Invocation</title>

		<para>The only optional argument required by <command>zarafa7-upgrade
		</command> is the configuration file of the <command>zarafa-server
		</command> for which the database needs upgrading. Usualy this is
		<replaceable>/etc/zarafa/server.cfg</replaceable>. This is also the
		default when the server configuration is omitted.</para>

		<para><command>zarafa7-upgrade</command> <replaceable>CONFIG</replaceable></para>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>
	</refentry>


 <!--
  -+-+-
	Zarafa Archive ACL Sync manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>za-aclsync</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>za-aclsync</refname>
		<refpurpose>Synchronizes archive ACL settings with those of the
		primary store.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>za-aclsync</command>
		  <arg rep="repeat"><replaceable>OPTION</replaceable></arg>
		  <arg rep="repeat"><replaceable>USERS</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>When a user has set permissions for others on his or her store
		or folders, the other user will need at least read-permissions on this
		persons archive as well in order to read stubbed messages or access
		the archive directly. These permissions can not be set by the owner of
		the archive if the archive was attached without write privileges. Even
		if the user has write permissions, it's a nuisance to have to set all
		the permissions twice (or more if multiple archives are attached).
		</para>

		<para><command>za-aclsync</command> can be used to propagate the
		ACL settings from the primary store to the archives. However, no user
		will ever get more right on a store or folder than the owner of the
		archive. So if the archive was attached without write permissions, no
		user will get write permissions on the archive.</para>

		<para>For every archived foler in an archived store <command>za-aclsync
		</command>will first determine the rights for the owner of the archive.
		Then it will get all the entries from the ACL of the current folder
		except those of the owner. Each right will be masked with the rights
		of the owner before being added to the ACL of the archive folder.</para>
	  </refsection>

	  <refsection>
		<title>Options</title>

		<variablelist>
		  <varlistentry>
			<term>
			  <option>-h</option>
			  <replaceable>serverpath</replaceable>
			</term>
			<listitem>
			  <para>Host to connect with.</para>
			  <para>Default: <replaceable>file:///var/run/zarafa
			  </replaceable></para>
			  <para>Three formats are allowed for this option:</para>
			  <para><option>UNIX socket</option> : file://<replaceable>path_to_the_UNIX_socket</replaceable></para>
			  <para><option>HTTP</option> : http://<replaceable>host_or_IP</replaceable>:<replaceable>port</replaceable>/zarafa</para>
			  <para><option>Secure HTTP</option> : https://<replaceable>host_or_IP</replaceable>:<replaceable>port</replaceable>/zarafa</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-s</option>
			  <replaceable>sslkey-file</replaceable>
			</term>
			<listitem>
			  <para>SSL key file for authentication.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-p</option>
			  <replaceable>sslkey-pass</replaceable>
			</term>
			<listitem>
			  <para>Password for the SSL key file.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	</refentry>

<!--
  -+-+-
	Zarafa Archive ACL Set manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>za-aclset</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>za-aclset</refname>
		<refpurpose>Reset the archive ACL settings for the owner.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>za-aclset</command>
		  <arg rep="repeat"><replaceable>OPTION</replaceable></arg>
		  <arg rep="repeat"><replaceable>USERS</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>
		<para><command>za-aclset</command> sets or updates the permissions on
		an archive store for the owner of that store.</para>
		
		<para>When an archive is attached to a store, the owner of the store
		gets read-only or read/write permissions on the archive based on the
		configuration or command line options passed at the time of attaching.
		Also when an archive is attached to a store of a non-active user, no
		permissions for that non-active user are set because that's not
		possible.</para>
		
		<para>In the first case it can be desirable to change the permissions
		at a later time because of company policy changes or because the
		original setting was just wrong.</para>
		
		<para>In the second case, if the user is converted to an active user,
		it's required to reset the permissions because the owner won't have
		any permissions on his archive.</para>
	  </refsection>

	  <refsection>
		<title>Options</title>

		<variablelist>
		  <varlistentry>
			<term>
			  <option>-h</option>
			  <replaceable>serverpath</replaceable>
			</term>
			<listitem>
			  <para>Host to connect with.</para>
			  <para>Default: <replaceable>file:///var/run/zarafa
			  </replaceable></para>
			  <para>Three formats are allowed for this option:</para>
			  <para><option>UNIX socket</option> : file://<replaceable>path_to_the_UNIX_socket</replaceable></para>
			  <para><option>HTTP</option> : http://<replaceable>host_or_IP</replaceable>:<replaceable>port</replaceable>/zarafa</para>
			  <para><option>Secure HTTP</option> : https://<replaceable>host_or_IP</replaceable>:<replaceable>port</replaceable>/zarafa</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-s</option>
			  <replaceable>sslkey-file</replaceable>
			</term>
			<listitem>
			  <para>SSL key file for authentication.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-p</option>
			  <replaceable>sslkey-pass</replaceable>
			</term>
			<listitem>
			  <para>Password for the SSL key file.</para>
			</listitem>
		  </varlistentry>
		  
		  <varlistentry>
			<term><option>-w</option></term>
			<listitem>
			  <para>By default <command>za-aclset</command> makes an archive read-only
			  for the user. By passing this option, the user will get
			  read/write permissions in the attached archive.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--writable</option>
			  <replaceable>yes|no</replaceable>
			</term>
			<listitem>
			  <para>Explicitly enable or disable write permissions when
			  setting permissions.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	</refentry>

<!--
  -+-+-
	Zarafa Archive Restore manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>za-restore</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>za-restore</refname>
		<refpurpose>Restore all stubbed and removed messages in a primary store
		with the messages found in the currently or previously attached
		archives(s).</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>za-restore</command>
		  <arg rep="repeat"><replaceable>OPTION</replaceable></arg>
		  <arg rep="repeat"><replaceable>USER</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>za-restore can be used to repopulate a primary store to a state
		where no archive is required to read any message. In a less cryptic way
		this means that all stubbed messages are destubbed and all messages that
		were deleted after archiving are restored.</para>

		<para>The advantage of using za-restore over dragging the messages back
		from the archive in Outlook or Webaccess is that the restores messages
		are sanitized, allowing them to be properly rearchived later.</para>
	  </refsection>

	  <refsection>
		<title>Strategy</title>

		<para>The strategy taken by za-restore is that it iterates through all
		folder in the primary store, and tries to open the archive folders that
		are attached to that store. There can be more than one attached archive
		folder, and these folders are not required to exist in an archive that
		is currently attached. So folders of previously used archives will be
		restored as well if they still exist.</para>

		<para>Once the archives have been resolved, za-restore will create a list
		of restorable messages based on the reference entryid found in the
		archived copies. When multiple archives are found, multiple archived
		copies for the same primary message can exist. In that case za-restore
		will choose the most recent one.</para>

		<para>Once the list of restorable messages is complete, za-restore will
		start restoring by first determining if the primary message, referenced
		by the reference entryid from the archived copies exist and if so if it
		is stubbed. If the primary message exists and is not stubbed, there's
		no need to restore anything. If the message exists but is stubbed, it
		will be destubbed. If the primary message does not exist, a new message
		is created based on the archived copy. In this case the archived copy
		is updated so it will reference the newly created message. This is
		needed to make sure a subsequent run of za-restore won't create another
		copy.</para>

	  </refsection>

	  <refsection>
		<title>Options</title>

		<variablelist>
		  <varlistentry>
			<term>
			  <option>-h</option>
			  <replaceable>serverpath</replaceable>
			</term>
			<listitem>
			  <para>Host to connect with.</para>
			  <para>Default: <replaceable>file:///var/run/zarafa</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-s</option>
			  <replaceable>sslkey-file</replaceable>
			</term>
			<listitem>
			  <para>SSL key file for authentication.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-p</option>
			  <replaceable>sslkey-pass</replaceable>
			</term>
			<listitem>
			  <para>Password for the SSL key file.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-l</option>
			  <replaceable>log_file</replaceable>
			</term>
			<listitem>
			  <para>Select the logfile to log to.</para>
			  <para>Default: <replaceable>za-restore.log</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--detach</option>
			</term>
			<listitem>
			  <para>Detach the selected or all archive stores before starting
			  the restore procedure. This avoids the archiver from re archiving
			  restored messages.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--unhook</option>
			</term>
			<listitem>
			  <para>Unhook the selected ot all archive stores once the restore
			  process has completed. This implies --detach and only works on
			  archive stores.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--remove</option>
			</term>
			<listitem>
			  <para>Remove the selected ot all archive stores once the restore
			  process has completed. This implies--unhook and only works on
			  archive stores.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--select-source</option>
			</term>
			<listitem>
			  <para>Select the source archive(s) by providing a comma separated
			  list of archive indexes. The indexes specify which archives to
			  restore from. The --detach, --unhook and --remove options only
			  apply to the selected archives."</para>
			  <para>The archive indexes can be obtained by listing the attached
			  archives for a user: zarafa-archiver -u <replaceable>user
			  </replaceable> -l.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-v</option>
			  <replaceable>verbose</replaceable>
			</term>
			<listitem>
			  <para>Increase console loglevel. Can be specified multiple times.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-q</option>
			  <replaceable>quiet</replaceable>
			</term>
			<listitem>
			  <para>Decrease console loglevel. Can be specified multiple times.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>-N</option>
			  <replaceable>dry-run</replaceable>
			</term>
			<listitem>
			  <para>Don't actually modify anything.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--help</option>
			</term>
			<listitem>
			  <para>Show the help message on the console.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term>
			  <option>--log-log-source</option>
			</term>
			<listitem>
			  <para>Log the source file and line numbers in the log file. This
			  is only useful for debugging purposes.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	</refentry>

<!--
  -+-+-
	Zarafa Web Services manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-ws</refentrytitle>
		<manvolnum>8</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-ws</refname>
		<refpurpose>Zarafa Web Services adds access to clients which
		use the Exchange Web Services protocol.</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<cmdsynopsis>
		  <command>zarafa-ws</command>
		  <arg rep="repeat"><replaceable>OPTION</replaceable></arg>
		</cmdsynopsis>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>Zarafa Web Services gives access to a whole new range of
		clients, like Outlook 2011 for Mac, Evolution and many
		others.</para>

		<para>There are also a lot of other systems which use EWS to
		communicate with MAPI providers, which now can also be
		used.</para>

		<para>The default settings of the zarafa-ws service are defined
		in <citerefentry>
		<refentrytitle>zarafa-ws.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
		</citerefentry>.
		</para>
	  </refsection>

	  <refsection>
		<title>Options</title>

		<variablelist>
		  <varlistentry>
			<term><option>--config</option></term>
			<term>
			  <option>-c</option>
			  <replaceable>ws.cfg</replaceable>
			</term>
			<listitem>
			  <para>Specify the location of the ws.cfg file. If the
			  ws.cfg file is not specified, the zarafa-ws service
			  will try to use /etc/zarafa/ws.cfg or continue using
			  its default settings.</para>
			  <para>Default: <replaceable>/etc/zarafa/ws.cfg</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--foreground</option></term>
			<term><option>-F</option></term>
			<listitem>
			  <para>Run in the foreground. Normally the gateway
			  will daemonize and run in the background.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>--threaded</option></term>
			<listitem>
			  <para>Run requests in threads instead of forks. Not
			  recommended.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Usage</title>

		<para>To start the zarafa-ws service:</para>

		<para><command>zarafa-ws</command></para>

		<para>The process will keep running. You may also use
		the init.d scripts:</para>

		<para><command>/etc/init.d/zarafa-ws</command>
		[<replaceable>start</replaceable>|
		<replaceable>stop</replaceable>|
		<replaceable>restart</replaceable>]</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-ws.cfg</refentrytitle>
			<manvolnum>5</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>
	</refentry>

<!--
  -+-+-
	Zarafa Web Services Configuration file manual page
  -+-+-
-->
	<refentry>
	  <refmeta>
		<refentrytitle>zarafa-ws.cfg</refentrytitle>
		<manvolnum>5</manvolnum>
	  </refmeta>

	  <refnamediv>
		<refname>zarafa-ws.cfg</refname>
		<refpurpose>The Zarafa Web Services configuration file</refpurpose>
	  </refnamediv>

	  <refsynopsisdiv>
		<para><command>ws.cfg</command></para>
	  </refsynopsisdiv>

	  <refsection>
		<title>Description</title>

		<para>The <filename>ws.cfg</filename> is a configuration
		file for the Zarafa Web Services. <filename>ws.cfg</filename>
		contains instructions for the software to set up the logging
		system and to enable incoming SSL connections.</para>
	  </refsection>

	  <refsection>
		<title>File format</title>
		
		<para>The file consists of one big section, but parameters can be
		grouped by functionality.</para>

		<para>The parameters are written in the form:</para>

		<para><option>name</option> = <replaceable>value</replaceable></para>

		<para>The file is line-based. Each newline-terminated line
		represents either a comment, nothing, a parameter or a directive.
		A line beginning with `#' is considered a comment, and will be
		ignored	by Zarafa. Parameter names are case sensitive.</para>
	  </refsection>

	  <refsection>
		<title>Explanation of each parameter</title>

		<variablelist>
		  <varlistentry>
			<term><option>server_bind</option></term>
			<listitem>
			  <para>IP address to bind to. 0.0.0.0 for any address.</para>
			  <para>Default: <replaceable>0.0.0.0</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_port</option></term>
			<listitem>
			  <para>Listen on this port for incoming connections.</para>
			  <para>Default: <replaceable>808</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_ssl_enable</option></term>
			<listitem>
			  <para>To enable incoming SSL connections, set this to
			  'yes' and provide an SSL certificate file without an
			  password in server_ssl_keyfile.</para>
			  <para>Default: <replaceable>no</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_ssl_keyfile</option></term>
			<listitem>
			  <para>A PEM encoded ssl private certificate to use for
			  incoming SSL connections.</para>
			  <para>Default: <replaceable></replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_ssl_keypass</option></term>
			<listitem>
			  <para>The password which decodes the
			  <replaceable>server_ssl_keyfile</replaceable>
			  certificate.</para>
			  <para>Default: <replaceable></replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_http_compression_allow</option></term>
			<listitem>
			  <para>Enable or disable HTTP compression in the
			  service.</para>
			  <para>Default: <replaceable>true</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_http_chunksize</option></term>
			<listitem>
			  <para>The maximum HTTP chunk to send.</para>
			  <para>Default: <replaceable>512kib</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>server_socket</option></term>
			<listitem>
			  <para>The Zarafa server socket to connect to. Either use
			  the unix socket, or the SSL socket of Zarafa.</para>
			  <para>Default: <replaceable>file://var/run/zarafa</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_file</option></term>
			<listitem>
			  <para>Use this file as key to logon to the server. This
			  is only used when server_socket is set to an HTTPS
			  transport, or when using a multi-server setup. See the
			  <citerefentry>
				<refentrytitle>zarafa-server</refentrytitle>
				<manvolnum>8</manvolnum>
			  </citerefentry>
			  manual page on how to setup SSL keys.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>sslkey_pass</option></term>
			<listitem>
			  <para>The password of the SSL key file that is set in
			  sslkey_file.
			  </para>
			  <para>Default: value not set.</para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_user</option></term>
			<listitem>
			  <para>After correctly starting, the gateway process will
			  become this user, dropping root privileges. Note that
			  the log file needs to be writeable by this user, and the
			  directory too to create new logfiles after
			  logrotation. This can also be achieved by setting the
			  correct group and permissions.
			  </para>
			  <para>Default value is empty, not changing the user
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>run_as_group</option></term>
			<listitem>
			  <para>After correctly starting, the gateway process will
			  become this group, dropping root privileges.
			  </para>
			  <para>Default value is empty, not changing the group
			  after starting.
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>running_path</option></term>
			<listitem>
			  <para>Change directory to this path when running in
			  daemonize mode. When using the -F switch to run in the
			  foreground the directory will not be changed.
			  </para>
			  <para>Default:
			  <replaceable>/</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>pid_file</option></term>
			<listitem>
			  <para>Write the process ID number to this file. This is
			  used by the init.d script to correctly stop/restart the
			  service.
			  </para>
			  <para>Default:
			  <replaceable>/var/run/zarafa-ws.pid</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>process_model</option></term>
			<listitem>
			  <para>You can change the process model between
			  <replaceable>fork</replaceable> and
			  <replaceable>threaded</replaceable>. The forked model uses
			  somewhat more resources, but if a crash is triggered,
			  this will only affect one user. In the threaded model, a
			  crash means all users are affected, and will not be able
			  to use the service.</para>
			  <para>Default:
			  <replaceable>fork</replaceable>
			  </para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_file</option></term>
			<listitem>
			  <para>Specify the filename of the log in this parameter. Use
			  <replaceable>-</replaceable> (minus sign) for stderr
			  output.</para>
			  <para>Default: <replaceable>/var/log/zarafa/ws.log</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_level</option></term>
			<listitem>
			  <para>The level of output for logging. The following words are available, each level includes the previous:
			  fatal, error, warning, info, debug.</para>
			  <para>Default: <replaceable>error</replaceable></para>
			</listitem>
		  </varlistentry>

		  <varlistentry>
			<term><option>log_dev_info</option></term>
			<listitem>
			  <para>Enable special development logging.</para>
			  <para>Default: <replaceable>false</replaceable></para>
			</listitem>
		  </varlistentry>

		</variablelist>
	  </refsection>

	  <refsection>
		<title>Files</title>

		<variablelist>
		  <varlistentry>
			<term><filename>/etc/zarafa/ws.cfg</filename></term>
			<listitem>
			  <para>The Zarafa Web Services configuration file.</para>
			</listitem>
		  </varlistentry>
		</variablelist>
	  </refsection>

	  <refsection>
		<title>Author</title>
		<para>Written by Zarafa.</para>
	  </refsection>

	  <refsection>
		<title>See also</title>
		<para>
		  <citerefentry>
			<refentrytitle>zarafa-ws</refentrytitle>
			<manvolnum>8</manvolnum>
		  </citerefentry>
		</para>
	  </refsection>
	</refentry>
	
  </reference>
</book>

